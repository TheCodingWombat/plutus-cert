Resolving dependencies...
Build profile: -w ghc-8.10.2.20201118 -O1
In order, the following will be built (use -v for more details):
 - example-0.1.0.0 (lib) (configuration changed)
Configuring library for example-0.1.0.0..
Preprocessing library for example-0.1.0.0..
Building library for example-0.1.0.0..
[1 of 1] Compiling Lib              ( src/Lib.hs, /home/jacco/uni/research/projects/example/dist-newstyle/build/x86_64-linux/ghc-8.10.2.20201118/example-0.1.0.0/build/Lib.o, /home/jacco/uni/research/projects/example/dist-newstyle/build/x86_64-linux/ghc-8.10.2.20201118/example-0.1.0.0/build/Lib.dyn_o )

==================== Simplifier statistics ====================
Total ticks:     0




==================== Simplified expression ====================
Language.PlutusTx.TH.compile
  @ (Lib.EndDate -> GHC.Integer.Type.Integer -> GHC.Types.Bool)
  (Language.Haskell.TH.Syntax.unsafeTExpCoerce
     @ 'GHC.Types.LiftedRep
     @ (Lib.EndDate -> GHC.Integer.Type.Integer -> GHC.Types.Bool)
     (Language.Haskell.TH.Syntax.bindQ
        @ Language.Haskell.TH.Syntax.Name
        @ Language.Haskell.TH.Syntax.Exp
        (Language.Haskell.TH.Syntax.newName
           (GHC.CString.unpackCString# "end"#))
        (\ (end_a3Sp :: Language.Haskell.TH.Syntax.Name) ->
           Language.Haskell.TH.Syntax.bindQ
             @ Language.Haskell.TH.Syntax.Name
             @ Language.Haskell.TH.Syntax.Exp
             (Language.Haskell.TH.Syntax.newName
                (GHC.CString.unpackCString# "current"#))
             (\ (current_a3Sq :: Language.Haskell.TH.Syntax.Name) ->
                Language.Haskell.TH.Lib.Internal.lamE
                  (GHC.Types.:
                     @ Language.Haskell.TH.Lib.Internal.PatQ
                     (Language.Haskell.TH.Lib.Internal.sigP
                        (Language.Haskell.TH.Lib.Internal.varP end_a3Sp)
                        (Language.Haskell.TH.Lib.Internal.conT
                           (Language.Haskell.TH.Syntax.mkNameG_tc
                              (GHC.CString.unpackCString# "example-0.1.0.0-inplace"#)
                              (GHC.CString.unpackCString# "Lib"#)
                              (GHC.CString.unpackCString# "EndDate"#))))
                     (GHC.Types.:
                        @ Language.Haskell.TH.Lib.Internal.PatQ
                        (Language.Haskell.TH.Lib.Internal.sigP
                           (Language.Haskell.TH.Lib.Internal.varP current_a3Sq)
                           (Language.Haskell.TH.Lib.Internal.conT
                              (Language.Haskell.TH.Syntax.mkNameG_tc
                                 (GHC.CString.unpackCString# "integer-wired-in"#)
                                 (GHC.CString.unpackCString# "GHC.Integer.Type"#)
                                 (GHC.CString.unpackCString# "Integer"#))))
                        (GHC.Types.[] @ Language.Haskell.TH.Lib.Internal.PatQ)))
                  (Language.Haskell.TH.Lib.Internal.caseE
                     (Language.Haskell.TH.Lib.Internal.varE end_a3Sp)
                     (GHC.Types.:
                        @ Language.Haskell.TH.Lib.Internal.MatchQ
                        (Language.Haskell.TH.Syntax.bindQ
                           @ Language.Haskell.TH.Syntax.Name
                           @ Language.Haskell.TH.Syntax.Match
                           (Language.Haskell.TH.Syntax.newName
                              (GHC.CString.unpackCString# "n"#))
                           (\ (n_a3Sr :: Language.Haskell.TH.Syntax.Name) ->
                              Language.Haskell.TH.Lib.Internal.match
                                (Language.Haskell.TH.Lib.Internal.conP
                                   (Language.Haskell.TH.Syntax.mkNameG_d
                                      (GHC.CString.unpackCString# "example-0.1.0.0-inplace"#)
                                      (GHC.CString.unpackCString# "Lib"#)
                                      (GHC.CString.unpackCString# "Fixed"#))
                                   (GHC.Types.:
                                      @ Language.Haskell.TH.Lib.Internal.PatQ
                                      (Language.Haskell.TH.Lib.Internal.varP n_a3Sr)
                                      (GHC.Types.[] @ Language.Haskell.TH.Lib.Internal.PatQ)))
                                (Language.Haskell.TH.Lib.Internal.normalB
                                   (Language.Haskell.TH.Lib.Internal.infixApp
                                      (Language.Haskell.TH.Lib.Internal.varE n_a3Sr)
                                      (Language.Haskell.TH.Lib.Internal.varE
                                         (Language.Haskell.TH.Syntax.mkNameG_v
                                            (GHC.CString.unpackCString#
                                               "plutus-tx-0.1.0.0-inplace"#)
                                            (GHC.CString.unpackCString#
                                               "Language.PlutusTx.Builtins"#)
                                            (GHC.CString.unpackCString# "lessThanEqInteger"#)))
                                      (Language.Haskell.TH.Lib.Internal.varE current_a3Sq)))
                                (GHC.Types.[] @ Language.Haskell.TH.Lib.Internal.DecQ)))
                        (GHC.Types.:
                           @ Language.Haskell.TH.Lib.Internal.MatchQ
                           (Language.Haskell.TH.Lib.Internal.match
                              (Language.Haskell.TH.Lib.Internal.conP
                                 (Language.Haskell.TH.Syntax.mkNameG_d
                                    (GHC.CString.unpackCString# "example-0.1.0.0-inplace"#)
                                    (GHC.CString.unpackCString# "Lib"#)
                                    (GHC.CString.unpackCString# "Never"#))
                                 (GHC.Types.[] @ Language.Haskell.TH.Lib.Internal.PatQ))
                              (Language.Haskell.TH.Lib.Internal.normalB
                                 (Language.Haskell.TH.Lib.Internal.conE
                                    (Language.Haskell.TH.Syntax.mkNameG_d
                                       (GHC.CString.unpackCString# "ghc-prim"#)
                                       (GHC.CString.unpackCString# "GHC.Types"#)
                                       (GHC.CString.unpackCString# "False"#))))
                              (GHC.Types.[] @ Language.Haskell.TH.Lib.Internal.DecQ))
                           (GHC.Types.[] @ Language.Haskell.TH.Lib.Internal.MatchQ))))))))


Loading package ghc-prim-0.6.1 ... linking ... done.
Loading package integer-gmp-1.0.3.0 ... linking ... done.
Loading package base-4.14.1.0 ... linking ... done.
Loading package array-0.5.4.0 ... linking ... done.
Loading package deepseq-1.4.4.0 ... linking ... done.
Loading package bytestring-0.10.10.0 ... linking ... done.
Loading package containers-0.6.2.1 ... linking ... done.
Loading package clock-0.8 ... linking ... done.
Loading package filepath-1.4.2.1 ... linking ... done.
Loading package time-1.9.3 ... linking ... done.
Loading package unix-2.7.2.2 ... linking ... done.
Loading package directory-1.3.6.0 ... linking ... done.
Loading package process-1.6.9.0 ... linking ... done.
Loading package extra-1.7.5 ... linking ... done.
Loading package dlist-0.8.0.8 ... linking ... done.
Loading package binary-0.8.8.0 ... linking ... done.
Loading package text-1.2.3.2 ... linking ... done.
Loading package hashable-1.3.0.0 ... linking ... done.
Loading package split-0.2.3.4 ... linking ... done.
Loading package transformers-0.5.6.2 ... linking ... done.
Loading package unordered-containers-0.2.12.0 ... linking ... done.
Loading package primitive-0.7.1.0 ... linking ... done.
Loading package vector-0.12.1.2 ... linking ... done.
Loading package vector-algorithms-0.8.0.3 ... linking ... done.
Loading package mono-traversable-1.0.15.1 ... linking ... done.
Loading package pretty-1.1.3.6 ... linking ... done.
Loading package semigroups-0.19.1 ... linking ... done.
Loading package flat-0.4.4 ... linking ... done.
Loading package ghc-boot-th-8.10.2.20201118 ... linking ... done.
Loading package ghc-boot-8.10.2.20201118 ... linking ... done.
Loading package ghc-heap-8.10.2.20201118 ... linking ... done.
Loading package template-haskell-2.16.0.0 ... linking ... done.
Loading package ghci-8.10.2.20201118 ... linking ... done.
Loading package hpc-0.6.1.0 ... linking ... done.
Loading package terminfo-0.4.1.4 ... linking ... done.
Loading package ghc-8.10.2.20201118 ... linking ... done.
Loading package base-orphans-0.8.2 ... linking ... done.
Loading package tagged-0.8.6 ... linking ... done.
Loading package distributive-0.6.2 ... linking ... done.
Loading package transformers-compat-0.6.5 ... linking ... done.
Loading package comonad-5.0.6 ... linking ... done.
Loading package th-abstraction-0.3.2.0 ... linking ... done.
Loading package bifunctors-5.5.7 ... linking ... done.
Loading package call-stack-0.2.0 ... linking ... done.
Loading package stm-2.5.0.0 ... linking ... done.
Loading package StateVar-1.2 ... linking ... done.
Loading package contravariant-1.5.2 ... linking ... done.
Loading package mtl-2.2.2 ... linking ... done.
Loading package exceptions-0.10.4 ... linking ... done.
Loading package profunctors-5.5.2 ... linking ... done.
Loading package semigroupoids-5.3.4 ... linking ... done.
Loading package transformers-base-0.4.5.2 ... linking ... done.
Loading package free-5.1.3 ... linking ... done.
Loading package void-0.7.3 ... linking ... done.
Loading package adjunctions-4.4 ... linking ... done.
Loading package invariant-0.5.3 ... linking ... done.
Loading package kan-extensions-5.2 ... linking ... done.
Loading package parallel-3.2.2.0 ... linking ... done.
Loading package reflection-2.1.6 ... linking ... done.
Loading package lens-4.19.2 ... linking ... done.
Loading package random-1.1 ... linking ... done.
Loading package splitmix-0.0.5 ... linking ... done.
Loading package QuickCheck-2.13.2 ... linking ... done.
Loading package lazysmallcheck-0.6 ... linking ... done.
Loading package Stream-0.4.7.2 ... linking ... done.
Loading package integer-logarithms-1.0.3 ... linking ... done.
Loading package scientific-0.3.6.2 ... linking ... done.
Loading package attoparsec-0.13.2.4 ... linking ... done.
Loading package base-compat-0.11.1 ... linking ... done.
Loading package base-compat-batteries-0.11.1 ... linking ... done.
Loading package data-fix-0.3.0 ... linking ... done.
Loading package assoc-1.0.2 ... linking ... done.
Loading package these-1.1.1.1 ... linking ... done.
Loading package strict-0.4 ... linking ... done.
Loading package time-compat-1.9.3 ... linking ... done.
Loading package uuid-types-1.0.3 ... linking ... done.
Loading package aeson-1.5.3.0 ... linking ... done.
Loading package algebraic-graphs-0.5 ... linking ... done.
Loading package barbies-2.0.1.0 ... linking ... done.
Loading package bimap-0.4.0 ... linking ... done.
Loading package basement-0.0.11 ... linking ... done.
Loading package memory-0.15.0 ... linking ... done.
Loading package cryptonite-0.27 ... linking ... done.
Loading package foundation-0.0.25 ... linking ... done.
Loading package cardano-crypto-1.1.0 ... linking ... done.
Loading package half-0.3 ... linking ... done.
Loading package cborg-0.2.4.0 ... linking ... done.
Loading package composition-prelude-2.0.2.1 ... linking ... done.
Loading package data-default-class-0.1.2.0 ... linking ... done.
Loading package data-default-instances-containers-0.0.1 ... linking ... done.
Loading package data-default-instances-dlist-0.0.1 ... linking ... done.
Loading package old-locale-1.0.0.7 ... linking ... done.
Loading package data-default-instances-old-locale-0.0.1 ... linking ... done.
Loading package data-default-0.7.1.1 ... linking ... done.
Loading package type-equality-1 ... linking ... done.
Loading package constraints-0.12 ... linking ... done.
Loading package constraints-extras-0.3.0.2 ... linking ... done.
Loading package dependent-sum-0.6.2.0 ... linking ... done.
Loading package dependent-map-0.3 ... linking ... done.
Loading package syb-0.7.1 ... linking ... done.
Loading package th-extras-0.0.0.4 ... linking ... done.
Loading package dependent-sum-template-0.1.0.3 ... linking ... done.
Loading package deriving-aeson-0.2.3 ... linking ... done.
Loading package deriving-compat-0.5.9 ... linking ... done.
Loading package colour-2.3.5 ... linking ... done.
Loading package ansi-terminal-0.10.3 ... linking ... done.
Loading package async-2.2.2 ... linking ... done.
Loading package terminal-size-0.3.2.1 ... linking ... done.
Loading package concurrent-output-1.10.12 ... linking ... done.
Loading package erf-2.0.0.0 ... linking ... done.
Loading package fail-4.9.0.0 ... linking ... done.
Loading package monad-control-1.0.2.3 ... linking ... done.
Loading package lifted-base-0.2.3.12 ... linking ... done.
Loading package lifted-async-0.10.1.2 ... linking ... done.
Loading package mmorph-1.1.3 ... linking ... done.
Loading package haskell-lexer-1.1 ... linking ... done.
Loading package pretty-show-1.10 ... linking ... done.
Loading package unliftio-core-0.2.0.1 ... linking ... done.
Loading package resourcet-1.2.4.2 ... linking ... done.
Loading package wl-pprint-annotated-0.1.0.1 ... linking ... done.
Loading package hedgehog-1.0.3 ... linking ... done.
Loading package dictionary-sharing-0.1.0.0 ... linking ... done.
Loading package testing-type-modifiers-0.1.0.1 ... linking ... done.
Loading package size-based-0.1.2.0 ... linking ... done.
Loading package lazy-search-0.1.2.0 ... linking ... done.
Loading package case-insensitive-1.2.1.0 ... linking ... done.
Loading package parser-combinators-1.2.1 ... linking ... done.
Loading package megaparsec-8.0.0 ... linking ... done.
Loading package newtype-0.2.2.0 ... linking ... done.
Loading package semialign-1.1.0.1 ... linking ... done.
Loading package monoidal-containers-0.6.0.1 ... linking ... done.
Loading package nonempty-vector-0.2.0.2 ... linking ... done.
Loading package nonempty-containers-0.3.3.0 ... linking ... done.
Loading package prettyprinter-1.6.2 ... linking ... done.
Loading package microlens-0.4.11.2 ... linking ... done.
Loading package prettyprinter-configurable-0.1.0.0 ... linking ... done.
Loading package recursion-schemes-5.1.3 ... linking ... done.
Loading package safe-exceptions-0.1.7.0 ... linking ... done.
Loading package serialise-0.2.3.0 ... linking ... done.
Loading package ansi-wl-pprint-0.6.9 ... linking ... done.
Loading package optparse-applicative-0.15.1.0 ... linking ... done.
Loading package unbounded-delays-0.1.1.0 ... linking ... done.
Loading package wcwidth-0.0.2 ... linking ... done.
Loading package tasty-1.2.3 ... linking ... done.
Loading package temporary-1.3 ... linking ... done.
Loading package tasty-golden-2.3.3.2 ... linking ... done.
Loading package tasty-hunit-0.10.0.2 ... linking ... done.
Loading package th-lift-0.8.1 ... linking ... done.
Loading package th-lift-instances-0.1.17 ... linking ... done.
Loading package safe-0.3.19 ... linking ... done.
Loading package th-expand-syns-0.4.6.0 ... linking ... done.
Loading package th-reify-many-0.1.9 ... linking ... done.
Loading package th-orphans-0.13.10 ... linking ... done.
Loading package th-utilities-0.2.4.0 ... linking ... done.
Loading package witherable-class-0 ... linking ... done.
Loading package witherable-0.3.5 ... linking ... done.
Loading package plutus-core-0.1.0.0 ... linking ... done.
Loading package plutus-tx-0.1.0.0 ... linking ... done.
Loading package plutus-tx-plugin-0.1.0.0 ... linking ... done.
Search directories (user):
Search directories (gcc):

==================== Desugar (before optimization) ====================
Result size of Desugar (before optimization)
  = {terms: 64, types: 26, coercions: 0, joins: 0/3}

Rec {
-- RHS size: {terms: 8, types: 0, coercions: 0, joins: 0/0}
Lib.$tcEndDate :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX]
Lib.$tcEndDate
  = ghc-prim-0.6.1:GHC.Types.TyCon
      8554338065373400840##
      3482623708274877127##
      Lib.$trModule
      (ghc-prim-0.6.1:GHC.Types.TrNameS "EndDate"#)
      0#
      ghc-prim-0.6.1:GHC.Types.krep$*

-- RHS size: {terms: 8, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Fixed :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX]
Lib.$tc'Fixed
  = ghc-prim-0.6.1:GHC.Types.TyCon
      17912921531120851107##
      4815501104477800385##
      Lib.$trModule
      (ghc-prim-0.6.1:GHC.Types.TrNameS "'Fixed"#)
      0#
      $krep_a5lt

-- RHS size: {terms: 8, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Never :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX]
Lib.$tc'Never
  = ghc-prim-0.6.1:GHC.Types.TyCon
      10340504404178887934##
      18177538684886749349##
      Lib.$trModule
      (ghc-prim-0.6.1:GHC.Types.TrNameS "'Never"#)
      0#
      $krep_a5lv

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep_a5lt [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId]
$krep_a5lt
  = ghc-prim-0.6.1:GHC.Types.KindRepFun $krep_a5lu $krep_a5lv

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_a5lu [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId]
$krep_a5lu
  = ghc-prim-0.6.1:GHC.Types.KindRepTyConApp
      integer-gmp-1.0.3.0:GHC.Integer.Type.$tcInteger
      (ghc-prim-0.6.1:GHC.Types.[] @ ghc-prim-0.6.1:GHC.Types.KindRep)

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_a5lv [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId]
$krep_a5lv
  = ghc-prim-0.6.1:GHC.Types.KindRepTyConApp
      Lib.$tcEndDate
      (ghc-prim-0.6.1:GHC.Types.[] @ ghc-prim-0.6.1:GHC.Types.KindRep)

-- RHS size: {terms: 5, types: 0, coercions: 0, joins: 0/0}
Lib.$trModule :: ghc-prim-0.6.1:GHC.Types.Module
[LclIdX]
Lib.$trModule
  = ghc-prim-0.6.1:GHC.Types.Module
      (ghc-prim-0.6.1:GHC.Types.TrNameS "example-0.1.0.0-inplace"#)
      (ghc-prim-0.6.1:GHC.Types.TrNameS "Lib"#)

-- RHS size: {terms: 18, types: 13, coercions: 0, joins: 0/3}
pastEnd :: CompiledCode (EndDate -> Integer -> Bool)
[LclIdX]
pastEnd
  = Language.PlutusTx.Plugin.Utils.plc
      @ "example-0.1.0.0-inplace:Lib:(58,14)-(61,6)"
      @ (EndDate -> Integer -> Bool)
      (Data.Proxy.Proxy
         @ ghc-prim-0.6.1:GHC.Types.Symbol
         @ "example-0.1.0.0-inplace:Lib:(58,14)-(61,6)")
      (\ (ds_d5yW :: EndDate) (ds_d5yX :: Integer) ->
         let {
           end_a5tx :: EndDate
           [LclId]
           end_a5tx = ds_d5yW } in
         let {
           current_a5ty :: Integer
           [LclId]
           current_a5ty = ds_d5yX } in
         let {
           ds_d5yY :: EndDate
           [LclId]
           ds_d5yY = end_a5tx } in
         case ds_d5yY of wild_00 {
           Fixed n_a5tz -> lessThanEqInteger n_a5tz current_a5ty;
           Never -> ghc-prim-0.6.1:GHC.Types.False
         })
end Rec }




==================== Desugar (after optimization) ====================
Result size of Desugar (after optimization)
  = {terms: 58, types: 23, coercions: 0, joins: 0/0}

-- RHS size: {terms: 12, types: 10, coercions: 0, joins: 0/0}
pastEnd :: CompiledCode (EndDate -> Integer -> Bool)
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 100 0}]
pastEnd
  = Language.PlutusTx.Plugin.Utils.plc
      @ "example-0.1.0.0-inplace:Lib:(58,14)-(61,6)"
      @ (EndDate -> Integer -> Bool)
      (Data.Proxy.Proxy
         @ ghc-prim-0.6.1:GHC.Types.Symbol
         @ "example-0.1.0.0-inplace:Lib:(58,14)-(61,6)")
      (\ (ds_d5yW :: EndDate) (ds_d5yX :: Integer) ->
         case ds_d5yW of {
           Fixed n_a5tz -> lessThanEqInteger n_a5tz ds_d5yX;
           Never -> ghc-prim-0.6.1:GHC.Types.False
         })

-- RHS size: {terms: 5, types: 0, coercions: 0, joins: 0/0}
Lib.$trModule :: ghc-prim-0.6.1:GHC.Types.Module
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 120 30}]
Lib.$trModule
  = ghc-prim-0.6.1:GHC.Types.Module
      (ghc-prim-0.6.1:GHC.Types.TrNameS "example-0.1.0.0-inplace"#)
      (ghc-prim-0.6.1:GHC.Types.TrNameS "Lib"#)

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_a5lu [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
$krep_a5lu
  = ghc-prim-0.6.1:GHC.Types.KindRepTyConApp
      integer-gmp-1.0.3.0:GHC.Integer.Type.$tcInteger
      (ghc-prim-0.6.1:GHC.Types.[] @ ghc-prim-0.6.1:GHC.Types.KindRep)

-- RHS size: {terms: 8, types: 0, coercions: 0, joins: 0/0}
Lib.$tcEndDate :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 50 70}]
Lib.$tcEndDate
  = ghc-prim-0.6.1:GHC.Types.TyCon
      8554338065373400840##
      3482623708274877127##
      Lib.$trModule
      (ghc-prim-0.6.1:GHC.Types.TrNameS "EndDate"#)
      0#
      ghc-prim-0.6.1:GHC.Types.krep$*

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_a5lv [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
$krep_a5lv
  = ghc-prim-0.6.1:GHC.Types.KindRepTyConApp
      Lib.$tcEndDate
      (ghc-prim-0.6.1:GHC.Types.[] @ ghc-prim-0.6.1:GHC.Types.KindRep)

-- RHS size: {terms: 8, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Never :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 50 70}]
Lib.$tc'Never
  = ghc-prim-0.6.1:GHC.Types.TyCon
      10340504404178887934##
      18177538684886749349##
      Lib.$trModule
      (ghc-prim-0.6.1:GHC.Types.TrNameS "'Never"#)
      0#
      $krep_a5lv

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep_a5lt [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
$krep_a5lt
  = ghc-prim-0.6.1:GHC.Types.KindRepFun $krep_a5lu $krep_a5lv

-- RHS size: {terms: 8, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Fixed :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 50 70}]
Lib.$tc'Fixed
  = ghc-prim-0.6.1:GHC.Types.TyCon
      17912921531120851107##
      4815501104477800385##
      Lib.$trModule
      (ghc-prim-0.6.1:GHC.Types.TrNameS "'Fixed"#)
      0#
      $krep_a5lt




==================== Simplifier statistics for following pass ====================
Simplifier baled out after 1 iterations

Total ticks:     4

4 LetFloatFromLet 4
1 SimplifierDone 1



==================== Simplifier ====================
  Max iterations = 1
  SimplMode {Phase = InitialPhase [Ensure unfoldings are present],
             no inline,
             no rules,
             no eta-expand,
             no case-of-case}
Result size of Simplifier
  = {terms: 78, types: 33, coercions: 0, joins: 0/0}

-- RHS size: {terms: 12, types: 10, coercions: 0, joins: 0/0}
pastEnd :: CompiledCode (EndDate -> Integer -> Bool)
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 100 0}]
pastEnd
  = Language.PlutusTx.Plugin.Utils.plc
      @ "example-0.1.0.0-inplace:Lib:(58,14)-(61,6)"
      @ (EndDate -> Integer -> Bool)
      (Data.Proxy.Proxy
         @ ghc-prim-0.6.1:GHC.Types.Symbol
         @ "example-0.1.0.0-inplace:Lib:(58,14)-(61,6)")
      (\ (ds_d5yW :: EndDate) (ds_d5yX :: Integer) ->
         case ds_d5yW of {
           Fixed n_a5tz -> lessThanEqInteger n_a5tz ds_d5yX;
           Never -> ghc-prim-0.6.1:GHC.Types.False
         })

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FJ :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 70 0}]
$trModule_s5FJ = "example-0.1.0.0-inplace"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FK :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$trModule_s5FK = ghc-prim-0.6.1:GHC.Types.TrNameS $trModule_s5FJ

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FL :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
$trModule_s5FL = "Lib"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FM :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$trModule_s5FM = ghc-prim-0.6.1:GHC.Types.TrNameS $trModule_s5FL

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Lib.$trModule :: ghc-prim-0.6.1:GHC.Types.Module
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
Lib.$trModule
  = ghc-prim-0.6.1:GHC.Types.Module $trModule_s5FK $trModule_s5FM

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_a5lu [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
$krep_a5lu
  = ghc-prim-0.6.1:GHC.Types.KindRepTyConApp
      integer-gmp-1.0.3.0:GHC.Integer.Type.$tcInteger
      (ghc-prim-0.6.1:GHC.Types.[] @ ghc-prim-0.6.1:GHC.Types.KindRep)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tcEndDate_s5FN :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
$tcEndDate_s5FN = "EndDate"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tcEndDate_s5FO :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$tcEndDate_s5FO = ghc-prim-0.6.1:GHC.Types.TrNameS $tcEndDate_s5FN

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tcEndDate :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Lib.$tcEndDate
  = ghc-prim-0.6.1:GHC.Types.TyCon
      8554338065373400840##
      3482623708274877127##
      Lib.$trModule
      $tcEndDate_s5FO
      0#
      ghc-prim-0.6.1:GHC.Types.krep$*

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_a5lv [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
$krep_a5lv
  = ghc-prim-0.6.1:GHC.Types.KindRepTyConApp
      Lib.$tcEndDate
      (ghc-prim-0.6.1:GHC.Types.[] @ ghc-prim-0.6.1:GHC.Types.KindRep)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tc'Never_s5FP :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
$tc'Never_s5FP = "'Never"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tc'Never_s5FQ :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$tc'Never_s5FQ = ghc-prim-0.6.1:GHC.Types.TrNameS $tc'Never_s5FP

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Never :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Lib.$tc'Never
  = ghc-prim-0.6.1:GHC.Types.TyCon
      10340504404178887934##
      18177538684886749349##
      Lib.$trModule
      $tc'Never_s5FQ
      0#
      $krep_a5lv

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep_a5lt [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
$krep_a5lt
  = ghc-prim-0.6.1:GHC.Types.KindRepFun $krep_a5lu $krep_a5lv

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tc'Fixed_s5FR :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
$tc'Fixed_s5FR = "'Fixed"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tc'Fixed_s5FS :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$tc'Fixed_s5FS = ghc-prim-0.6.1:GHC.Types.TrNameS $tc'Fixed_s5FR

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Fixed :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Lib.$tc'Fixed
  = ghc-prim-0.6.1:GHC.Types.TyCon
      17912921531120851107##
      4815501104477800385##
      Lib.$trModule
      $tc'Fixed_s5FS
      0#
      $krep_a5lt




==================== PIR====================
(let
  (nonrec)
  (typebind (tyvardecl ByteString (type)) (con bytestring))
  (let
    (nonrec)
    (datatypebind
      (datatype
        (tyvardecl Bool (type))
        
        Bool_match
        (vardecl True Bool) (vardecl False Bool)
      )
    )
    (let
      (nonrec)
      (termbind
        (strict)
        (vardecl
          verifySignature
          (fun (con bytestring) (fun (con bytestring) (fun (con bytestring) Bool)))
        )
        (lam
          arg
          (con bytestring)
          (lam
            arg
            (con bytestring)
            (lam
              arg
              (con bytestring)
              [
                (lam
                  b
                  (con bool)
                  [ [ [ { (builtin ifThenElse) Bool } b ] True ] False ]
                )
                [ [ [ (builtin verifySignature) arg ] arg ] arg ]
              ]
            )
          )
        )
      )
      (let
        (nonrec)
        (typebind (tyvardecl String (type)) (con string))
        (let
          (nonrec)
          (datatypebind
            (datatype (tyvardecl Unit (type))  Unit_match (vardecl Unit Unit))
          )
          (let
            (nonrec)
            (termbind
              (strict)
              (vardecl trace (fun (con string) Unit))
              (lam
                arg
                (con string)
                [ (lam b (con unit) Unit) [ (builtin trace) arg ] ]
              )
            )
            (let
              (nonrec)
              (typebind (tyvardecl Integer (type)) (con integer))
              (let
                (nonrec)
                (termbind
                  (strict)
                  (vardecl
                    takeByteString
                    (fun (con integer) (fun (con bytestring) (con bytestring)))
                  )
                  (builtin takeByteString)
                )
                (let
                  (nonrec)
                  (termbind
                    (strict)
                    (vardecl
                      subtractInteger
                      (fun (con integer) (fun (con integer) (con integer)))
                    )
                    (builtin subtractInteger)
                  )
                  (let
                    (nonrec)
                    (termbind
                      (strict)
                      (vardecl sha3_ (fun (con bytestring) (con bytestring)))
                      (builtin sha3_256)
                    )
                    (let
                      (nonrec)
                      (termbind
                        (strict)
                        (vardecl sha2_ (fun (con bytestring) (con bytestring)))
                        (builtin sha2_256)
                      )
                      (let
                        (nonrec)
                        (termbind
                          (strict)
                          (vardecl
                            remainderInteger
                            (fun (con integer) (fun (con integer) (con integer)))
                          )
                          (builtin remainderInteger)
                        )
                        (let
                          (nonrec)
                          (termbind
                            (strict)
                            (vardecl
                              quotientInteger
                              (fun (con integer) (fun (con integer) (con integer)))
                            )
                            (builtin quotientInteger)
                          )
                          (let
                            (nonrec)
                            (termbind
                              (strict)
                              (vardecl
                                multiplyInteger
                                (fun (con integer) (fun (con integer) (con integer)))
                              )
                              (builtin multiplyInteger)
                            )
                            (let
                              (nonrec)
                              (termbind
                                (strict)
                                (vardecl
                                  modInteger
                                  (fun (con integer) (fun (con integer) (con integer)))
                                )
                                (builtin modInteger)
                              )
                              (let
                                (nonrec)
                                (termbind
                                  (strict)
                                  (vardecl
                                    lessThanInteger
                                    (fun (con integer) (fun (con integer) Bool))
                                  )
                                  (lam
                                    arg
                                    (con integer)
                                    (lam
                                      arg
                                      (con integer)
                                      [
                                        (lam
                                          b
                                          (con bool)
                                          [
                                            [
                                              [
                                                { (builtin ifThenElse) Bool } b
                                              ]
                                              True
                                            ]
                                            False
                                          ]
                                        )
                                        [
                                          [ (builtin lessThanInteger) arg ] arg
                                        ]
                                      ]
                                    )
                                  )
                                )
                                (let
                                  (nonrec)
                                  (termbind
                                    (strict)
                                    (vardecl
                                      lessThanEqInteger
                                      (fun (con integer) (fun (con integer) Bool))
                                    )
                                    (lam
                                      arg
                                      (con integer)
                                      (lam
                                        arg
                                        (con integer)
                                        [
                                          (lam
                                            b
                                            (con bool)
                                            [
                                              [
                                                [
                                                  { (builtin ifThenElse) Bool }
                                                  b
                                                ]
                                                True
                                              ]
                                              False
                                            ]
                                          )
                                          [
                                            [
                                              (builtin lessThanEqualsInteger)
                                              arg
                                            ]
                                            arg
                                          ]
                                        ]
                                      )
                                    )
                                  )
                                  (let
                                    (nonrec)
                                    (termbind
                                      (strict)
                                      (vardecl
                                        lessThanByteString
                                        (fun (con bytestring) (fun (con bytestring) Bool))
                                      )
                                      (lam
                                        arg
                                        (con bytestring)
                                        (lam
                                          arg
                                          (con bytestring)
                                          [
                                            (lam
                                              b
                                              (con bool)
                                              [
                                                [
                                                  [
                                                    {
                                                      (builtin ifThenElse) Bool
                                                    }
                                                    b
                                                  ]
                                                  True
                                                ]
                                                False
                                              ]
                                            )
                                            [
                                              [
                                                (builtin lessThanByteString) arg
                                              ]
                                              arg
                                            ]
                                          ]
                                        )
                                      )
                                    )
                                    (let
                                      (nonrec)
                                      (termbind
                                        (strict)
                                        (vardecl
                                          greaterThanInteger
                                          (fun (con integer) (fun (con integer) Bool))
                                        )
                                        (lam
                                          arg
                                          (con integer)
                                          (lam
                                            arg
                                            (con integer)
                                            [
                                              (lam
                                                b
                                                (con bool)
                                                [
                                                  [
                                                    [
                                                      {
                                                        (builtin ifThenElse)
                                                        Bool
                                                      }
                                                      b
                                                    ]
                                                    True
                                                  ]
                                                  False
                                                ]
                                              )
                                              [
                                                [
                                                  (builtin greaterThanInteger)
                                                  arg
                                                ]
                                                arg
                                              ]
                                            ]
                                          )
                                        )
                                      )
                                      (let
                                        (nonrec)
                                        (termbind
                                          (strict)
                                          (vardecl
                                            greaterThanEqInteger
                                            (fun (con integer) (fun (con integer) Bool))
                                          )
                                          (lam
                                            arg
                                            (con integer)
                                            (lam
                                              arg
                                              (con integer)
                                              [
                                                (lam
                                                  b
                                                  (con bool)
                                                  [
                                                    [
                                                      [
                                                        {
                                                          (builtin ifThenElse)
                                                          Bool
                                                        }
                                                        b
                                                      ]
                                                      True
                                                    ]
                                                    False
                                                  ]
                                                )
                                                [
                                                  [
                                                    (builtin
                                                      greaterThanEqualsInteger
                                                    )
                                                    arg
                                                  ]
                                                  arg
                                                ]
                                              ]
                                            )
                                          )
                                        )
                                        (let
                                          (nonrec)
                                          (termbind
                                            (strict)
                                            (vardecl
                                              greaterThanByteString
                                              (fun (con bytestring) (fun (con bytestring) Bool))
                                            )
                                            (lam
                                              arg
                                              (con bytestring)
                                              (lam
                                                arg
                                                (con bytestring)
                                                [
                                                  (lam
                                                    b
                                                    (con bool)
                                                    [
                                                      [
                                                        [
                                                          {
                                                            (builtin ifThenElse)
                                                            Bool
                                                          }
                                                          b
                                                        ]
                                                        True
                                                      ]
                                                      False
                                                    ]
                                                  )
                                                  [
                                                    [
                                                      (builtin
                                                        greaterThanByteString
                                                      )
                                                      arg
                                                    ]
                                                    arg
                                                  ]
                                                ]
                                              )
                                            )
                                          )
                                          (let
                                            (nonrec)
                                            (termbind
                                              (strict)
                                              (vardecl
                                                error
                                                (all a (type) (fun Unit a))
                                              )
                                              (abs
                                                e
                                                (type)
                                                (lam thunk Unit (error e))
                                              )
                                            )
                                            (let
                                              (nonrec)
                                              (termbind
                                                (strict)
                                                (vardecl
                                                  equalsInteger
                                                  (fun (con integer) (fun (con integer) Bool))
                                                )
                                                (lam
                                                  arg
                                                  (con integer)
                                                  (lam
                                                    arg
                                                    (con integer)
                                                    [
                                                      (lam
                                                        b
                                                        (con bool)
                                                        [
                                                          [
                                                            [
                                                              {
                                                                (builtin
                                                                  ifThenElse
                                                                )
                                                                Bool
                                                              }
                                                              b
                                                            ]
                                                            True
                                                          ]
                                                          False
                                                        ]
                                                      )
                                                      [
                                                        [
                                                          (builtin equalsInteger
                                                          )
                                                          arg
                                                        ]
                                                        arg
                                                      ]
                                                    ]
                                                  )
                                                )
                                              )
                                              (let
                                                (nonrec)
                                                (termbind
                                                  (strict)
                                                  (vardecl
                                                    equalsByteString
                                                    (fun (con bytestring) (fun (con bytestring) Bool))
                                                  )
                                                  (lam
                                                    arg
                                                    (con bytestring)
                                                    (lam
                                                      arg
                                                      (con bytestring)
                                                      [
                                                        (lam
                                                          b
                                                          (con bool)
                                                          [
                                                            [
                                                              [
                                                                {
                                                                  (builtin
                                                                    ifThenElse
                                                                  )
                                                                  Bool
                                                                }
                                                                b
                                                              ]
                                                              True
                                                            ]
                                                            False
                                                          ]
                                                        )
                                                        [
                                                          [
                                                            (builtin
                                                              equalsByteString
                                                            )
                                                            arg
                                                          ]
                                                          arg
                                                        ]
                                                      ]
                                                    )
                                                  )
                                                )
                                                (let
                                                  (nonrec)
                                                  (termbind
                                                    (strict)
                                                    (vardecl
                                                      emptyString (con string)
                                                    )
                                                    (con string "")
                                                  )
                                                  (let
                                                    (nonrec)
                                                    (termbind
                                                      (strict)
                                                      (vardecl
                                                        emptyByteString
                                                        (con bytestring)
                                                      )
                                                      (con bytestring #)
                                                    )
                                                    (let
                                                      (nonrec)
                                                      (termbind
                                                        (strict)
                                                        (vardecl
                                                          dropByteString
                                                          (fun (con integer) (fun (con bytestring) (con bytestring)))
                                                        )
                                                        (builtin dropByteString)
                                                      )
                                                      (let
                                                        (nonrec)
                                                        (termbind
                                                          (strict)
                                                          (vardecl
                                                            divideInteger
                                                            (fun (con integer) (fun (con integer) (con integer)))
                                                          )
                                                          (builtin divideInteger
                                                          )
                                                        )
                                                        (let
                                                          (nonrec)
                                                          (termbind
                                                            (strict)
                                                            (vardecl
                                                              concatenate
                                                              (fun (con bytestring) (fun (con bytestring) (con bytestring)))
                                                            )
                                                            (builtin concatenate
                                                            )
                                                          )
                                                          (let
                                                            (nonrec)
                                                            (typebind
                                                              (tyvardecl
                                                                Char (type)
                                                              )
                                                              (con char)
                                                            )
                                                            (let
                                                              (nonrec)
                                                              (termbind
                                                                (strict)
                                                                (vardecl
                                                                  charToString
                                                                  (fun (con char) (con string))
                                                                )
                                                                (builtin
                                                                  charToString
                                                                )
                                                              )
                                                              (let
                                                                (nonrec)
                                                                (termbind
                                                                  (strict)
                                                                  (vardecl
                                                                    appendString
                                                                    (fun (con string) (fun (con string) (con string)))
                                                                  )
                                                                  (builtin
                                                                    append
                                                                  )
                                                                )
                                                                (let
                                                                  (nonrec)
                                                                  (termbind
                                                                    (strict)
                                                                    (vardecl
                                                                      addInteger
                                                                      (fun (con integer) (fun (con integer) (con integer)))
                                                                    )
                                                                    (builtin
                                                                      addInteger
                                                                    )
                                                                  )
                                                                  (let
                                                                    (nonrec)
                                                                    (datatypebind
                                                                      (datatype
                                                                        (tyvardecl
                                                                          EndDate
                                                                          (type)
                                                                        )
                                                                        
                                                                        EndDate_match
                                                                        (vardecl
                                                                          Fixed
                                                                          (fun (con integer) EndDate)
                                                                        )
                                                                        (vardecl
                                                                          Never
                                                                          EndDate
                                                                        )
                                                                      )
                                                                    )
                                                                    (lam
                                                                      ds
                                                                      EndDate
                                                                      (lam
                                                                        ds
                                                                        (con integer)
                                                                        (let
                                                                          (nonrec
                                                                          )
                                                                          (termbind
                                                                            (nonstrict
                                                                            )
                                                                            (vardecl
                                                                              wild
                                                                              EndDate
                                                                            )
                                                                            ds
                                                                          )
                                                                          [
                                                                            [
                                                                              [
                                                                                {
                                                                                  [
                                                                                    EndDate_match
                                                                                    ds
                                                                                  ]
                                                                                  (fun Unit Bool)
                                                                                }
                                                                                (lam
                                                                                  n
                                                                                  (con integer)
                                                                                  (lam
                                                                                    thunk
                                                                                    Unit
                                                                                    [
                                                                                      [
                                                                                        lessThanEqInteger
                                                                                        n
                                                                                      ]
                                                                                      ds
                                                                                    ]
                                                                                  )
                                                                                )
                                                                              ]
                                                                              (lam
                                                                                thunk
                                                                                Unit
                                                                                False
                                                                              )
                                                                            ]
                                                                            Unit
                                                                          ]
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)

==================== PIR (Simplified)====================
(program
  (let
    (nonrec)
    (datatypebind
      (datatype
        (tyvardecl EndDate (type))
        
        EndDate_match
        (vardecl Fixed (fun (con integer) EndDate)) (vardecl Never EndDate)
      )
    )
    (datatypebind
      (datatype
        (tyvardecl Bool (type))
        
        Bool_match
        (vardecl True Bool) (vardecl False Bool)
      )
    )
    (termbind
      (strict)
      (vardecl lessThanEqInteger (fun (con integer) (fun (con integer) Bool)))
      (lam
        arg
        (con integer)
        (lam
          arg
          (con integer)
          [
            (lam
              b
              (con bool)
              [ [ [ { (builtin ifThenElse) Bool } b ] True ] False ]
            )
            [ [ (builtin lessThanEqualsInteger) arg ] arg ]
          ]
        )
      )
    )
    (datatypebind
      (datatype (tyvardecl Unit (type))  Unit_match (vardecl Unit Unit))
    )
    (lam
      ds
      EndDate
      (lam
        ds
        (con integer)
        [
          [
            [
              { [ EndDate_match ds ] (fun Unit Bool) }
              (lam
                n (con integer) (lam thunk Unit [ [ lessThanEqInteger n ] ds ])
              )
            ]
            (lam thunk Unit False)
          ]
          Unit
        ]
      )
    )
  )
)

==================== PLC====================
[
  [
    [
      {
        (abs
          EndDate
          (type)
          (lam
            Fixed
            (fun (con integer) EndDate)
            (lam
              Never
              EndDate
              (lam
                EndDate_match
                (fun EndDate (all out_EndDate (type) (fun (fun (con integer) out_EndDate) (fun out_EndDate out_EndDate))))
                [
                  [
                    [
                      {
                        (abs
                          Bool
                          (type)
                          (lam
                            True
                            Bool
                            (lam
                              False
                              Bool
                              (lam
                                Bool_match
                                (fun Bool (all out_Bool (type) (fun out_Bool (fun out_Bool out_Bool))))
                                [
                                  (lam
                                    lessThanEqInteger
                                    (fun (con integer) (fun (con integer) Bool))
                                    [
                                      [
                                        {
                                          (abs
                                            Unit
                                            (type)
                                            (lam
                                              Unit
                                              Unit
                                              (lam
                                                Unit_match
                                                (fun Unit (all out_Unit (type) (fun out_Unit out_Unit)))
                                                (lam
                                                  ds
                                                  EndDate
                                                  (lam
                                                    ds
                                                    (con integer)
                                                    [
                                                      [
                                                        [
                                                          {
                                                            [ EndDate_match ds ]
                                                            (fun Unit Bool)
                                                          }
                                                          (lam
                                                            n
                                                            (con integer)
                                                            (lam
                                                              thunk
                                                              Unit
                                                              [
                                                                [
                                                                  lessThanEqInteger
                                                                  n
                                                                ]
                                                                ds
                                                              ]
                                                            )
                                                          )
                                                        ]
                                                        (lam thunk Unit False)
                                                      ]
                                                      Unit
                                                    ]
                                                  )
                                                )
                                              )
                                            )
                                          )
                                          (all out_Unit (type) (fun out_Unit out_Unit))
                                        }
                                        (abs
                                          out_Unit
                                          (type)
                                          (lam case_Unit out_Unit case_Unit)
                                        )
                                      ]
                                      (lam
                                        x
                                        (all out_Unit (type) (fun out_Unit out_Unit))
                                        x
                                      )
                                    ]
                                  )
                                  (lam
                                    arg
                                    (con integer)
                                    (lam
                                      arg
                                      (con integer)
                                      [
                                        (lam
                                          b
                                          (con bool)
                                          [
                                            [
                                              [
                                                { (builtin ifThenElse) Bool } b
                                              ]
                                              True
                                            ]
                                            False
                                          ]
                                        )
                                        [
                                          [
                                            (builtin lessThanEqualsInteger) arg
                                          ]
                                          arg
                                        ]
                                      ]
                                    )
                                  )
                                ]
                              )
                            )
                          )
                        )
                        (all out_Bool (type) (fun out_Bool (fun out_Bool out_Bool)))
                      }
                      (abs
                        out_Bool
                        (type)
                        (lam
                          case_True out_Bool (lam case_False out_Bool case_True)
                        )
                      )
                    ]
                    (abs
                      out_Bool
                      (type)
                      (lam
                        case_True out_Bool (lam case_False out_Bool case_False)
                      )
                    )
                  ]
                  (lam
                    x
                    (all out_Bool (type) (fun out_Bool (fun out_Bool out_Bool)))
                    x
                  )
                ]
              )
            )
          )
        )
        (all out_EndDate (type) (fun (fun (con integer) out_EndDate) (fun out_EndDate out_EndDate)))
      }
      (lam
        arg_0
        (con integer)
        (abs
          out_EndDate
          (type)
          (lam
            case_Fixed
            (fun (con integer) out_EndDate)
            (lam case_Never out_EndDate [ case_Fixed arg_0 ])
          )
        )
      )
    ]
    (abs
      out_EndDate
      (type)
      (lam
        case_Fixed
        (fun (con integer) out_EndDate)
        (lam case_Never out_EndDate case_Never)
      )
    )
  ]
  (lam
    x
    (all out_EndDate (type) (fun (fun (con integer) out_EndDate) (fun out_EndDate out_EndDate)))
    x
  )
]

==================== PLC (Program)====================
(program 1.0.0
  [
    [
      [
        {
          (abs
            EndDate
            (type)
            (lam
              Fixed
              (fun (con integer) EndDate)
              (lam
                Never
                EndDate
                (lam
                  EndDate_match
                  (fun EndDate (all out_EndDate (type) (fun (fun (con integer) out_EndDate) (fun out_EndDate out_EndDate))))
                  [
                    [
                      [
                        {
                          (abs
                            Bool
                            (type)
                            (lam
                              True
                              Bool
                              (lam
                                False
                                Bool
                                (lam
                                  Bool_match
                                  (fun Bool (all out_Bool (type) (fun out_Bool (fun out_Bool out_Bool))))
                                  [
                                    (lam
                                      lessThanEqInteger
                                      (fun (con integer) (fun (con integer) Bool))
                                      [
                                        [
                                          {
                                            (abs
                                              Unit
                                              (type)
                                              (lam
                                                Unit
                                                Unit
                                                (lam
                                                  Unit_match
                                                  (fun Unit (all out_Unit (type) (fun out_Unit out_Unit)))
                                                  (lam
                                                    ds
                                                    EndDate
                                                    (lam
                                                      ds
                                                      (con integer)
                                                      [
                                                        [
                                                          [
                                                            {
                                                              [
                                                                EndDate_match ds
                                                              ]
                                                              (fun Unit Bool)
                                                            }
                                                            (lam
                                                              n
                                                              (con integer)
                                                              (lam
                                                                thunk
                                                                Unit
                                                                [
                                                                  [
                                                                    lessThanEqInteger
                                                                    n
                                                                  ]
                                                                  ds
                                                                ]
                                                              )
                                                            )
                                                          ]
                                                          (lam thunk Unit False)
                                                        ]
                                                        Unit
                                                      ]
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                            (all out_Unit (type) (fun out_Unit out_Unit))
                                          }
                                          (abs
                                            out_Unit
                                            (type)
                                            (lam case_Unit out_Unit case_Unit)
                                          )
                                        ]
                                        (lam
                                          x
                                          (all out_Unit (type) (fun out_Unit out_Unit))
                                          x
                                        )
                                      ]
                                    )
                                    (lam
                                      arg
                                      (con integer)
                                      (lam
                                        arg
                                        (con integer)
                                        [
                                          (lam
                                            b
                                            (con bool)
                                            [
                                              [
                                                [
                                                  { (builtin ifThenElse) Bool }
                                                  b
                                                ]
                                                True
                                              ]
                                              False
                                            ]
                                          )
                                          [
                                            [
                                              (builtin lessThanEqualsInteger)
                                              arg
                                            ]
                                            arg
                                          ]
                                        ]
                                      )
                                    )
                                  ]
                                )
                              )
                            )
                          )
                          (all out_Bool (type) (fun out_Bool (fun out_Bool out_Bool)))
                        }
                        (abs
                          out_Bool
                          (type)
                          (lam
                            case_True
                            out_Bool
                            (lam case_False out_Bool case_True)
                          )
                        )
                      ]
                      (abs
                        out_Bool
                        (type)
                        (lam
                          case_True
                          out_Bool
                          (lam case_False out_Bool case_False)
                        )
                      )
                    ]
                    (lam
                      x
                      (all out_Bool (type) (fun out_Bool (fun out_Bool out_Bool)))
                      x
                    )
                  ]
                )
              )
            )
          )
          (all out_EndDate (type) (fun (fun (con integer) out_EndDate) (fun out_EndDate out_EndDate)))
        }
        (lam
          arg_0
          (con integer)
          (abs
            out_EndDate
            (type)
            (lam
              case_Fixed
              (fun (con integer) out_EndDate)
              (lam case_Never out_EndDate [ case_Fixed arg_0 ])
            )
          )
        )
      ]
      (abs
        out_EndDate
        (type)
        (lam
          case_Fixed
          (fun (con integer) out_EndDate)
          (lam case_Never out_EndDate case_Never)
        )
      )
    ]
    (lam
      x
      (all out_EndDate (type) (fun (fun (con integer) out_EndDate) (fun out_EndDate out_EndDate)))
      x
    )
  ]
)

==================== Core plugin:  Core to PLC ====================
Result size of Core plugin:  Core to PLC
  = {terms: 77, types: 28, coercions: 0, joins: 0/0}

-- RHS size: {terms: 11, types: 5, coercions: 0, joins: 0/0}
pastEnd :: CompiledCode (EndDate -> Integer -> Bool)
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 100 0}]
pastEnd
  = Language.PlutusTx.Plugin.mkCompiledCode
      @ (EndDate -> Integer -> Bool)
      (GHC.IO.Unsafe.unsafePerformIO
         @ ByteString
         (bytestring-0.10.10.0:Data.ByteString.Unsafe.unsafePackAddressLen
            (ghc-prim-0.6.1:GHC.Types.I# 539#)
            "\SOH\NUL\NUL35\DC2\SOH\ENQFixed\NUL\NUL!\ENQNever\NUL\NUL!\rEndDate_match\NUL\NUL35\DC2\SOH\EOTTrue\NUL\NUL!\ENQFalse\NUL\NUL!\n\
            \Bool_match\NUL\NUL2\SOH\DC1lessThanEqInteger\NUL\NUL3Q!\EOTUnit\NUL\NUL!\n\
            \Unit_match\NUL\NUL!\STXds\NUL\NUL!\STXds\NUL\NUL350\SOH\rEndDate_match\NUL\t\SOH\STXds\NUL\STX!\SOHn\NUL\NUL!\ENQthunk\NUL\NUL3\SOH\DC1lessThanEqInteger\NUL\a\SOH\SOHn\NUL\STX\SOH\STXds\NUL\ETX!\ENQthunk\NUL\NUL\SOH\ENQFalse\NUL\b\SOH\EOTUnit\NUL\EOT\DC2\SOH\tcase_Unit\NUL\NUL\SOH\tcase_Unit\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH!\ETXarg\NUL\NUL!\ETXarg\NUL\NUL2\SOH\SOHb\NUL\NUL35z\\129\SOHb\NUL\SOH\SOH\EOTTrue\NUL\ACK\SOH\ENQFalse\NUL\ENQ3s\SOH\ETXarg\NUL\STX\SOH\ETXarg\NUL\SOH\DC2\SOH\tcase_True\NUL\NUL!\n\
            \case_False\NUL\NUL\SOH\tcase_True\NUL\STX\DC2\SOH\tcase_True\NUL\NUL!\n\
            \case_False\NUL\NUL\SOH\n\
            \case_False\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH!\ENQarg_0\NUL\NUL\DC2\SOH\n\
            \case_Fixed\NUL\NUL!\n\
            \case_Never\NUL\NUL0\SOH\n\
            \case_Fixed\NUL\STX\SOH\ENQarg_0\NUL\ETX\DC2\SOH\n\
            \case_Fixed\NUL\NUL!\n\
            \case_Never\NUL\NUL\SOH\n\
            \case_Never\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH\SOH"#))
      (GHC.IO.Unsafe.unsafePerformIO
         @ ByteString
         (bytestring-0.10.10.0:Data.ByteString.Unsafe.unsafePackAddressLen
            (ghc-prim-0.6.1:GHC.Types.I# 439#)
            "\r\aEndDate\NUL\\142\SOH\SOH\rEndDate_match\NUL\\148\SOH\\129\ENQFixed\NUL\\144\SOH2\SOH\aEndDate\NUL\\142\SOH\\129\ENQNever\NUL\\146\SOH\SOH\aEndDate\NUL\\142\SOHq\EOTBool\NUL\STX\SOH\n\
            \Bool_match\NUL\b\\129\EOTTrue\NUL\EOT\SOH\EOTBool\NUL\STX\\129\ENQFalse\NUL\ACK\SOH\EOTBool\NUL\STXQ\DC1lessThanEqInteger\NUL<2\ETX \SOH\EOTBool\NUL\STXa\ETXarg\NUL>\\1441\ETXarg\NUL@\\144;\SOH\SOHb\NULB\\149;\\189\\213A\EOTBool\NUL\STX!\SOHb\NULB!\EOTTrue\NUL\EOT!\ENQFalse\NUL\ACKw\\163\DC1\ETXarg\NUL>!\ETXarg\NUL@\\225\EOTUnit\NUL\SYN\SOH\n\
            \Unit_match\NUL\SUB\\129\EOTUnit\NUL\CAN\SOH\EOTUnit\NUL\SYN\EM\STXds\NUL\\150\SOH\SOH\aEndDate\NUL\\142\SOHa\STXds\NUL\\152\SOH\\144;\\189\\185\SOH\rEndDate_match\NUL\\148\SOH!\STXds\NUL\\150\SOH!\EOTUnit\NUL\SYN\SOH\EOTBool\NUL\STXa\SOHn\NUL\\156\SOH\\1441\ENQthunk\NUL\\158\SOH\SOH\EOTUnit\NUL\SYNw!\DC1lessThanEqInteger\NUL<!\SOHn\NUL\\156\SOH!\STXds\NUL\\152\SOHa\ENQthunk\NUL\\160\SOH\SOH\EOTUnit\NUL\SYN!\ENQFalse\NUL\ACK!\EOTUnit\NUL\CAN\SOH"#))

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FJ :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 70 0}]
$trModule_s5FJ = "example-0.1.0.0-inplace"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FK :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$trModule_s5FK = ghc-prim-0.6.1:GHC.Types.TrNameS $trModule_s5FJ

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FL :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
$trModule_s5FL = "Lib"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FM :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$trModule_s5FM = ghc-prim-0.6.1:GHC.Types.TrNameS $trModule_s5FL

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Lib.$trModule :: ghc-prim-0.6.1:GHC.Types.Module
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
Lib.$trModule
  = ghc-prim-0.6.1:GHC.Types.Module $trModule_s5FK $trModule_s5FM

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_a5lu [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
$krep_a5lu
  = ghc-prim-0.6.1:GHC.Types.KindRepTyConApp
      integer-gmp-1.0.3.0:GHC.Integer.Type.$tcInteger
      (ghc-prim-0.6.1:GHC.Types.[] @ ghc-prim-0.6.1:GHC.Types.KindRep)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tcEndDate_s5FN :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
$tcEndDate_s5FN = "EndDate"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tcEndDate_s5FO :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$tcEndDate_s5FO = ghc-prim-0.6.1:GHC.Types.TrNameS $tcEndDate_s5FN

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tcEndDate :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Lib.$tcEndDate
  = ghc-prim-0.6.1:GHC.Types.TyCon
      8554338065373400840##
      3482623708274877127##
      Lib.$trModule
      $tcEndDate_s5FO
      0#
      ghc-prim-0.6.1:GHC.Types.krep$*

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_a5lv [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
$krep_a5lv
  = ghc-prim-0.6.1:GHC.Types.KindRepTyConApp
      Lib.$tcEndDate
      (ghc-prim-0.6.1:GHC.Types.[] @ ghc-prim-0.6.1:GHC.Types.KindRep)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tc'Never_s5FP :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
$tc'Never_s5FP = "'Never"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tc'Never_s5FQ :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$tc'Never_s5FQ = ghc-prim-0.6.1:GHC.Types.TrNameS $tc'Never_s5FP

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Never :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Lib.$tc'Never
  = ghc-prim-0.6.1:GHC.Types.TyCon
      10340504404178887934##
      18177538684886749349##
      Lib.$trModule
      $tc'Never_s5FQ
      0#
      $krep_a5lv

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep_a5lt [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
$krep_a5lt
  = ghc-prim-0.6.1:GHC.Types.KindRepFun $krep_a5lu $krep_a5lv

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tc'Fixed_s5FR :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
$tc'Fixed_s5FR = "'Fixed"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tc'Fixed_s5FS :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$tc'Fixed_s5FS = ghc-prim-0.6.1:GHC.Types.TrNameS $tc'Fixed_s5FR

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Fixed :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Lib.$tc'Fixed
  = ghc-prim-0.6.1:GHC.Types.TyCon
      17912921531120851107##
      4815501104477800385##
      Lib.$trModule
      $tc'Fixed_s5FS
      0#
      $krep_a5lt




==================== Simplifier statistics for following pass ====================
Simplifier reached fixed point after 2 iterations

Total ticks:     29

10 PreInlineUnconditionally
  2 m_i5MV
  2 len_i5Nb
  2 addr#_i5Nc
  2 s_i5Nd
  1 plcBS_a5MS
  1 pirBS_a5MT
5 UnfoldingDone
  2 unsafePerformIO
  2 unsafePackAddressLen
  1 mkCompiledCode
1 LetFloatFromLet 1
13 BetaReduction
  2 a_i5MU
  2 m_i5MV
  2 len_i5Nb
  2 addr#_i5Nc
  2 s_i5Nd
  1 a_a5MR
  1 plcBS_a5MS
  1 pirBS_a5MT
2 SimplifierDone 2



==================== Simplifier ====================
  Max iterations = 4
  SimplMode {Phase = InitialPhase [Gentle],
             inline,
             rules,
             eta-expand,
             no case-of-case}
Result size of Simplifier
  = {terms: 124, types: 153, coercions: 0, joins: 0/0}

-- RHS size: {terms: 25, types: 60, coercions: 0, joins: 0/0}
pastEnd_s5WQ :: ByteString
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=NEVER}]
pastEnd_s5WQ
  = case ghc-prim-0.6.1:GHC.Magic.runRW#
           @ ('ghc-prim-0.6.1:GHC.Types.TupleRep
                '[ 'ghc-prim-0.6.1:GHC.Types.TupleRep '[],
                   'ghc-prim-0.6.1:GHC.Types.LiftedRep])
           @ (# ghc-prim-0.6.1:GHC.Prim.State#
                  ghc-prim-0.6.1:GHC.Prim.RealWorld,
                ByteString #)
           (\ (s_i5N3 [OS=OneShot]
                 :: ghc-prim-0.6.1:GHC.Prim.State#
                      ghc-prim-0.6.1:GHC.Prim.RealWorld) ->
              case ghc-prim-0.6.1:GHC.Prim.noDuplicate#
                     @ ghc-prim-0.6.1:GHC.Prim.RealWorld s_i5N3
              of s'_i5N4
              { __DEFAULT ->
              case ghc-prim-0.6.1:GHC.Prim.newMutVar#
                     @ GHC.ForeignPtr.Finalizers
                     @ ghc-prim-0.6.1:GHC.Prim.RealWorld
                     GHC.ForeignPtr.NoFinalizers
                     s'_i5N4
              of
              { (# ipv_i5Pp, ipv1_i5Pq #) ->
              (# ipv_i5Pp,
                 bytestring-0.10.10.0:Data.ByteString.Internal.$WPS
                   (GHC.ForeignPtr.ForeignPtr
                      @ GHC.Word.Word8
                      "\SOH\NUL\NUL35\DC2\SOH\ENQFixed\NUL\NUL!\ENQNever\NUL\NUL!\rEndDate_match\NUL\NUL35\DC2\SOH\EOTTrue\NUL\NUL!\ENQFalse\NUL\NUL!\n\
                      \Bool_match\NUL\NUL2\SOH\DC1lessThanEqInteger\NUL\NUL3Q!\EOTUnit\NUL\NUL!\n\
                      \Unit_match\NUL\NUL!\STXds\NUL\NUL!\STXds\NUL\NUL350\SOH\rEndDate_match\NUL\t\SOH\STXds\NUL\STX!\SOHn\NUL\NUL!\ENQthunk\NUL\NUL3\SOH\DC1lessThanEqInteger\NUL\a\SOH\SOHn\NUL\STX\SOH\STXds\NUL\ETX!\ENQthunk\NUL\NUL\SOH\ENQFalse\NUL\b\SOH\EOTUnit\NUL\EOT\DC2\SOH\tcase_Unit\NUL\NUL\SOH\tcase_Unit\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH!\ETXarg\NUL\NUL!\ETXarg\NUL\NUL2\SOH\SOHb\NUL\NUL35z\\129\SOHb\NUL\SOH\SOH\EOTTrue\NUL\ACK\SOH\ENQFalse\NUL\ENQ3s\SOH\ETXarg\NUL\STX\SOH\ETXarg\NUL\SOH\DC2\SOH\tcase_True\NUL\NUL!\n\
                      \case_False\NUL\NUL\SOH\tcase_True\NUL\STX\DC2\SOH\tcase_True\NUL\NUL!\n\
                      \case_False\NUL\NUL\SOH\n\
                      \case_False\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH!\ENQarg_0\NUL\NUL\DC2\SOH\n\
                      \case_Fixed\NUL\NUL!\n\
                      \case_Never\NUL\NUL0\SOH\n\
                      \case_Fixed\NUL\STX\SOH\ENQarg_0\NUL\ETX\DC2\SOH\n\
                      \case_Fixed\NUL\NUL!\n\
                      \case_Never\NUL\NUL\SOH\n\
                      \case_Never\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH\SOH"#
                      (GHC.ForeignPtr.PlainForeignPtr ipv1_i5Pq))
                   (ghc-prim-0.6.1:GHC.Types.I# 0#)
                   (ghc-prim-0.6.1:GHC.Types.I# 539#) #)
              }
              })
    of
    { (# ipv_i5N6, ipv1_i5N7 #) ->
    ipv1_i5N7
    }

-- RHS size: {terms: 25, types: 60, coercions: 0, joins: 0/0}
pastEnd_s5WR :: ByteString
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=NEVER}]
pastEnd_s5WR
  = case ghc-prim-0.6.1:GHC.Magic.runRW#
           @ ('ghc-prim-0.6.1:GHC.Types.TupleRep
                '[ 'ghc-prim-0.6.1:GHC.Types.TupleRep '[],
                   'ghc-prim-0.6.1:GHC.Types.LiftedRep])
           @ (# ghc-prim-0.6.1:GHC.Prim.State#
                  ghc-prim-0.6.1:GHC.Prim.RealWorld,
                ByteString #)
           (\ (s_i5N3 [OS=OneShot]
                 :: ghc-prim-0.6.1:GHC.Prim.State#
                      ghc-prim-0.6.1:GHC.Prim.RealWorld) ->
              case ghc-prim-0.6.1:GHC.Prim.noDuplicate#
                     @ ghc-prim-0.6.1:GHC.Prim.RealWorld s_i5N3
              of s'_i5N4
              { __DEFAULT ->
              case ghc-prim-0.6.1:GHC.Prim.newMutVar#
                     @ GHC.ForeignPtr.Finalizers
                     @ ghc-prim-0.6.1:GHC.Prim.RealWorld
                     GHC.ForeignPtr.NoFinalizers
                     s'_i5N4
              of
              { (# ipv_i5Pp, ipv1_i5Pq #) ->
              (# ipv_i5Pp,
                 bytestring-0.10.10.0:Data.ByteString.Internal.$WPS
                   (GHC.ForeignPtr.ForeignPtr
                      @ GHC.Word.Word8
                      "\r\aEndDate\NUL\\142\SOH\SOH\rEndDate_match\NUL\\148\SOH\\129\ENQFixed\NUL\\144\SOH2\SOH\aEndDate\NUL\\142\SOH\\129\ENQNever\NUL\\146\SOH\SOH\aEndDate\NUL\\142\SOHq\EOTBool\NUL\STX\SOH\n\
                      \Bool_match\NUL\b\\129\EOTTrue\NUL\EOT\SOH\EOTBool\NUL\STX\\129\ENQFalse\NUL\ACK\SOH\EOTBool\NUL\STXQ\DC1lessThanEqInteger\NUL<2\ETX \SOH\EOTBool\NUL\STXa\ETXarg\NUL>\\1441\ETXarg\NUL@\\144;\SOH\SOHb\NULB\\149;\\189\\213A\EOTBool\NUL\STX!\SOHb\NULB!\EOTTrue\NUL\EOT!\ENQFalse\NUL\ACKw\\163\DC1\ETXarg\NUL>!\ETXarg\NUL@\\225\EOTUnit\NUL\SYN\SOH\n\
                      \Unit_match\NUL\SUB\\129\EOTUnit\NUL\CAN\SOH\EOTUnit\NUL\SYN\EM\STXds\NUL\\150\SOH\SOH\aEndDate\NUL\\142\SOHa\STXds\NUL\\152\SOH\\144;\\189\\185\SOH\rEndDate_match\NUL\\148\SOH!\STXds\NUL\\150\SOH!\EOTUnit\NUL\SYN\SOH\EOTBool\NUL\STXa\SOHn\NUL\\156\SOH\\1441\ENQthunk\NUL\\158\SOH\SOH\EOTUnit\NUL\SYNw!\DC1lessThanEqInteger\NUL<!\SOHn\NUL\\156\SOH!\STXds\NUL\\152\SOHa\ENQthunk\NUL\\160\SOH\SOH\EOTUnit\NUL\SYN!\ENQFalse\NUL\ACK!\EOTUnit\NUL\CAN\SOH"#
                      (GHC.ForeignPtr.PlainForeignPtr ipv1_i5Pq))
                   (ghc-prim-0.6.1:GHC.Types.I# 0#)
                   (ghc-prim-0.6.1:GHC.Types.I# 439#) #)
              }
              })
    of
    { (# ipv_i5N6, ipv1_i5N7 #) ->
    ipv1_i5N7
    }

-- RHS size: {terms: 2, types: 1, coercions: 0, joins: 0/0}
pastEnd_s5WS :: Maybe ByteString
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
pastEnd_s5WS = GHC.Maybe.Just @ ByteString pastEnd_s5WR

-- RHS size: {terms: 3, types: 5, coercions: 0, joins: 0/0}
pastEnd :: CompiledCode (EndDate -> Integer -> Bool)
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
pastEnd
  = Language.PlutusTx.Code.SerializedCode
      @ PLC.DefaultUni
      @ PLC.DefaultFun
      @ (EndDate -> Integer -> Bool)
      pastEnd_s5WQ
      pastEnd_s5WS

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FJ :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 70 0}]
$trModule_s5FJ = "example-0.1.0.0-inplace"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FK :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$trModule_s5FK = ghc-prim-0.6.1:GHC.Types.TrNameS $trModule_s5FJ

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FL :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
$trModule_s5FL = "Lib"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FM :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$trModule_s5FM = ghc-prim-0.6.1:GHC.Types.TrNameS $trModule_s5FL

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Lib.$trModule :: ghc-prim-0.6.1:GHC.Types.Module
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
Lib.$trModule
  = ghc-prim-0.6.1:GHC.Types.Module $trModule_s5FK $trModule_s5FM

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_a5lu [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
$krep_a5lu
  = ghc-prim-0.6.1:GHC.Types.KindRepTyConApp
      integer-gmp-1.0.3.0:GHC.Integer.Type.$tcInteger
      (ghc-prim-0.6.1:GHC.Types.[] @ ghc-prim-0.6.1:GHC.Types.KindRep)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tcEndDate_s5FN :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
$tcEndDate_s5FN = "EndDate"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tcEndDate_s5FO :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$tcEndDate_s5FO = ghc-prim-0.6.1:GHC.Types.TrNameS $tcEndDate_s5FN

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tcEndDate :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Lib.$tcEndDate
  = ghc-prim-0.6.1:GHC.Types.TyCon
      8554338065373400840##
      3482623708274877127##
      Lib.$trModule
      $tcEndDate_s5FO
      0#
      ghc-prim-0.6.1:GHC.Types.krep$*

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_a5lv [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
$krep_a5lv
  = ghc-prim-0.6.1:GHC.Types.KindRepTyConApp
      Lib.$tcEndDate
      (ghc-prim-0.6.1:GHC.Types.[] @ ghc-prim-0.6.1:GHC.Types.KindRep)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tc'Never_s5FP :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
$tc'Never_s5FP = "'Never"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tc'Never_s5FQ :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$tc'Never_s5FQ = ghc-prim-0.6.1:GHC.Types.TrNameS $tc'Never_s5FP

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Never :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Lib.$tc'Never
  = ghc-prim-0.6.1:GHC.Types.TyCon
      10340504404178887934##
      18177538684886749349##
      Lib.$trModule
      $tc'Never_s5FQ
      0#
      $krep_a5lv

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep_a5lt [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
$krep_a5lt
  = ghc-prim-0.6.1:GHC.Types.KindRepFun $krep_a5lu $krep_a5lv

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tc'Fixed_s5FR :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
$tc'Fixed_s5FR = "'Fixed"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tc'Fixed_s5FS :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$tc'Fixed_s5FS = ghc-prim-0.6.1:GHC.Types.TrNameS $tc'Fixed_s5FR

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Fixed :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Lib.$tc'Fixed
  = ghc-prim-0.6.1:GHC.Types.TyCon
      17912921531120851107##
      4815501104477800385##
      Lib.$trModule
      $tc'Fixed_s5FS
      0#
      $krep_a5lt




==================== Specialise ====================
Result size of Specialise
  = {terms: 124, types: 153, coercions: 0, joins: 0/0}

-- RHS size: {terms: 25, types: 60, coercions: 0, joins: 0/0}
pastEnd_s5WQ :: ByteString
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=NEVER}]
pastEnd_s5WQ
  = case ghc-prim-0.6.1:GHC.Magic.runRW#
           @ ('ghc-prim-0.6.1:GHC.Types.TupleRep
                '[ 'ghc-prim-0.6.1:GHC.Types.TupleRep '[],
                   'ghc-prim-0.6.1:GHC.Types.LiftedRep])
           @ (# ghc-prim-0.6.1:GHC.Prim.State#
                  ghc-prim-0.6.1:GHC.Prim.RealWorld,
                ByteString #)
           (\ (s_i5N3 [OS=OneShot]
                 :: ghc-prim-0.6.1:GHC.Prim.State#
                      ghc-prim-0.6.1:GHC.Prim.RealWorld) ->
              case ghc-prim-0.6.1:GHC.Prim.noDuplicate#
                     @ ghc-prim-0.6.1:GHC.Prim.RealWorld s_i5N3
              of s'_i5N4
              { __DEFAULT ->
              case ghc-prim-0.6.1:GHC.Prim.newMutVar#
                     @ GHC.ForeignPtr.Finalizers
                     @ ghc-prim-0.6.1:GHC.Prim.RealWorld
                     GHC.ForeignPtr.NoFinalizers
                     s'_i5N4
              of
              { (# ipv_i5Pp, ipv1_i5Pq #) ->
              (# ipv_i5Pp,
                 bytestring-0.10.10.0:Data.ByteString.Internal.$WPS
                   (GHC.ForeignPtr.ForeignPtr
                      @ GHC.Word.Word8
                      "\SOH\NUL\NUL35\DC2\SOH\ENQFixed\NUL\NUL!\ENQNever\NUL\NUL!\rEndDate_match\NUL\NUL35\DC2\SOH\EOTTrue\NUL\NUL!\ENQFalse\NUL\NUL!\n\
                      \Bool_match\NUL\NUL2\SOH\DC1lessThanEqInteger\NUL\NUL3Q!\EOTUnit\NUL\NUL!\n\
                      \Unit_match\NUL\NUL!\STXds\NUL\NUL!\STXds\NUL\NUL350\SOH\rEndDate_match\NUL\t\SOH\STXds\NUL\STX!\SOHn\NUL\NUL!\ENQthunk\NUL\NUL3\SOH\DC1lessThanEqInteger\NUL\a\SOH\SOHn\NUL\STX\SOH\STXds\NUL\ETX!\ENQthunk\NUL\NUL\SOH\ENQFalse\NUL\b\SOH\EOTUnit\NUL\EOT\DC2\SOH\tcase_Unit\NUL\NUL\SOH\tcase_Unit\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH!\ETXarg\NUL\NUL!\ETXarg\NUL\NUL2\SOH\SOHb\NUL\NUL35z\\129\SOHb\NUL\SOH\SOH\EOTTrue\NUL\ACK\SOH\ENQFalse\NUL\ENQ3s\SOH\ETXarg\NUL\STX\SOH\ETXarg\NUL\SOH\DC2\SOH\tcase_True\NUL\NUL!\n\
                      \case_False\NUL\NUL\SOH\tcase_True\NUL\STX\DC2\SOH\tcase_True\NUL\NUL!\n\
                      \case_False\NUL\NUL\SOH\n\
                      \case_False\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH!\ENQarg_0\NUL\NUL\DC2\SOH\n\
                      \case_Fixed\NUL\NUL!\n\
                      \case_Never\NUL\NUL0\SOH\n\
                      \case_Fixed\NUL\STX\SOH\ENQarg_0\NUL\ETX\DC2\SOH\n\
                      \case_Fixed\NUL\NUL!\n\
                      \case_Never\NUL\NUL\SOH\n\
                      \case_Never\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH\SOH"#
                      (GHC.ForeignPtr.PlainForeignPtr ipv1_i5Pq))
                   (ghc-prim-0.6.1:GHC.Types.I# 0#)
                   (ghc-prim-0.6.1:GHC.Types.I# 539#) #)
              }
              })
    of
    { (# ipv_i5N6, ipv1_i5N7 #) ->
    ipv1_i5N7
    }

-- RHS size: {terms: 25, types: 60, coercions: 0, joins: 0/0}
pastEnd_s5WR :: ByteString
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=NEVER}]
pastEnd_s5WR
  = case ghc-prim-0.6.1:GHC.Magic.runRW#
           @ ('ghc-prim-0.6.1:GHC.Types.TupleRep
                '[ 'ghc-prim-0.6.1:GHC.Types.TupleRep '[],
                   'ghc-prim-0.6.1:GHC.Types.LiftedRep])
           @ (# ghc-prim-0.6.1:GHC.Prim.State#
                  ghc-prim-0.6.1:GHC.Prim.RealWorld,
                ByteString #)
           (\ (s_i5N3 [OS=OneShot]
                 :: ghc-prim-0.6.1:GHC.Prim.State#
                      ghc-prim-0.6.1:GHC.Prim.RealWorld) ->
              case ghc-prim-0.6.1:GHC.Prim.noDuplicate#
                     @ ghc-prim-0.6.1:GHC.Prim.RealWorld s_i5N3
              of s'_i5N4
              { __DEFAULT ->
              case ghc-prim-0.6.1:GHC.Prim.newMutVar#
                     @ GHC.ForeignPtr.Finalizers
                     @ ghc-prim-0.6.1:GHC.Prim.RealWorld
                     GHC.ForeignPtr.NoFinalizers
                     s'_i5N4
              of
              { (# ipv_i5Pp, ipv1_i5Pq #) ->
              (# ipv_i5Pp,
                 bytestring-0.10.10.0:Data.ByteString.Internal.$WPS
                   (GHC.ForeignPtr.ForeignPtr
                      @ GHC.Word.Word8
                      "\r\aEndDate\NUL\\142\SOH\SOH\rEndDate_match\NUL\\148\SOH\\129\ENQFixed\NUL\\144\SOH2\SOH\aEndDate\NUL\\142\SOH\\129\ENQNever\NUL\\146\SOH\SOH\aEndDate\NUL\\142\SOHq\EOTBool\NUL\STX\SOH\n\
                      \Bool_match\NUL\b\\129\EOTTrue\NUL\EOT\SOH\EOTBool\NUL\STX\\129\ENQFalse\NUL\ACK\SOH\EOTBool\NUL\STXQ\DC1lessThanEqInteger\NUL<2\ETX \SOH\EOTBool\NUL\STXa\ETXarg\NUL>\\1441\ETXarg\NUL@\\144;\SOH\SOHb\NULB\\149;\\189\\213A\EOTBool\NUL\STX!\SOHb\NULB!\EOTTrue\NUL\EOT!\ENQFalse\NUL\ACKw\\163\DC1\ETXarg\NUL>!\ETXarg\NUL@\\225\EOTUnit\NUL\SYN\SOH\n\
                      \Unit_match\NUL\SUB\\129\EOTUnit\NUL\CAN\SOH\EOTUnit\NUL\SYN\EM\STXds\NUL\\150\SOH\SOH\aEndDate\NUL\\142\SOHa\STXds\NUL\\152\SOH\\144;\\189\\185\SOH\rEndDate_match\NUL\\148\SOH!\STXds\NUL\\150\SOH!\EOTUnit\NUL\SYN\SOH\EOTBool\NUL\STXa\SOHn\NUL\\156\SOH\\1441\ENQthunk\NUL\\158\SOH\SOH\EOTUnit\NUL\SYNw!\DC1lessThanEqInteger\NUL<!\SOHn\NUL\\156\SOH!\STXds\NUL\\152\SOHa\ENQthunk\NUL\\160\SOH\SOH\EOTUnit\NUL\SYN!\ENQFalse\NUL\ACK!\EOTUnit\NUL\CAN\SOH"#
                      (GHC.ForeignPtr.PlainForeignPtr ipv1_i5Pq))
                   (ghc-prim-0.6.1:GHC.Types.I# 0#)
                   (ghc-prim-0.6.1:GHC.Types.I# 439#) #)
              }
              })
    of
    { (# ipv_i5N6, ipv1_i5N7 #) ->
    ipv1_i5N7
    }

-- RHS size: {terms: 2, types: 1, coercions: 0, joins: 0/0}
pastEnd_s5WS :: Maybe ByteString
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
pastEnd_s5WS = GHC.Maybe.Just @ ByteString pastEnd_s5WR

-- RHS size: {terms: 3, types: 5, coercions: 0, joins: 0/0}
pastEnd :: CompiledCode (EndDate -> Integer -> Bool)
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
pastEnd
  = Language.PlutusTx.Code.SerializedCode
      @ PLC.DefaultUni
      @ PLC.DefaultFun
      @ (EndDate -> Integer -> Bool)
      pastEnd_s5WQ
      pastEnd_s5WS

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FJ :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 70 0}]
$trModule_s5FJ = "example-0.1.0.0-inplace"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FK :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$trModule_s5FK = ghc-prim-0.6.1:GHC.Types.TrNameS $trModule_s5FJ

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FL :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
$trModule_s5FL = "Lib"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FM :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$trModule_s5FM = ghc-prim-0.6.1:GHC.Types.TrNameS $trModule_s5FL

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Lib.$trModule :: ghc-prim-0.6.1:GHC.Types.Module
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
Lib.$trModule
  = ghc-prim-0.6.1:GHC.Types.Module $trModule_s5FK $trModule_s5FM

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_a5lu [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
$krep_a5lu
  = ghc-prim-0.6.1:GHC.Types.KindRepTyConApp
      integer-gmp-1.0.3.0:GHC.Integer.Type.$tcInteger
      (ghc-prim-0.6.1:GHC.Types.[] @ ghc-prim-0.6.1:GHC.Types.KindRep)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tcEndDate_s5FN :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
$tcEndDate_s5FN = "EndDate"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tcEndDate_s5FO :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$tcEndDate_s5FO = ghc-prim-0.6.1:GHC.Types.TrNameS $tcEndDate_s5FN

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tcEndDate :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Lib.$tcEndDate
  = ghc-prim-0.6.1:GHC.Types.TyCon
      8554338065373400840##
      3482623708274877127##
      Lib.$trModule
      $tcEndDate_s5FO
      0#
      ghc-prim-0.6.1:GHC.Types.krep$*

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_a5lv [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
$krep_a5lv
  = ghc-prim-0.6.1:GHC.Types.KindRepTyConApp
      Lib.$tcEndDate
      (ghc-prim-0.6.1:GHC.Types.[] @ ghc-prim-0.6.1:GHC.Types.KindRep)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tc'Never_s5FP :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
$tc'Never_s5FP = "'Never"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tc'Never_s5FQ :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$tc'Never_s5FQ = ghc-prim-0.6.1:GHC.Types.TrNameS $tc'Never_s5FP

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Never :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Lib.$tc'Never
  = ghc-prim-0.6.1:GHC.Types.TyCon
      10340504404178887934##
      18177538684886749349##
      Lib.$trModule
      $tc'Never_s5FQ
      0#
      $krep_a5lv

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep_a5lt [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
$krep_a5lt
  = ghc-prim-0.6.1:GHC.Types.KindRepFun $krep_a5lu $krep_a5lv

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tc'Fixed_s5FR :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
$tc'Fixed_s5FR = "'Fixed"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tc'Fixed_s5FS :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$tc'Fixed_s5FS = ghc-prim-0.6.1:GHC.Types.TrNameS $tc'Fixed_s5FR

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Fixed :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Lib.$tc'Fixed
  = ghc-prim-0.6.1:GHC.Types.TyCon
      17912921531120851107##
      4815501104477800385##
      Lib.$trModule
      $tc'Fixed_s5FS
      0#
      $krep_a5lt




==================== Levels added: ====================
<pastEnd_s5WQ,<0,0>>
<pastEnd_s5WQ,<0,0>>
  = case GHC.Magic.runRW#
           @ ('GHC.Types.TupleRep
                '[ 'GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
           @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                Data.ByteString.Internal.ByteString #)
           (let {
              <lvl_s5X3,F<0,0>>
              <lvl_s5X3,F<0,0>>
                = \ <s_i5N3,<0,1>> ->
                    case GHC.Prim.noDuplicate# @ GHC.Prim.RealWorld s_i5N3
                    of <s'_i5N4,<0,3>>
                    { __DEFAULT ->
                    case GHC.Prim.newMutVar#
                           @ GHC.ForeignPtr.Finalizers
                           @ GHC.Prim.RealWorld
                           GHC.ForeignPtr.NoFinalizers
                           s'_i5N4
                    of <ds1_i5Po,<0,4>>
                    { (# <ipv_i5Pp,<0,4>>, <ipv1_i5Pq,<0,4>> #) ->
                    (# ipv_i5Pp,
                       Data.ByteString.Internal.$WPS
                         (GHC.ForeignPtr.ForeignPtr
                            @ GHC.Word.Word8
                            (let {
                               <lvl_s5X0,F<0,0>>
                               <lvl_s5X0,F<0,0>>
                                 = "\SOH\NUL\NUL35\DC2\SOH\ENQFixed\NUL\NUL!\ENQNever\NUL\NUL!\rEndDate_match\NUL\NUL35\DC2\SOH\EOTTrue\NUL\NUL!\ENQFalse\NUL\NUL!\n\
                                   \Bool_match\NUL\NUL2\SOH\DC1lessThanEqInteger\NUL\NUL3Q!\EOTUnit\NUL\NUL!\n\
                                   \Unit_match\NUL\NUL!\STXds\NUL\NUL!\STXds\NUL\NUL350\SOH\rEndDate_match\NUL\t\SOH\STXds\NUL\STX!\SOHn\NUL\NUL!\ENQthunk\NUL\NUL3\SOH\DC1lessThanEqInteger\NUL\a\SOH\SOHn\NUL\STX\SOH\STXds\NUL\ETX!\ENQthunk\NUL\NUL\SOH\ENQFalse\NUL\b\SOH\EOTUnit\NUL\EOT\DC2\SOH\tcase_Unit\NUL\NUL\SOH\tcase_Unit\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH!\ETXarg\NUL\NUL!\ETXarg\NUL\NUL2\SOH\SOHb\NUL\NUL35z\\129\SOHb\NUL\SOH\SOH\EOTTrue\NUL\ACK\SOH\ENQFalse\NUL\ENQ3s\SOH\ETXarg\NUL\STX\SOH\ETXarg\NUL\SOH\DC2\SOH\tcase_True\NUL\NUL!\n\
                                   \case_False\NUL\NUL\SOH\tcase_True\NUL\STX\DC2\SOH\tcase_True\NUL\NUL!\n\
                                   \case_False\NUL\NUL\SOH\n\
                                   \case_False\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH!\ENQarg_0\NUL\NUL\DC2\SOH\n\
                                   \case_Fixed\NUL\NUL!\n\
                                   \case_Never\NUL\NUL0\SOH\n\
                                   \case_Fixed\NUL\STX\SOH\ENQarg_0\NUL\ETX\DC2\SOH\n\
                                   \case_Fixed\NUL\NUL!\n\
                                   \case_Never\NUL\NUL\SOH\n\
                                   \case_Never\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH\SOH"# } in
                             lvl_s5X0)
                            (GHC.ForeignPtr.PlainForeignPtr ipv1_i5Pq))
                         (let {
                            <lvl_s5X1,F<0,0>>
                            <lvl_s5X1,F<0,0>> = GHC.Types.I# 0# } in
                          lvl_s5X1)
                         (let {
                            <lvl_s5X2,F<0,0>>
                            <lvl_s5X2,F<0,0>> = GHC.Types.I# 539# } in
                          lvl_s5X2) #)
                    }
                    } } in
            lvl_s5X3)
    of <ds_i5N5,<0,3>>
    { (# <ipv_i5N6,<0,3>>, <ipv1_i5N7,<0,3>> #) ->
    ipv1_i5N7
    }
<pastEnd_s5WR,<0,0>>
<pastEnd_s5WR,<0,0>>
  = case GHC.Magic.runRW#
           @ ('GHC.Types.TupleRep
                '[ 'GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
           @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                Data.ByteString.Internal.ByteString #)
           (let {
              <lvl_s5X7,F<0,0>>
              <lvl_s5X7,F<0,0>>
                = \ <s_i5N3,<0,1>> ->
                    case GHC.Prim.noDuplicate# @ GHC.Prim.RealWorld s_i5N3
                    of <s'_i5N4,<0,3>>
                    { __DEFAULT ->
                    case GHC.Prim.newMutVar#
                           @ GHC.ForeignPtr.Finalizers
                           @ GHC.Prim.RealWorld
                           GHC.ForeignPtr.NoFinalizers
                           s'_i5N4
                    of <ds1_i5Po,<0,4>>
                    { (# <ipv_i5Pp,<0,4>>, <ipv1_i5Pq,<0,4>> #) ->
                    (# ipv_i5Pp,
                       Data.ByteString.Internal.$WPS
                         (GHC.ForeignPtr.ForeignPtr
                            @ GHC.Word.Word8
                            (let {
                               <lvl_s5X4,F<0,0>>
                               <lvl_s5X4,F<0,0>>
                                 = "\r\aEndDate\NUL\\142\SOH\SOH\rEndDate_match\NUL\\148\SOH\\129\ENQFixed\NUL\\144\SOH2\SOH\aEndDate\NUL\\142\SOH\\129\ENQNever\NUL\\146\SOH\SOH\aEndDate\NUL\\142\SOHq\EOTBool\NUL\STX\SOH\n\
                                   \Bool_match\NUL\b\\129\EOTTrue\NUL\EOT\SOH\EOTBool\NUL\STX\\129\ENQFalse\NUL\ACK\SOH\EOTBool\NUL\STXQ\DC1lessThanEqInteger\NUL<2\ETX \SOH\EOTBool\NUL\STXa\ETXarg\NUL>\\1441\ETXarg\NUL@\\144;\SOH\SOHb\NULB\\149;\\189\\213A\EOTBool\NUL\STX!\SOHb\NULB!\EOTTrue\NUL\EOT!\ENQFalse\NUL\ACKw\\163\DC1\ETXarg\NUL>!\ETXarg\NUL@\\225\EOTUnit\NUL\SYN\SOH\n\
                                   \Unit_match\NUL\SUB\\129\EOTUnit\NUL\CAN\SOH\EOTUnit\NUL\SYN\EM\STXds\NUL\\150\SOH\SOH\aEndDate\NUL\\142\SOHa\STXds\NUL\\152\SOH\\144;\\189\\185\SOH\rEndDate_match\NUL\\148\SOH!\STXds\NUL\\150\SOH!\EOTUnit\NUL\SYN\SOH\EOTBool\NUL\STXa\SOHn\NUL\\156\SOH\\1441\ENQthunk\NUL\\158\SOH\SOH\EOTUnit\NUL\SYNw!\DC1lessThanEqInteger\NUL<!\SOHn\NUL\\156\SOH!\STXds\NUL\\152\SOHa\ENQthunk\NUL\\160\SOH\SOH\EOTUnit\NUL\SYN!\ENQFalse\NUL\ACK!\EOTUnit\NUL\CAN\SOH"# } in
                             lvl_s5X4)
                            (GHC.ForeignPtr.PlainForeignPtr ipv1_i5Pq))
                         (let {
                            <lvl_s5X5,F<0,0>>
                            <lvl_s5X5,F<0,0>> = GHC.Types.I# 0# } in
                          lvl_s5X5)
                         (let {
                            <lvl_s5X6,F<0,0>>
                            <lvl_s5X6,F<0,0>> = GHC.Types.I# 439# } in
                          lvl_s5X6) #)
                    }
                    } } in
            lvl_s5X7)
    of <ds_i5N5,<0,3>>
    { (# <ipv_i5N6,<0,3>>, <ipv1_i5N7,<0,3>> #) ->
    ipv1_i5N7
    }
<pastEnd_s5WS,<0,0>>
<pastEnd_s5WS,<0,0>>
  = GHC.Maybe.Just @ Data.ByteString.Internal.ByteString pastEnd_s5WR
<Lib.pastEnd,<0,0>>
<Lib.pastEnd,<0,0>>
  = Language.PlutusTx.Code.SerializedCode
      @ Language.PlutusCore.Universe.Default.DefaultUni
      @ Language.PlutusCore.Builtins.DefaultFun
      @ (Lib.EndDate -> GHC.Integer.Type.Integer -> GHC.Types.Bool)
      pastEnd_s5WQ
      pastEnd_s5WS
<$trModule_s5FJ,<0,0>>
<$trModule_s5FJ,<0,0>> = "example-0.1.0.0-inplace"#
<$trModule_s5FK,<0,0>>
<$trModule_s5FK,<0,0>> = GHC.Types.TrNameS $trModule_s5FJ
<$trModule_s5FL,<0,0>>
<$trModule_s5FL,<0,0>> = "Lib"#
<$trModule_s5FM,<0,0>>
<$trModule_s5FM,<0,0>> = GHC.Types.TrNameS $trModule_s5FL
<Lib.$trModule,<0,0>>
<Lib.$trModule,<0,0>>
  = GHC.Types.Module $trModule_s5FK $trModule_s5FM
<$krep_a5lu,<0,0>>
<$krep_a5lu,<0,0>>
  = GHC.Types.KindRepTyConApp
      GHC.Integer.Type.$tcInteger (GHC.Types.[] @ GHC.Types.KindRep)
<$tcEndDate_s5FN,<0,0>>
<$tcEndDate_s5FN,<0,0>> = "EndDate"#
<$tcEndDate_s5FO,<0,0>>
<$tcEndDate_s5FO,<0,0>> = GHC.Types.TrNameS $tcEndDate_s5FN
<Lib.$tcEndDate,<0,0>>
<Lib.$tcEndDate,<0,0>>
  = GHC.Types.TyCon
      8554338065373400840##
      3482623708274877127##
      Lib.$trModule
      $tcEndDate_s5FO
      0#
      GHC.Types.krep$*
<$krep_a5lv,<0,0>>
<$krep_a5lv,<0,0>>
  = GHC.Types.KindRepTyConApp
      Lib.$tcEndDate (GHC.Types.[] @ GHC.Types.KindRep)
<$tc'Never_s5FP,<0,0>>
<$tc'Never_s5FP,<0,0>> = "'Never"#
<$tc'Never_s5FQ,<0,0>>
<$tc'Never_s5FQ,<0,0>> = GHC.Types.TrNameS $tc'Never_s5FP
<Lib.$tc'Never,<0,0>>
<Lib.$tc'Never,<0,0>>
  = GHC.Types.TyCon
      10340504404178887934##
      18177538684886749349##
      Lib.$trModule
      $tc'Never_s5FQ
      0#
      $krep_a5lv
<$krep_a5lt,<0,0>>
<$krep_a5lt,<0,0>> = GHC.Types.KindRepFun $krep_a5lu $krep_a5lv
<$tc'Fixed_s5FR,<0,0>>
<$tc'Fixed_s5FR,<0,0>> = "'Fixed"#
<$tc'Fixed_s5FS,<0,0>>
<$tc'Fixed_s5FS,<0,0>> = GHC.Types.TrNameS $tc'Fixed_s5FR
<Lib.$tc'Fixed,<0,0>>
<Lib.$tc'Fixed,<0,0>>
  = GHC.Types.TyCon
      17912921531120851107##
      4815501104477800385##
      Lib.$trModule
      $tc'Fixed_s5FS
      0#
      $krep_a5lt



==================== FloatOut stats: ====================
6 Lets floated to top level; 0 Lets floated elsewhere; from 2 Lambda groups



==================== Float out(FOS {Lam = Just 0, Consts = True, OverSatApps = False}) ====================
Result size of Float out(FOS {Lam = Just 0,
                              Consts = True,
                              OverSatApps = False})
  = {terms: 140, types: 179, coercions: 0, joins: 0/0}

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl_s5X0 :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId]
lvl_s5X0
  = "\SOH\NUL\NUL35\DC2\SOH\ENQFixed\NUL\NUL!\ENQNever\NUL\NUL!\rEndDate_match\NUL\NUL35\DC2\SOH\EOTTrue\NUL\NUL!\ENQFalse\NUL\NUL!\n\
    \Bool_match\NUL\NUL2\SOH\DC1lessThanEqInteger\NUL\NUL3Q!\EOTUnit\NUL\NUL!\n\
    \Unit_match\NUL\NUL!\STXds\NUL\NUL!\STXds\NUL\NUL350\SOH\rEndDate_match\NUL\t\SOH\STXds\NUL\STX!\SOHn\NUL\NUL!\ENQthunk\NUL\NUL3\SOH\DC1lessThanEqInteger\NUL\a\SOH\SOHn\NUL\STX\SOH\STXds\NUL\ETX!\ENQthunk\NUL\NUL\SOH\ENQFalse\NUL\b\SOH\EOTUnit\NUL\EOT\DC2\SOH\tcase_Unit\NUL\NUL\SOH\tcase_Unit\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH!\ETXarg\NUL\NUL!\ETXarg\NUL\NUL2\SOH\SOHb\NUL\NUL35z\\129\SOHb\NUL\SOH\SOH\EOTTrue\NUL\ACK\SOH\ENQFalse\NUL\ENQ3s\SOH\ETXarg\NUL\STX\SOH\ETXarg\NUL\SOH\DC2\SOH\tcase_True\NUL\NUL!\n\
    \case_False\NUL\NUL\SOH\tcase_True\NUL\STX\DC2\SOH\tcase_True\NUL\NUL!\n\
    \case_False\NUL\NUL\SOH\n\
    \case_False\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH!\ENQarg_0\NUL\NUL\DC2\SOH\n\
    \case_Fixed\NUL\NUL!\n\
    \case_Never\NUL\NUL0\SOH\n\
    \case_Fixed\NUL\STX\SOH\ENQarg_0\NUL\ETX\DC2\SOH\n\
    \case_Fixed\NUL\NUL!\n\
    \case_Never\NUL\NUL\SOH\n\
    \case_Never\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH\SOH"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl_s5X1 :: Int
[LclId]
lvl_s5X1 = ghc-prim-0.6.1:GHC.Types.I# 0#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl_s5X2 :: Int
[LclId]
lvl_s5X2 = ghc-prim-0.6.1:GHC.Types.I# 539#

-- RHS size: {terms: 19, types: 30, coercions: 0, joins: 0/0}
lvl_s5X3
  :: ghc-prim-0.6.1:GHC.Prim.State# ghc-prim-0.6.1:GHC.Prim.RealWorld
     -> (# ghc-prim-0.6.1:GHC.Prim.State#
             ghc-prim-0.6.1:GHC.Prim.RealWorld,
           ByteString #)
[LclId]
lvl_s5X3
  = \ (s_i5N3 [OS=OneShot]
         :: ghc-prim-0.6.1:GHC.Prim.State#
              ghc-prim-0.6.1:GHC.Prim.RealWorld) ->
      case ghc-prim-0.6.1:GHC.Prim.noDuplicate#
             @ ghc-prim-0.6.1:GHC.Prim.RealWorld s_i5N3
      of s'_i5N4
      { __DEFAULT ->
      case ghc-prim-0.6.1:GHC.Prim.newMutVar#
             @ GHC.ForeignPtr.Finalizers
             @ ghc-prim-0.6.1:GHC.Prim.RealWorld
             GHC.ForeignPtr.NoFinalizers
             s'_i5N4
      of
      { (# ipv_i5Pp, ipv1_i5Pq #) ->
      (# ipv_i5Pp,
         bytestring-0.10.10.0:Data.ByteString.Internal.$WPS
           (GHC.ForeignPtr.ForeignPtr
              @ GHC.Word.Word8
              lvl_s5X0
              (GHC.ForeignPtr.PlainForeignPtr ipv1_i5Pq))
           lvl_s5X1
           lvl_s5X2 #)
      }
      }

-- RHS size: {terms: 5, types: 30, coercions: 0, joins: 0/0}
pastEnd_s5WQ :: ByteString
[LclId]
pastEnd_s5WQ
  = case ghc-prim-0.6.1:GHC.Magic.runRW#
           @ ('ghc-prim-0.6.1:GHC.Types.TupleRep
                '[ 'ghc-prim-0.6.1:GHC.Types.TupleRep '[],
                   'ghc-prim-0.6.1:GHC.Types.LiftedRep])
           @ (# ghc-prim-0.6.1:GHC.Prim.State#
                  ghc-prim-0.6.1:GHC.Prim.RealWorld,
                ByteString #)
           lvl_s5X3
    of
    { (# ipv_i5N6, ipv1_i5N7 #) ->
    ipv1_i5N7
    }

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl_s5X4 :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId]
lvl_s5X4
  = "\r\aEndDate\NUL\\142\SOH\SOH\rEndDate_match\NUL\\148\SOH\\129\ENQFixed\NUL\\144\SOH2\SOH\aEndDate\NUL\\142\SOH\\129\ENQNever\NUL\\146\SOH\SOH\aEndDate\NUL\\142\SOHq\EOTBool\NUL\STX\SOH\n\
    \Bool_match\NUL\b\\129\EOTTrue\NUL\EOT\SOH\EOTBool\NUL\STX\\129\ENQFalse\NUL\ACK\SOH\EOTBool\NUL\STXQ\DC1lessThanEqInteger\NUL<2\ETX \SOH\EOTBool\NUL\STXa\ETXarg\NUL>\\1441\ETXarg\NUL@\\144;\SOH\SOHb\NULB\\149;\\189\\213A\EOTBool\NUL\STX!\SOHb\NULB!\EOTTrue\NUL\EOT!\ENQFalse\NUL\ACKw\\163\DC1\ETXarg\NUL>!\ETXarg\NUL@\\225\EOTUnit\NUL\SYN\SOH\n\
    \Unit_match\NUL\SUB\\129\EOTUnit\NUL\CAN\SOH\EOTUnit\NUL\SYN\EM\STXds\NUL\\150\SOH\SOH\aEndDate\NUL\\142\SOHa\STXds\NUL\\152\SOH\\144;\\189\\185\SOH\rEndDate_match\NUL\\148\SOH!\STXds\NUL\\150\SOH!\EOTUnit\NUL\SYN\SOH\EOTBool\NUL\STXa\SOHn\NUL\\156\SOH\\1441\ENQthunk\NUL\\158\SOH\SOH\EOTUnit\NUL\SYNw!\DC1lessThanEqInteger\NUL<!\SOHn\NUL\\156\SOH!\STXds\NUL\\152\SOHa\ENQthunk\NUL\\160\SOH\SOH\EOTUnit\NUL\SYN!\ENQFalse\NUL\ACK!\EOTUnit\NUL\CAN\SOH"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl_s5X5 :: Int
[LclId]
lvl_s5X5 = ghc-prim-0.6.1:GHC.Types.I# 0#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl_s5X6 :: Int
[LclId]
lvl_s5X6 = ghc-prim-0.6.1:GHC.Types.I# 439#

-- RHS size: {terms: 19, types: 30, coercions: 0, joins: 0/0}
lvl_s5X7
  :: ghc-prim-0.6.1:GHC.Prim.State# ghc-prim-0.6.1:GHC.Prim.RealWorld
     -> (# ghc-prim-0.6.1:GHC.Prim.State#
             ghc-prim-0.6.1:GHC.Prim.RealWorld,
           ByteString #)
[LclId]
lvl_s5X7
  = \ (s_i5N3 [OS=OneShot]
         :: ghc-prim-0.6.1:GHC.Prim.State#
              ghc-prim-0.6.1:GHC.Prim.RealWorld) ->
      case ghc-prim-0.6.1:GHC.Prim.noDuplicate#
             @ ghc-prim-0.6.1:GHC.Prim.RealWorld s_i5N3
      of s'_i5N4
      { __DEFAULT ->
      case ghc-prim-0.6.1:GHC.Prim.newMutVar#
             @ GHC.ForeignPtr.Finalizers
             @ ghc-prim-0.6.1:GHC.Prim.RealWorld
             GHC.ForeignPtr.NoFinalizers
             s'_i5N4
      of
      { (# ipv_i5Pp, ipv1_i5Pq #) ->
      (# ipv_i5Pp,
         bytestring-0.10.10.0:Data.ByteString.Internal.$WPS
           (GHC.ForeignPtr.ForeignPtr
              @ GHC.Word.Word8
              lvl_s5X4
              (GHC.ForeignPtr.PlainForeignPtr ipv1_i5Pq))
           lvl_s5X5
           lvl_s5X6 #)
      }
      }

-- RHS size: {terms: 5, types: 30, coercions: 0, joins: 0/0}
pastEnd_s5WR :: ByteString
[LclId]
pastEnd_s5WR
  = case ghc-prim-0.6.1:GHC.Magic.runRW#
           @ ('ghc-prim-0.6.1:GHC.Types.TupleRep
                '[ 'ghc-prim-0.6.1:GHC.Types.TupleRep '[],
                   'ghc-prim-0.6.1:GHC.Types.LiftedRep])
           @ (# ghc-prim-0.6.1:GHC.Prim.State#
                  ghc-prim-0.6.1:GHC.Prim.RealWorld,
                ByteString #)
           lvl_s5X7
    of
    { (# ipv_i5N6, ipv1_i5N7 #) ->
    ipv1_i5N7
    }

-- RHS size: {terms: 2, types: 1, coercions: 0, joins: 0/0}
pastEnd_s5WS :: Maybe ByteString
[LclId]
pastEnd_s5WS = GHC.Maybe.Just @ ByteString pastEnd_s5WR

-- RHS size: {terms: 3, types: 5, coercions: 0, joins: 0/0}
pastEnd :: CompiledCode (EndDate -> Integer -> Bool)
[LclIdX]
pastEnd
  = Language.PlutusTx.Code.SerializedCode
      @ PLC.DefaultUni
      @ PLC.DefaultFun
      @ (EndDate -> Integer -> Bool)
      pastEnd_s5WQ
      pastEnd_s5WS

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FJ :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId]
$trModule_s5FJ = "example-0.1.0.0-inplace"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FK :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId]
$trModule_s5FK = ghc-prim-0.6.1:GHC.Types.TrNameS $trModule_s5FJ

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FL :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId]
$trModule_s5FL = "Lib"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FM :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId]
$trModule_s5FM = ghc-prim-0.6.1:GHC.Types.TrNameS $trModule_s5FL

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Lib.$trModule :: ghc-prim-0.6.1:GHC.Types.Module
[LclIdX]
Lib.$trModule
  = ghc-prim-0.6.1:GHC.Types.Module $trModule_s5FK $trModule_s5FM

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_a5lu [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId]
$krep_a5lu
  = ghc-prim-0.6.1:GHC.Types.KindRepTyConApp
      integer-gmp-1.0.3.0:GHC.Integer.Type.$tcInteger
      (ghc-prim-0.6.1:GHC.Types.[] @ ghc-prim-0.6.1:GHC.Types.KindRep)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tcEndDate_s5FN :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId]
$tcEndDate_s5FN = "EndDate"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tcEndDate_s5FO :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId]
$tcEndDate_s5FO = ghc-prim-0.6.1:GHC.Types.TrNameS $tcEndDate_s5FN

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tcEndDate :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX]
Lib.$tcEndDate
  = ghc-prim-0.6.1:GHC.Types.TyCon
      8554338065373400840##
      3482623708274877127##
      Lib.$trModule
      $tcEndDate_s5FO
      0#
      ghc-prim-0.6.1:GHC.Types.krep$*

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_a5lv [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId]
$krep_a5lv
  = ghc-prim-0.6.1:GHC.Types.KindRepTyConApp
      Lib.$tcEndDate
      (ghc-prim-0.6.1:GHC.Types.[] @ ghc-prim-0.6.1:GHC.Types.KindRep)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tc'Never_s5FP :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId]
$tc'Never_s5FP = "'Never"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tc'Never_s5FQ :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId]
$tc'Never_s5FQ = ghc-prim-0.6.1:GHC.Types.TrNameS $tc'Never_s5FP

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Never :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX]
Lib.$tc'Never
  = ghc-prim-0.6.1:GHC.Types.TyCon
      10340504404178887934##
      18177538684886749349##
      Lib.$trModule
      $tc'Never_s5FQ
      0#
      $krep_a5lv

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep_a5lt [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId]
$krep_a5lt
  = ghc-prim-0.6.1:GHC.Types.KindRepFun $krep_a5lu $krep_a5lv

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tc'Fixed_s5FR :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId]
$tc'Fixed_s5FR = "'Fixed"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tc'Fixed_s5FS :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId]
$tc'Fixed_s5FS = ghc-prim-0.6.1:GHC.Types.TrNameS $tc'Fixed_s5FR

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Fixed :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX]
Lib.$tc'Fixed
  = ghc-prim-0.6.1:GHC.Types.TyCon
      17912921531120851107##
      4815501104477800385##
      Lib.$trModule
      $tc'Fixed_s5FS
      0#
      $krep_a5lt




==================== Simplifier statistics for following pass ====================
Simplifier reached fixed point after 2 iterations

Total ticks:     8

8 PreInlineUnconditionally
  1 lvl_s5X0
  1 lvl_s5X1
  1 lvl_s5X2
  1 lvl_s5X3
  1 lvl_s5X4
  1 lvl_s5X5
  1 lvl_s5X6
  1 lvl_s5X7
2 SimplifierDone 2



==================== Simplifier ====================
  Max iterations = 4
  SimplMode {Phase = 2 [main],
             inline,
             rules,
             eta-expand,
             case-of-case}
Result size of Simplifier
  = {terms: 124, types: 153, coercions: 0, joins: 0/0}

-- RHS size: {terms: 25, types: 60, coercions: 0, joins: 0/0}
pastEnd_s5WQ :: ByteString
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=NEVER}]
pastEnd_s5WQ
  = case ghc-prim-0.6.1:GHC.Magic.runRW#
           @ ('ghc-prim-0.6.1:GHC.Types.TupleRep
                '[ 'ghc-prim-0.6.1:GHC.Types.TupleRep '[],
                   'ghc-prim-0.6.1:GHC.Types.LiftedRep])
           @ (# ghc-prim-0.6.1:GHC.Prim.State#
                  ghc-prim-0.6.1:GHC.Prim.RealWorld,
                ByteString #)
           (\ (s_i5N3 [OS=OneShot]
                 :: ghc-prim-0.6.1:GHC.Prim.State#
                      ghc-prim-0.6.1:GHC.Prim.RealWorld) ->
              case ghc-prim-0.6.1:GHC.Prim.noDuplicate#
                     @ ghc-prim-0.6.1:GHC.Prim.RealWorld s_i5N3
              of s'_i5N4
              { __DEFAULT ->
              case ghc-prim-0.6.1:GHC.Prim.newMutVar#
                     @ GHC.ForeignPtr.Finalizers
                     @ ghc-prim-0.6.1:GHC.Prim.RealWorld
                     GHC.ForeignPtr.NoFinalizers
                     s'_i5N4
              of
              { (# ipv_i5Pp, ipv1_i5Pq #) ->
              (# ipv_i5Pp,
                 bytestring-0.10.10.0:Data.ByteString.Internal.$WPS
                   (GHC.ForeignPtr.ForeignPtr
                      @ GHC.Word.Word8
                      "\SOH\NUL\NUL35\DC2\SOH\ENQFixed\NUL\NUL!\ENQNever\NUL\NUL!\rEndDate_match\NUL\NUL35\DC2\SOH\EOTTrue\NUL\NUL!\ENQFalse\NUL\NUL!\n\
                      \Bool_match\NUL\NUL2\SOH\DC1lessThanEqInteger\NUL\NUL3Q!\EOTUnit\NUL\NUL!\n\
                      \Unit_match\NUL\NUL!\STXds\NUL\NUL!\STXds\NUL\NUL350\SOH\rEndDate_match\NUL\t\SOH\STXds\NUL\STX!\SOHn\NUL\NUL!\ENQthunk\NUL\NUL3\SOH\DC1lessThanEqInteger\NUL\a\SOH\SOHn\NUL\STX\SOH\STXds\NUL\ETX!\ENQthunk\NUL\NUL\SOH\ENQFalse\NUL\b\SOH\EOTUnit\NUL\EOT\DC2\SOH\tcase_Unit\NUL\NUL\SOH\tcase_Unit\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH!\ETXarg\NUL\NUL!\ETXarg\NUL\NUL2\SOH\SOHb\NUL\NUL35z\\129\SOHb\NUL\SOH\SOH\EOTTrue\NUL\ACK\SOH\ENQFalse\NUL\ENQ3s\SOH\ETXarg\NUL\STX\SOH\ETXarg\NUL\SOH\DC2\SOH\tcase_True\NUL\NUL!\n\
                      \case_False\NUL\NUL\SOH\tcase_True\NUL\STX\DC2\SOH\tcase_True\NUL\NUL!\n\
                      \case_False\NUL\NUL\SOH\n\
                      \case_False\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH!\ENQarg_0\NUL\NUL\DC2\SOH\n\
                      \case_Fixed\NUL\NUL!\n\
                      \case_Never\NUL\NUL0\SOH\n\
                      \case_Fixed\NUL\STX\SOH\ENQarg_0\NUL\ETX\DC2\SOH\n\
                      \case_Fixed\NUL\NUL!\n\
                      \case_Never\NUL\NUL\SOH\n\
                      \case_Never\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH\SOH"#
                      (GHC.ForeignPtr.PlainForeignPtr ipv1_i5Pq))
                   (ghc-prim-0.6.1:GHC.Types.I# 0#)
                   (ghc-prim-0.6.1:GHC.Types.I# 539#) #)
              }
              })
    of
    { (# ipv_i5N6, ipv1_i5N7 #) ->
    ipv1_i5N7
    }

-- RHS size: {terms: 25, types: 60, coercions: 0, joins: 0/0}
pastEnd_s5WR :: ByteString
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=NEVER}]
pastEnd_s5WR
  = case ghc-prim-0.6.1:GHC.Magic.runRW#
           @ ('ghc-prim-0.6.1:GHC.Types.TupleRep
                '[ 'ghc-prim-0.6.1:GHC.Types.TupleRep '[],
                   'ghc-prim-0.6.1:GHC.Types.LiftedRep])
           @ (# ghc-prim-0.6.1:GHC.Prim.State#
                  ghc-prim-0.6.1:GHC.Prim.RealWorld,
                ByteString #)
           (\ (s_i5N3 [OS=OneShot]
                 :: ghc-prim-0.6.1:GHC.Prim.State#
                      ghc-prim-0.6.1:GHC.Prim.RealWorld) ->
              case ghc-prim-0.6.1:GHC.Prim.noDuplicate#
                     @ ghc-prim-0.6.1:GHC.Prim.RealWorld s_i5N3
              of s'_i5N4
              { __DEFAULT ->
              case ghc-prim-0.6.1:GHC.Prim.newMutVar#
                     @ GHC.ForeignPtr.Finalizers
                     @ ghc-prim-0.6.1:GHC.Prim.RealWorld
                     GHC.ForeignPtr.NoFinalizers
                     s'_i5N4
              of
              { (# ipv_i5Pp, ipv1_i5Pq #) ->
              (# ipv_i5Pp,
                 bytestring-0.10.10.0:Data.ByteString.Internal.$WPS
                   (GHC.ForeignPtr.ForeignPtr
                      @ GHC.Word.Word8
                      "\r\aEndDate\NUL\\142\SOH\SOH\rEndDate_match\NUL\\148\SOH\\129\ENQFixed\NUL\\144\SOH2\SOH\aEndDate\NUL\\142\SOH\\129\ENQNever\NUL\\146\SOH\SOH\aEndDate\NUL\\142\SOHq\EOTBool\NUL\STX\SOH\n\
                      \Bool_match\NUL\b\\129\EOTTrue\NUL\EOT\SOH\EOTBool\NUL\STX\\129\ENQFalse\NUL\ACK\SOH\EOTBool\NUL\STXQ\DC1lessThanEqInteger\NUL<2\ETX \SOH\EOTBool\NUL\STXa\ETXarg\NUL>\\1441\ETXarg\NUL@\\144;\SOH\SOHb\NULB\\149;\\189\\213A\EOTBool\NUL\STX!\SOHb\NULB!\EOTTrue\NUL\EOT!\ENQFalse\NUL\ACKw\\163\DC1\ETXarg\NUL>!\ETXarg\NUL@\\225\EOTUnit\NUL\SYN\SOH\n\
                      \Unit_match\NUL\SUB\\129\EOTUnit\NUL\CAN\SOH\EOTUnit\NUL\SYN\EM\STXds\NUL\\150\SOH\SOH\aEndDate\NUL\\142\SOHa\STXds\NUL\\152\SOH\\144;\\189\\185\SOH\rEndDate_match\NUL\\148\SOH!\STXds\NUL\\150\SOH!\EOTUnit\NUL\SYN\SOH\EOTBool\NUL\STXa\SOHn\NUL\\156\SOH\\1441\ENQthunk\NUL\\158\SOH\SOH\EOTUnit\NUL\SYNw!\DC1lessThanEqInteger\NUL<!\SOHn\NUL\\156\SOH!\STXds\NUL\\152\SOHa\ENQthunk\NUL\\160\SOH\SOH\EOTUnit\NUL\SYN!\ENQFalse\NUL\ACK!\EOTUnit\NUL\CAN\SOH"#
                      (GHC.ForeignPtr.PlainForeignPtr ipv1_i5Pq))
                   (ghc-prim-0.6.1:GHC.Types.I# 0#)
                   (ghc-prim-0.6.1:GHC.Types.I# 439#) #)
              }
              })
    of
    { (# ipv_i5N6, ipv1_i5N7 #) ->
    ipv1_i5N7
    }

-- RHS size: {terms: 2, types: 1, coercions: 0, joins: 0/0}
pastEnd_s5WS :: Maybe ByteString
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
pastEnd_s5WS = GHC.Maybe.Just @ ByteString pastEnd_s5WR

-- RHS size: {terms: 3, types: 5, coercions: 0, joins: 0/0}
pastEnd :: CompiledCode (EndDate -> Integer -> Bool)
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
pastEnd
  = Language.PlutusTx.Code.SerializedCode
      @ PLC.DefaultUni
      @ PLC.DefaultFun
      @ (EndDate -> Integer -> Bool)
      pastEnd_s5WQ
      pastEnd_s5WS

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FJ :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 70 0}]
$trModule_s5FJ = "example-0.1.0.0-inplace"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FK :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$trModule_s5FK = ghc-prim-0.6.1:GHC.Types.TrNameS $trModule_s5FJ

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FL :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
$trModule_s5FL = "Lib"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FM :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$trModule_s5FM = ghc-prim-0.6.1:GHC.Types.TrNameS $trModule_s5FL

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Lib.$trModule :: ghc-prim-0.6.1:GHC.Types.Module
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
Lib.$trModule
  = ghc-prim-0.6.1:GHC.Types.Module $trModule_s5FK $trModule_s5FM

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_a5lu [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
$krep_a5lu
  = ghc-prim-0.6.1:GHC.Types.KindRepTyConApp
      integer-gmp-1.0.3.0:GHC.Integer.Type.$tcInteger
      (ghc-prim-0.6.1:GHC.Types.[] @ ghc-prim-0.6.1:GHC.Types.KindRep)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tcEndDate_s5FN :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
$tcEndDate_s5FN = "EndDate"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tcEndDate_s5FO :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$tcEndDate_s5FO = ghc-prim-0.6.1:GHC.Types.TrNameS $tcEndDate_s5FN

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tcEndDate :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Lib.$tcEndDate
  = ghc-prim-0.6.1:GHC.Types.TyCon
      8554338065373400840##
      3482623708274877127##
      Lib.$trModule
      $tcEndDate_s5FO
      0#
      ghc-prim-0.6.1:GHC.Types.krep$*

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_a5lv [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
$krep_a5lv
  = ghc-prim-0.6.1:GHC.Types.KindRepTyConApp
      Lib.$tcEndDate
      (ghc-prim-0.6.1:GHC.Types.[] @ ghc-prim-0.6.1:GHC.Types.KindRep)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tc'Never_s5FP :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
$tc'Never_s5FP = "'Never"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tc'Never_s5FQ :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$tc'Never_s5FQ = ghc-prim-0.6.1:GHC.Types.TrNameS $tc'Never_s5FP

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Never :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Lib.$tc'Never
  = ghc-prim-0.6.1:GHC.Types.TyCon
      10340504404178887934##
      18177538684886749349##
      Lib.$trModule
      $tc'Never_s5FQ
      0#
      $krep_a5lv

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep_a5lt [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
$krep_a5lt
  = ghc-prim-0.6.1:GHC.Types.KindRepFun $krep_a5lu $krep_a5lv

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tc'Fixed_s5FR :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
$tc'Fixed_s5FR = "'Fixed"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tc'Fixed_s5FS :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$tc'Fixed_s5FS = ghc-prim-0.6.1:GHC.Types.TrNameS $tc'Fixed_s5FR

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Fixed :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Lib.$tc'Fixed
  = ghc-prim-0.6.1:GHC.Types.TyCon
      17912921531120851107##
      4815501104477800385##
      Lib.$trModule
      $tc'Fixed_s5FS
      0#
      $krep_a5lt




==================== Simplifier statistics for following pass ====================
Simplifier reached fixed point after 1 iterations

Total ticks:     0

1 SimplifierDone 1



==================== Simplifier ====================
  Max iterations = 4
  SimplMode {Phase = 1 [main],
             inline,
             rules,
             eta-expand,
             case-of-case}
Result size of Simplifier
  = {terms: 124, types: 153, coercions: 0, joins: 0/0}

-- RHS size: {terms: 25, types: 60, coercions: 0, joins: 0/0}
pastEnd_s5WQ :: ByteString
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=NEVER}]
pastEnd_s5WQ
  = case ghc-prim-0.6.1:GHC.Magic.runRW#
           @ ('ghc-prim-0.6.1:GHC.Types.TupleRep
                '[ 'ghc-prim-0.6.1:GHC.Types.TupleRep '[],
                   'ghc-prim-0.6.1:GHC.Types.LiftedRep])
           @ (# ghc-prim-0.6.1:GHC.Prim.State#
                  ghc-prim-0.6.1:GHC.Prim.RealWorld,
                ByteString #)
           (\ (s_i5N3 [OS=OneShot]
                 :: ghc-prim-0.6.1:GHC.Prim.State#
                      ghc-prim-0.6.1:GHC.Prim.RealWorld) ->
              case ghc-prim-0.6.1:GHC.Prim.noDuplicate#
                     @ ghc-prim-0.6.1:GHC.Prim.RealWorld s_i5N3
              of s'_i5N4
              { __DEFAULT ->
              case ghc-prim-0.6.1:GHC.Prim.newMutVar#
                     @ GHC.ForeignPtr.Finalizers
                     @ ghc-prim-0.6.1:GHC.Prim.RealWorld
                     GHC.ForeignPtr.NoFinalizers
                     s'_i5N4
              of
              { (# ipv_i5Pp, ipv1_i5Pq #) ->
              (# ipv_i5Pp,
                 bytestring-0.10.10.0:Data.ByteString.Internal.$WPS
                   (GHC.ForeignPtr.ForeignPtr
                      @ GHC.Word.Word8
                      "\SOH\NUL\NUL35\DC2\SOH\ENQFixed\NUL\NUL!\ENQNever\NUL\NUL!\rEndDate_match\NUL\NUL35\DC2\SOH\EOTTrue\NUL\NUL!\ENQFalse\NUL\NUL!\n\
                      \Bool_match\NUL\NUL2\SOH\DC1lessThanEqInteger\NUL\NUL3Q!\EOTUnit\NUL\NUL!\n\
                      \Unit_match\NUL\NUL!\STXds\NUL\NUL!\STXds\NUL\NUL350\SOH\rEndDate_match\NUL\t\SOH\STXds\NUL\STX!\SOHn\NUL\NUL!\ENQthunk\NUL\NUL3\SOH\DC1lessThanEqInteger\NUL\a\SOH\SOHn\NUL\STX\SOH\STXds\NUL\ETX!\ENQthunk\NUL\NUL\SOH\ENQFalse\NUL\b\SOH\EOTUnit\NUL\EOT\DC2\SOH\tcase_Unit\NUL\NUL\SOH\tcase_Unit\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH!\ETXarg\NUL\NUL!\ETXarg\NUL\NUL2\SOH\SOHb\NUL\NUL35z\\129\SOHb\NUL\SOH\SOH\EOTTrue\NUL\ACK\SOH\ENQFalse\NUL\ENQ3s\SOH\ETXarg\NUL\STX\SOH\ETXarg\NUL\SOH\DC2\SOH\tcase_True\NUL\NUL!\n\
                      \case_False\NUL\NUL\SOH\tcase_True\NUL\STX\DC2\SOH\tcase_True\NUL\NUL!\n\
                      \case_False\NUL\NUL\SOH\n\
                      \case_False\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH!\ENQarg_0\NUL\NUL\DC2\SOH\n\
                      \case_Fixed\NUL\NUL!\n\
                      \case_Never\NUL\NUL0\SOH\n\
                      \case_Fixed\NUL\STX\SOH\ENQarg_0\NUL\ETX\DC2\SOH\n\
                      \case_Fixed\NUL\NUL!\n\
                      \case_Never\NUL\NUL\SOH\n\
                      \case_Never\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH\SOH"#
                      (GHC.ForeignPtr.PlainForeignPtr ipv1_i5Pq))
                   (ghc-prim-0.6.1:GHC.Types.I# 0#)
                   (ghc-prim-0.6.1:GHC.Types.I# 539#) #)
              }
              })
    of
    { (# ipv_i5N6, ipv1_i5N7 #) ->
    ipv1_i5N7
    }

-- RHS size: {terms: 25, types: 60, coercions: 0, joins: 0/0}
pastEnd_s5WR :: ByteString
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=NEVER}]
pastEnd_s5WR
  = case ghc-prim-0.6.1:GHC.Magic.runRW#
           @ ('ghc-prim-0.6.1:GHC.Types.TupleRep
                '[ 'ghc-prim-0.6.1:GHC.Types.TupleRep '[],
                   'ghc-prim-0.6.1:GHC.Types.LiftedRep])
           @ (# ghc-prim-0.6.1:GHC.Prim.State#
                  ghc-prim-0.6.1:GHC.Prim.RealWorld,
                ByteString #)
           (\ (s_i5N3 [OS=OneShot]
                 :: ghc-prim-0.6.1:GHC.Prim.State#
                      ghc-prim-0.6.1:GHC.Prim.RealWorld) ->
              case ghc-prim-0.6.1:GHC.Prim.noDuplicate#
                     @ ghc-prim-0.6.1:GHC.Prim.RealWorld s_i5N3
              of s'_i5N4
              { __DEFAULT ->
              case ghc-prim-0.6.1:GHC.Prim.newMutVar#
                     @ GHC.ForeignPtr.Finalizers
                     @ ghc-prim-0.6.1:GHC.Prim.RealWorld
                     GHC.ForeignPtr.NoFinalizers
                     s'_i5N4
              of
              { (# ipv_i5Pp, ipv1_i5Pq #) ->
              (# ipv_i5Pp,
                 bytestring-0.10.10.0:Data.ByteString.Internal.$WPS
                   (GHC.ForeignPtr.ForeignPtr
                      @ GHC.Word.Word8
                      "\r\aEndDate\NUL\\142\SOH\SOH\rEndDate_match\NUL\\148\SOH\\129\ENQFixed\NUL\\144\SOH2\SOH\aEndDate\NUL\\142\SOH\\129\ENQNever\NUL\\146\SOH\SOH\aEndDate\NUL\\142\SOHq\EOTBool\NUL\STX\SOH\n\
                      \Bool_match\NUL\b\\129\EOTTrue\NUL\EOT\SOH\EOTBool\NUL\STX\\129\ENQFalse\NUL\ACK\SOH\EOTBool\NUL\STXQ\DC1lessThanEqInteger\NUL<2\ETX \SOH\EOTBool\NUL\STXa\ETXarg\NUL>\\1441\ETXarg\NUL@\\144;\SOH\SOHb\NULB\\149;\\189\\213A\EOTBool\NUL\STX!\SOHb\NULB!\EOTTrue\NUL\EOT!\ENQFalse\NUL\ACKw\\163\DC1\ETXarg\NUL>!\ETXarg\NUL@\\225\EOTUnit\NUL\SYN\SOH\n\
                      \Unit_match\NUL\SUB\\129\EOTUnit\NUL\CAN\SOH\EOTUnit\NUL\SYN\EM\STXds\NUL\\150\SOH\SOH\aEndDate\NUL\\142\SOHa\STXds\NUL\\152\SOH\\144;\\189\\185\SOH\rEndDate_match\NUL\\148\SOH!\STXds\NUL\\150\SOH!\EOTUnit\NUL\SYN\SOH\EOTBool\NUL\STXa\SOHn\NUL\\156\SOH\\1441\ENQthunk\NUL\\158\SOH\SOH\EOTUnit\NUL\SYNw!\DC1lessThanEqInteger\NUL<!\SOHn\NUL\\156\SOH!\STXds\NUL\\152\SOHa\ENQthunk\NUL\\160\SOH\SOH\EOTUnit\NUL\SYN!\ENQFalse\NUL\ACK!\EOTUnit\NUL\CAN\SOH"#
                      (GHC.ForeignPtr.PlainForeignPtr ipv1_i5Pq))
                   (ghc-prim-0.6.1:GHC.Types.I# 0#)
                   (ghc-prim-0.6.1:GHC.Types.I# 439#) #)
              }
              })
    of
    { (# ipv_i5N6, ipv1_i5N7 #) ->
    ipv1_i5N7
    }

-- RHS size: {terms: 2, types: 1, coercions: 0, joins: 0/0}
pastEnd_s5WS :: Maybe ByteString
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
pastEnd_s5WS = GHC.Maybe.Just @ ByteString pastEnd_s5WR

-- RHS size: {terms: 3, types: 5, coercions: 0, joins: 0/0}
pastEnd :: CompiledCode (EndDate -> Integer -> Bool)
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
pastEnd
  = Language.PlutusTx.Code.SerializedCode
      @ PLC.DefaultUni
      @ PLC.DefaultFun
      @ (EndDate -> Integer -> Bool)
      pastEnd_s5WQ
      pastEnd_s5WS

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FJ :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 70 0}]
$trModule_s5FJ = "example-0.1.0.0-inplace"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FK :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$trModule_s5FK = ghc-prim-0.6.1:GHC.Types.TrNameS $trModule_s5FJ

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FL :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
$trModule_s5FL = "Lib"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FM :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$trModule_s5FM = ghc-prim-0.6.1:GHC.Types.TrNameS $trModule_s5FL

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Lib.$trModule :: ghc-prim-0.6.1:GHC.Types.Module
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
Lib.$trModule
  = ghc-prim-0.6.1:GHC.Types.Module $trModule_s5FK $trModule_s5FM

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_a5lu [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
$krep_a5lu
  = ghc-prim-0.6.1:GHC.Types.KindRepTyConApp
      integer-gmp-1.0.3.0:GHC.Integer.Type.$tcInteger
      (ghc-prim-0.6.1:GHC.Types.[] @ ghc-prim-0.6.1:GHC.Types.KindRep)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tcEndDate_s5FN :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
$tcEndDate_s5FN = "EndDate"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tcEndDate_s5FO :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$tcEndDate_s5FO = ghc-prim-0.6.1:GHC.Types.TrNameS $tcEndDate_s5FN

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tcEndDate :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Lib.$tcEndDate
  = ghc-prim-0.6.1:GHC.Types.TyCon
      8554338065373400840##
      3482623708274877127##
      Lib.$trModule
      $tcEndDate_s5FO
      0#
      ghc-prim-0.6.1:GHC.Types.krep$*

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_a5lv [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
$krep_a5lv
  = ghc-prim-0.6.1:GHC.Types.KindRepTyConApp
      Lib.$tcEndDate
      (ghc-prim-0.6.1:GHC.Types.[] @ ghc-prim-0.6.1:GHC.Types.KindRep)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tc'Never_s5FP :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
$tc'Never_s5FP = "'Never"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tc'Never_s5FQ :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$tc'Never_s5FQ = ghc-prim-0.6.1:GHC.Types.TrNameS $tc'Never_s5FP

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Never :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Lib.$tc'Never
  = ghc-prim-0.6.1:GHC.Types.TyCon
      10340504404178887934##
      18177538684886749349##
      Lib.$trModule
      $tc'Never_s5FQ
      0#
      $krep_a5lv

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep_a5lt [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
$krep_a5lt
  = ghc-prim-0.6.1:GHC.Types.KindRepFun $krep_a5lu $krep_a5lv

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tc'Fixed_s5FR :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
$tc'Fixed_s5FR = "'Fixed"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tc'Fixed_s5FS :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$tc'Fixed_s5FS = ghc-prim-0.6.1:GHC.Types.TrNameS $tc'Fixed_s5FR

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Fixed :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Lib.$tc'Fixed
  = ghc-prim-0.6.1:GHC.Types.TyCon
      17912921531120851107##
      4815501104477800385##
      Lib.$trModule
      $tc'Fixed_s5FS
      0#
      $krep_a5lt




==================== Simplifier statistics for following pass ====================
Simplifier reached fixed point after 3 iterations

Total ticks:     28

8 PreInlineUnconditionally
  2 dt_a5Vp
  2 dt_a5Vq
  2 dt_a5Vr
  2 dt_a5Vu
6 PostInlineUnconditionally
  2 dt_a5Vv
  2 dt_a5Vw
  2 dt_a5Vx
2 UnfoldingDone 2 $WPS
6 BetaReduction
  2 dt_a5Vp
  2 dt_a5Vq
  2 dt_a5Vr
6 KnownBranch
  2 dt_X5Vt
  2 dt_X5Vx
  2 dt_X5VA
3 SimplifierDone 3



==================== Simplifier ====================
  Max iterations = 4
  SimplMode {Phase = 0 [main],
             inline,
             rules,
             eta-expand,
             case-of-case}
Result size of Simplifier
  = {terms: 118, types: 151, coercions: 0, joins: 0/0}

-- RHS size: {terms: 22, types: 59, coercions: 0, joins: 0/0}
pastEnd_s5WQ :: ByteString
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=NEVER}]
pastEnd_s5WQ
  = case ghc-prim-0.6.1:GHC.Magic.runRW#
           @ ('ghc-prim-0.6.1:GHC.Types.TupleRep
                '[ 'ghc-prim-0.6.1:GHC.Types.TupleRep '[],
                   'ghc-prim-0.6.1:GHC.Types.LiftedRep])
           @ (# ghc-prim-0.6.1:GHC.Prim.State#
                  ghc-prim-0.6.1:GHC.Prim.RealWorld,
                ByteString #)
           (\ (s_i5N3 [OS=OneShot]
                 :: ghc-prim-0.6.1:GHC.Prim.State#
                      ghc-prim-0.6.1:GHC.Prim.RealWorld) ->
              case ghc-prim-0.6.1:GHC.Prim.noDuplicate#
                     @ ghc-prim-0.6.1:GHC.Prim.RealWorld s_i5N3
              of s'_i5N4
              { __DEFAULT ->
              case ghc-prim-0.6.1:GHC.Prim.newMutVar#
                     @ GHC.ForeignPtr.Finalizers
                     @ ghc-prim-0.6.1:GHC.Prim.RealWorld
                     GHC.ForeignPtr.NoFinalizers
                     s'_i5N4
              of
              { (# ipv_i5Pp, ipv1_i5Pq #) ->
              (# ipv_i5Pp,
                 bytestring-0.10.10.0:Data.ByteString.Internal.PS
                   "\SOH\NUL\NUL35\DC2\SOH\ENQFixed\NUL\NUL!\ENQNever\NUL\NUL!\rEndDate_match\NUL\NUL35\DC2\SOH\EOTTrue\NUL\NUL!\ENQFalse\NUL\NUL!\n\
                   \Bool_match\NUL\NUL2\SOH\DC1lessThanEqInteger\NUL\NUL3Q!\EOTUnit\NUL\NUL!\n\
                   \Unit_match\NUL\NUL!\STXds\NUL\NUL!\STXds\NUL\NUL350\SOH\rEndDate_match\NUL\t\SOH\STXds\NUL\STX!\SOHn\NUL\NUL!\ENQthunk\NUL\NUL3\SOH\DC1lessThanEqInteger\NUL\a\SOH\SOHn\NUL\STX\SOH\STXds\NUL\ETX!\ENQthunk\NUL\NUL\SOH\ENQFalse\NUL\b\SOH\EOTUnit\NUL\EOT\DC2\SOH\tcase_Unit\NUL\NUL\SOH\tcase_Unit\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH!\ETXarg\NUL\NUL!\ETXarg\NUL\NUL2\SOH\SOHb\NUL\NUL35z\\129\SOHb\NUL\SOH\SOH\EOTTrue\NUL\ACK\SOH\ENQFalse\NUL\ENQ3s\SOH\ETXarg\NUL\STX\SOH\ETXarg\NUL\SOH\DC2\SOH\tcase_True\NUL\NUL!\n\
                   \case_False\NUL\NUL\SOH\tcase_True\NUL\STX\DC2\SOH\tcase_True\NUL\NUL!\n\
                   \case_False\NUL\NUL\SOH\n\
                   \case_False\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH!\ENQarg_0\NUL\NUL\DC2\SOH\n\
                   \case_Fixed\NUL\NUL!\n\
                   \case_Never\NUL\NUL0\SOH\n\
                   \case_Fixed\NUL\STX\SOH\ENQarg_0\NUL\ETX\DC2\SOH\n\
                   \case_Fixed\NUL\NUL!\n\
                   \case_Never\NUL\NUL\SOH\n\
                   \case_Never\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH\SOH"#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1_i5Pq)
                   0#
                   539# #)
              }
              })
    of
    { (# ipv_i5N6, ipv1_i5N7 #) ->
    ipv1_i5N7
    }

-- RHS size: {terms: 22, types: 59, coercions: 0, joins: 0/0}
pastEnd_s5WR :: ByteString
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=NEVER}]
pastEnd_s5WR
  = case ghc-prim-0.6.1:GHC.Magic.runRW#
           @ ('ghc-prim-0.6.1:GHC.Types.TupleRep
                '[ 'ghc-prim-0.6.1:GHC.Types.TupleRep '[],
                   'ghc-prim-0.6.1:GHC.Types.LiftedRep])
           @ (# ghc-prim-0.6.1:GHC.Prim.State#
                  ghc-prim-0.6.1:GHC.Prim.RealWorld,
                ByteString #)
           (\ (s_i5N3 [OS=OneShot]
                 :: ghc-prim-0.6.1:GHC.Prim.State#
                      ghc-prim-0.6.1:GHC.Prim.RealWorld) ->
              case ghc-prim-0.6.1:GHC.Prim.noDuplicate#
                     @ ghc-prim-0.6.1:GHC.Prim.RealWorld s_i5N3
              of s'_i5N4
              { __DEFAULT ->
              case ghc-prim-0.6.1:GHC.Prim.newMutVar#
                     @ GHC.ForeignPtr.Finalizers
                     @ ghc-prim-0.6.1:GHC.Prim.RealWorld
                     GHC.ForeignPtr.NoFinalizers
                     s'_i5N4
              of
              { (# ipv_i5Pp, ipv1_i5Pq #) ->
              (# ipv_i5Pp,
                 bytestring-0.10.10.0:Data.ByteString.Internal.PS
                   "\r\aEndDate\NUL\\142\SOH\SOH\rEndDate_match\NUL\\148\SOH\\129\ENQFixed\NUL\\144\SOH2\SOH\aEndDate\NUL\\142\SOH\\129\ENQNever\NUL\\146\SOH\SOH\aEndDate\NUL\\142\SOHq\EOTBool\NUL\STX\SOH\n\
                   \Bool_match\NUL\b\\129\EOTTrue\NUL\EOT\SOH\EOTBool\NUL\STX\\129\ENQFalse\NUL\ACK\SOH\EOTBool\NUL\STXQ\DC1lessThanEqInteger\NUL<2\ETX \SOH\EOTBool\NUL\STXa\ETXarg\NUL>\\1441\ETXarg\NUL@\\144;\SOH\SOHb\NULB\\149;\\189\\213A\EOTBool\NUL\STX!\SOHb\NULB!\EOTTrue\NUL\EOT!\ENQFalse\NUL\ACKw\\163\DC1\ETXarg\NUL>!\ETXarg\NUL@\\225\EOTUnit\NUL\SYN\SOH\n\
                   \Unit_match\NUL\SUB\\129\EOTUnit\NUL\CAN\SOH\EOTUnit\NUL\SYN\EM\STXds\NUL\\150\SOH\SOH\aEndDate\NUL\\142\SOHa\STXds\NUL\\152\SOH\\144;\\189\\185\SOH\rEndDate_match\NUL\\148\SOH!\STXds\NUL\\150\SOH!\EOTUnit\NUL\SYN\SOH\EOTBool\NUL\STXa\SOHn\NUL\\156\SOH\\1441\ENQthunk\NUL\\158\SOH\SOH\EOTUnit\NUL\SYNw!\DC1lessThanEqInteger\NUL<!\SOHn\NUL\\156\SOH!\STXds\NUL\\152\SOHa\ENQthunk\NUL\\160\SOH\SOH\EOTUnit\NUL\SYN!\ENQFalse\NUL\ACK!\EOTUnit\NUL\CAN\SOH"#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1_i5Pq)
                   0#
                   439# #)
              }
              })
    of
    { (# ipv_i5N6, ipv1_i5N7 #) ->
    ipv1_i5N7
    }

-- RHS size: {terms: 2, types: 1, coercions: 0, joins: 0/0}
pastEnd_s5WS :: Maybe ByteString
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
pastEnd_s5WS = GHC.Maybe.Just @ ByteString pastEnd_s5WR

-- RHS size: {terms: 3, types: 5, coercions: 0, joins: 0/0}
pastEnd :: CompiledCode (EndDate -> Integer -> Bool)
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
pastEnd
  = Language.PlutusTx.Code.SerializedCode
      @ PLC.DefaultUni
      @ PLC.DefaultFun
      @ (EndDate -> Integer -> Bool)
      pastEnd_s5WQ
      pastEnd_s5WS

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FJ :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 70 0}]
$trModule_s5FJ = "example-0.1.0.0-inplace"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FK :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$trModule_s5FK = ghc-prim-0.6.1:GHC.Types.TrNameS $trModule_s5FJ

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FL :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
$trModule_s5FL = "Lib"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FM :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$trModule_s5FM = ghc-prim-0.6.1:GHC.Types.TrNameS $trModule_s5FL

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Lib.$trModule :: ghc-prim-0.6.1:GHC.Types.Module
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
Lib.$trModule
  = ghc-prim-0.6.1:GHC.Types.Module $trModule_s5FK $trModule_s5FM

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_a5lu [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
$krep_a5lu
  = ghc-prim-0.6.1:GHC.Types.KindRepTyConApp
      integer-gmp-1.0.3.0:GHC.Integer.Type.$tcInteger
      (ghc-prim-0.6.1:GHC.Types.[] @ ghc-prim-0.6.1:GHC.Types.KindRep)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tcEndDate_s5FN :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
$tcEndDate_s5FN = "EndDate"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tcEndDate_s5FO :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$tcEndDate_s5FO = ghc-prim-0.6.1:GHC.Types.TrNameS $tcEndDate_s5FN

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tcEndDate :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Lib.$tcEndDate
  = ghc-prim-0.6.1:GHC.Types.TyCon
      8554338065373400840##
      3482623708274877127##
      Lib.$trModule
      $tcEndDate_s5FO
      0#
      ghc-prim-0.6.1:GHC.Types.krep$*

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_a5lv [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
$krep_a5lv
  = ghc-prim-0.6.1:GHC.Types.KindRepTyConApp
      Lib.$tcEndDate
      (ghc-prim-0.6.1:GHC.Types.[] @ ghc-prim-0.6.1:GHC.Types.KindRep)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tc'Never_s5FP :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
$tc'Never_s5FP = "'Never"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tc'Never_s5FQ :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$tc'Never_s5FQ = ghc-prim-0.6.1:GHC.Types.TrNameS $tc'Never_s5FP

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Never :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Lib.$tc'Never
  = ghc-prim-0.6.1:GHC.Types.TyCon
      10340504404178887934##
      18177538684886749349##
      Lib.$trModule
      $tc'Never_s5FQ
      0#
      $krep_a5lv

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep_a5lt [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
$krep_a5lt
  = ghc-prim-0.6.1:GHC.Types.KindRepFun $krep_a5lu $krep_a5lv

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tc'Fixed_s5FR :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
$tc'Fixed_s5FR = "'Fixed"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tc'Fixed_s5FS :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$tc'Fixed_s5FS = ghc-prim-0.6.1:GHC.Types.TrNameS $tc'Fixed_s5FR

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Fixed :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Lib.$tc'Fixed
  = ghc-prim-0.6.1:GHC.Types.TyCon
      17912921531120851107##
      4815501104477800385##
      Lib.$trModule
      $tc'Fixed_s5FS
      0#
      $krep_a5lt




==================== Float inwards ====================
Result size of Float inwards
  = {terms: 118, types: 151, coercions: 0, joins: 0/0}

-- RHS size: {terms: 22, types: 59, coercions: 0, joins: 0/0}
pastEnd_s5WQ :: ByteString
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=NEVER}]
pastEnd_s5WQ
  = case ghc-prim-0.6.1:GHC.Magic.runRW#
           @ ('ghc-prim-0.6.1:GHC.Types.TupleRep
                '[ 'ghc-prim-0.6.1:GHC.Types.TupleRep '[],
                   'ghc-prim-0.6.1:GHC.Types.LiftedRep])
           @ (# ghc-prim-0.6.1:GHC.Prim.State#
                  ghc-prim-0.6.1:GHC.Prim.RealWorld,
                ByteString #)
           (\ (s_i5N3 [OS=OneShot]
                 :: ghc-prim-0.6.1:GHC.Prim.State#
                      ghc-prim-0.6.1:GHC.Prim.RealWorld) ->
              case ghc-prim-0.6.1:GHC.Prim.noDuplicate#
                     @ ghc-prim-0.6.1:GHC.Prim.RealWorld s_i5N3
              of s'_i5N4
              { __DEFAULT ->
              case ghc-prim-0.6.1:GHC.Prim.newMutVar#
                     @ GHC.ForeignPtr.Finalizers
                     @ ghc-prim-0.6.1:GHC.Prim.RealWorld
                     GHC.ForeignPtr.NoFinalizers
                     s'_i5N4
              of
              { (# ipv_i5Pp, ipv1_i5Pq #) ->
              (# ipv_i5Pp,
                 bytestring-0.10.10.0:Data.ByteString.Internal.PS
                   "\SOH\NUL\NUL35\DC2\SOH\ENQFixed\NUL\NUL!\ENQNever\NUL\NUL!\rEndDate_match\NUL\NUL35\DC2\SOH\EOTTrue\NUL\NUL!\ENQFalse\NUL\NUL!\n\
                   \Bool_match\NUL\NUL2\SOH\DC1lessThanEqInteger\NUL\NUL3Q!\EOTUnit\NUL\NUL!\n\
                   \Unit_match\NUL\NUL!\STXds\NUL\NUL!\STXds\NUL\NUL350\SOH\rEndDate_match\NUL\t\SOH\STXds\NUL\STX!\SOHn\NUL\NUL!\ENQthunk\NUL\NUL3\SOH\DC1lessThanEqInteger\NUL\a\SOH\SOHn\NUL\STX\SOH\STXds\NUL\ETX!\ENQthunk\NUL\NUL\SOH\ENQFalse\NUL\b\SOH\EOTUnit\NUL\EOT\DC2\SOH\tcase_Unit\NUL\NUL\SOH\tcase_Unit\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH!\ETXarg\NUL\NUL!\ETXarg\NUL\NUL2\SOH\SOHb\NUL\NUL35z\\129\SOHb\NUL\SOH\SOH\EOTTrue\NUL\ACK\SOH\ENQFalse\NUL\ENQ3s\SOH\ETXarg\NUL\STX\SOH\ETXarg\NUL\SOH\DC2\SOH\tcase_True\NUL\NUL!\n\
                   \case_False\NUL\NUL\SOH\tcase_True\NUL\STX\DC2\SOH\tcase_True\NUL\NUL!\n\
                   \case_False\NUL\NUL\SOH\n\
                   \case_False\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH!\ENQarg_0\NUL\NUL\DC2\SOH\n\
                   \case_Fixed\NUL\NUL!\n\
                   \case_Never\NUL\NUL0\SOH\n\
                   \case_Fixed\NUL\STX\SOH\ENQarg_0\NUL\ETX\DC2\SOH\n\
                   \case_Fixed\NUL\NUL!\n\
                   \case_Never\NUL\NUL\SOH\n\
                   \case_Never\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH\SOH"#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1_i5Pq)
                   0#
                   539# #)
              }
              })
    of
    { (# ipv_i5N6, ipv1_i5N7 #) ->
    ipv1_i5N7
    }

-- RHS size: {terms: 22, types: 59, coercions: 0, joins: 0/0}
pastEnd_s5WR :: ByteString
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=NEVER}]
pastEnd_s5WR
  = case ghc-prim-0.6.1:GHC.Magic.runRW#
           @ ('ghc-prim-0.6.1:GHC.Types.TupleRep
                '[ 'ghc-prim-0.6.1:GHC.Types.TupleRep '[],
                   'ghc-prim-0.6.1:GHC.Types.LiftedRep])
           @ (# ghc-prim-0.6.1:GHC.Prim.State#
                  ghc-prim-0.6.1:GHC.Prim.RealWorld,
                ByteString #)
           (\ (s_i5N3 [OS=OneShot]
                 :: ghc-prim-0.6.1:GHC.Prim.State#
                      ghc-prim-0.6.1:GHC.Prim.RealWorld) ->
              case ghc-prim-0.6.1:GHC.Prim.noDuplicate#
                     @ ghc-prim-0.6.1:GHC.Prim.RealWorld s_i5N3
              of s'_i5N4
              { __DEFAULT ->
              case ghc-prim-0.6.1:GHC.Prim.newMutVar#
                     @ GHC.ForeignPtr.Finalizers
                     @ ghc-prim-0.6.1:GHC.Prim.RealWorld
                     GHC.ForeignPtr.NoFinalizers
                     s'_i5N4
              of
              { (# ipv_i5Pp, ipv1_i5Pq #) ->
              (# ipv_i5Pp,
                 bytestring-0.10.10.0:Data.ByteString.Internal.PS
                   "\r\aEndDate\NUL\\142\SOH\SOH\rEndDate_match\NUL\\148\SOH\\129\ENQFixed\NUL\\144\SOH2\SOH\aEndDate\NUL\\142\SOH\\129\ENQNever\NUL\\146\SOH\SOH\aEndDate\NUL\\142\SOHq\EOTBool\NUL\STX\SOH\n\
                   \Bool_match\NUL\b\\129\EOTTrue\NUL\EOT\SOH\EOTBool\NUL\STX\\129\ENQFalse\NUL\ACK\SOH\EOTBool\NUL\STXQ\DC1lessThanEqInteger\NUL<2\ETX \SOH\EOTBool\NUL\STXa\ETXarg\NUL>\\1441\ETXarg\NUL@\\144;\SOH\SOHb\NULB\\149;\\189\\213A\EOTBool\NUL\STX!\SOHb\NULB!\EOTTrue\NUL\EOT!\ENQFalse\NUL\ACKw\\163\DC1\ETXarg\NUL>!\ETXarg\NUL@\\225\EOTUnit\NUL\SYN\SOH\n\
                   \Unit_match\NUL\SUB\\129\EOTUnit\NUL\CAN\SOH\EOTUnit\NUL\SYN\EM\STXds\NUL\\150\SOH\SOH\aEndDate\NUL\\142\SOHa\STXds\NUL\\152\SOH\\144;\\189\\185\SOH\rEndDate_match\NUL\\148\SOH!\STXds\NUL\\150\SOH!\EOTUnit\NUL\SYN\SOH\EOTBool\NUL\STXa\SOHn\NUL\\156\SOH\\1441\ENQthunk\NUL\\158\SOH\SOH\EOTUnit\NUL\SYNw!\DC1lessThanEqInteger\NUL<!\SOHn\NUL\\156\SOH!\STXds\NUL\\152\SOHa\ENQthunk\NUL\\160\SOH\SOH\EOTUnit\NUL\SYN!\ENQFalse\NUL\ACK!\EOTUnit\NUL\CAN\SOH"#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1_i5Pq)
                   0#
                   439# #)
              }
              })
    of
    { (# ipv_i5N6, ipv1_i5N7 #) ->
    ipv1_i5N7
    }

-- RHS size: {terms: 2, types: 1, coercions: 0, joins: 0/0}
pastEnd_s5WS :: Maybe ByteString
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
pastEnd_s5WS = GHC.Maybe.Just @ ByteString pastEnd_s5WR

-- RHS size: {terms: 3, types: 5, coercions: 0, joins: 0/0}
pastEnd :: CompiledCode (EndDate -> Integer -> Bool)
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
pastEnd
  = Language.PlutusTx.Code.SerializedCode
      @ PLC.DefaultUni
      @ PLC.DefaultFun
      @ (EndDate -> Integer -> Bool)
      pastEnd_s5WQ
      pastEnd_s5WS

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FJ :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 70 0}]
$trModule_s5FJ = "example-0.1.0.0-inplace"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FK :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$trModule_s5FK = ghc-prim-0.6.1:GHC.Types.TrNameS $trModule_s5FJ

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FL :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
$trModule_s5FL = "Lib"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FM :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$trModule_s5FM = ghc-prim-0.6.1:GHC.Types.TrNameS $trModule_s5FL

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Lib.$trModule :: ghc-prim-0.6.1:GHC.Types.Module
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
Lib.$trModule
  = ghc-prim-0.6.1:GHC.Types.Module $trModule_s5FK $trModule_s5FM

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_a5lu [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
$krep_a5lu
  = ghc-prim-0.6.1:GHC.Types.KindRepTyConApp
      integer-gmp-1.0.3.0:GHC.Integer.Type.$tcInteger
      (ghc-prim-0.6.1:GHC.Types.[] @ ghc-prim-0.6.1:GHC.Types.KindRep)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tcEndDate_s5FN :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
$tcEndDate_s5FN = "EndDate"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tcEndDate_s5FO :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$tcEndDate_s5FO = ghc-prim-0.6.1:GHC.Types.TrNameS $tcEndDate_s5FN

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tcEndDate :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Lib.$tcEndDate
  = ghc-prim-0.6.1:GHC.Types.TyCon
      8554338065373400840##
      3482623708274877127##
      Lib.$trModule
      $tcEndDate_s5FO
      0#
      ghc-prim-0.6.1:GHC.Types.krep$*

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_a5lv [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
$krep_a5lv
  = ghc-prim-0.6.1:GHC.Types.KindRepTyConApp
      Lib.$tcEndDate
      (ghc-prim-0.6.1:GHC.Types.[] @ ghc-prim-0.6.1:GHC.Types.KindRep)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tc'Never_s5FP :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
$tc'Never_s5FP = "'Never"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tc'Never_s5FQ :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$tc'Never_s5FQ = ghc-prim-0.6.1:GHC.Types.TrNameS $tc'Never_s5FP

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Never :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Lib.$tc'Never
  = ghc-prim-0.6.1:GHC.Types.TyCon
      10340504404178887934##
      18177538684886749349##
      Lib.$trModule
      $tc'Never_s5FQ
      0#
      $krep_a5lv

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep_a5lt [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
$krep_a5lt
  = ghc-prim-0.6.1:GHC.Types.KindRepFun $krep_a5lu $krep_a5lv

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tc'Fixed_s5FR :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
$tc'Fixed_s5FR = "'Fixed"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tc'Fixed_s5FS :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$tc'Fixed_s5FS = ghc-prim-0.6.1:GHC.Types.TrNameS $tc'Fixed_s5FR

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Fixed :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Lib.$tc'Fixed
  = ghc-prim-0.6.1:GHC.Types.TyCon
      17912921531120851107##
      4815501104477800385##
      Lib.$trModule
      $tc'Fixed_s5FS
      0#
      $krep_a5lt




==================== Called arity analysis ====================
Result size of Called arity analysis
  = {terms: 118, types: 151, coercions: 0, joins: 0/0}

-- RHS size: {terms: 22, types: 59, coercions: 0, joins: 0/0}
pastEnd_s5WQ :: ByteString
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=NEVER}]
pastEnd_s5WQ
  = case ghc-prim-0.6.1:GHC.Magic.runRW#
           @ ('ghc-prim-0.6.1:GHC.Types.TupleRep
                '[ 'ghc-prim-0.6.1:GHC.Types.TupleRep '[],
                   'ghc-prim-0.6.1:GHC.Types.LiftedRep])
           @ (# ghc-prim-0.6.1:GHC.Prim.State#
                  ghc-prim-0.6.1:GHC.Prim.RealWorld,
                ByteString #)
           (\ (s_i5N3 [OS=OneShot]
                 :: ghc-prim-0.6.1:GHC.Prim.State#
                      ghc-prim-0.6.1:GHC.Prim.RealWorld) ->
              case ghc-prim-0.6.1:GHC.Prim.noDuplicate#
                     @ ghc-prim-0.6.1:GHC.Prim.RealWorld s_i5N3
              of s'_i5N4
              { __DEFAULT ->
              case ghc-prim-0.6.1:GHC.Prim.newMutVar#
                     @ GHC.ForeignPtr.Finalizers
                     @ ghc-prim-0.6.1:GHC.Prim.RealWorld
                     GHC.ForeignPtr.NoFinalizers
                     s'_i5N4
              of
              { (# ipv_i5Pp, ipv1_i5Pq #) ->
              (# ipv_i5Pp,
                 bytestring-0.10.10.0:Data.ByteString.Internal.PS
                   "\SOH\NUL\NUL35\DC2\SOH\ENQFixed\NUL\NUL!\ENQNever\NUL\NUL!\rEndDate_match\NUL\NUL35\DC2\SOH\EOTTrue\NUL\NUL!\ENQFalse\NUL\NUL!\n\
                   \Bool_match\NUL\NUL2\SOH\DC1lessThanEqInteger\NUL\NUL3Q!\EOTUnit\NUL\NUL!\n\
                   \Unit_match\NUL\NUL!\STXds\NUL\NUL!\STXds\NUL\NUL350\SOH\rEndDate_match\NUL\t\SOH\STXds\NUL\STX!\SOHn\NUL\NUL!\ENQthunk\NUL\NUL3\SOH\DC1lessThanEqInteger\NUL\a\SOH\SOHn\NUL\STX\SOH\STXds\NUL\ETX!\ENQthunk\NUL\NUL\SOH\ENQFalse\NUL\b\SOH\EOTUnit\NUL\EOT\DC2\SOH\tcase_Unit\NUL\NUL\SOH\tcase_Unit\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH!\ETXarg\NUL\NUL!\ETXarg\NUL\NUL2\SOH\SOHb\NUL\NUL35z\\129\SOHb\NUL\SOH\SOH\EOTTrue\NUL\ACK\SOH\ENQFalse\NUL\ENQ3s\SOH\ETXarg\NUL\STX\SOH\ETXarg\NUL\SOH\DC2\SOH\tcase_True\NUL\NUL!\n\
                   \case_False\NUL\NUL\SOH\tcase_True\NUL\STX\DC2\SOH\tcase_True\NUL\NUL!\n\
                   \case_False\NUL\NUL\SOH\n\
                   \case_False\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH!\ENQarg_0\NUL\NUL\DC2\SOH\n\
                   \case_Fixed\NUL\NUL!\n\
                   \case_Never\NUL\NUL0\SOH\n\
                   \case_Fixed\NUL\STX\SOH\ENQarg_0\NUL\ETX\DC2\SOH\n\
                   \case_Fixed\NUL\NUL!\n\
                   \case_Never\NUL\NUL\SOH\n\
                   \case_Never\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH\SOH"#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1_i5Pq)
                   0#
                   539# #)
              }
              })
    of
    { (# ipv_i5N6, ipv1_i5N7 #) ->
    ipv1_i5N7
    }

-- RHS size: {terms: 22, types: 59, coercions: 0, joins: 0/0}
pastEnd_s5WR :: ByteString
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=NEVER}]
pastEnd_s5WR
  = case ghc-prim-0.6.1:GHC.Magic.runRW#
           @ ('ghc-prim-0.6.1:GHC.Types.TupleRep
                '[ 'ghc-prim-0.6.1:GHC.Types.TupleRep '[],
                   'ghc-prim-0.6.1:GHC.Types.LiftedRep])
           @ (# ghc-prim-0.6.1:GHC.Prim.State#
                  ghc-prim-0.6.1:GHC.Prim.RealWorld,
                ByteString #)
           (\ (s_i5N3 [OS=OneShot]
                 :: ghc-prim-0.6.1:GHC.Prim.State#
                      ghc-prim-0.6.1:GHC.Prim.RealWorld) ->
              case ghc-prim-0.6.1:GHC.Prim.noDuplicate#
                     @ ghc-prim-0.6.1:GHC.Prim.RealWorld s_i5N3
              of s'_i5N4
              { __DEFAULT ->
              case ghc-prim-0.6.1:GHC.Prim.newMutVar#
                     @ GHC.ForeignPtr.Finalizers
                     @ ghc-prim-0.6.1:GHC.Prim.RealWorld
                     GHC.ForeignPtr.NoFinalizers
                     s'_i5N4
              of
              { (# ipv_i5Pp, ipv1_i5Pq #) ->
              (# ipv_i5Pp,
                 bytestring-0.10.10.0:Data.ByteString.Internal.PS
                   "\r\aEndDate\NUL\\142\SOH\SOH\rEndDate_match\NUL\\148\SOH\\129\ENQFixed\NUL\\144\SOH2\SOH\aEndDate\NUL\\142\SOH\\129\ENQNever\NUL\\146\SOH\SOH\aEndDate\NUL\\142\SOHq\EOTBool\NUL\STX\SOH\n\
                   \Bool_match\NUL\b\\129\EOTTrue\NUL\EOT\SOH\EOTBool\NUL\STX\\129\ENQFalse\NUL\ACK\SOH\EOTBool\NUL\STXQ\DC1lessThanEqInteger\NUL<2\ETX \SOH\EOTBool\NUL\STXa\ETXarg\NUL>\\1441\ETXarg\NUL@\\144;\SOH\SOHb\NULB\\149;\\189\\213A\EOTBool\NUL\STX!\SOHb\NULB!\EOTTrue\NUL\EOT!\ENQFalse\NUL\ACKw\\163\DC1\ETXarg\NUL>!\ETXarg\NUL@\\225\EOTUnit\NUL\SYN\SOH\n\
                   \Unit_match\NUL\SUB\\129\EOTUnit\NUL\CAN\SOH\EOTUnit\NUL\SYN\EM\STXds\NUL\\150\SOH\SOH\aEndDate\NUL\\142\SOHa\STXds\NUL\\152\SOH\\144;\\189\\185\SOH\rEndDate_match\NUL\\148\SOH!\STXds\NUL\\150\SOH!\EOTUnit\NUL\SYN\SOH\EOTBool\NUL\STXa\SOHn\NUL\\156\SOH\\1441\ENQthunk\NUL\\158\SOH\SOH\EOTUnit\NUL\SYNw!\DC1lessThanEqInteger\NUL<!\SOHn\NUL\\156\SOH!\STXds\NUL\\152\SOHa\ENQthunk\NUL\\160\SOH\SOH\EOTUnit\NUL\SYN!\ENQFalse\NUL\ACK!\EOTUnit\NUL\CAN\SOH"#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1_i5Pq)
                   0#
                   439# #)
              }
              })
    of
    { (# ipv_i5N6, ipv1_i5N7 #) ->
    ipv1_i5N7
    }

-- RHS size: {terms: 2, types: 1, coercions: 0, joins: 0/0}
pastEnd_s5WS :: Maybe ByteString
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
pastEnd_s5WS = GHC.Maybe.Just @ ByteString pastEnd_s5WR

-- RHS size: {terms: 3, types: 5, coercions: 0, joins: 0/0}
pastEnd :: CompiledCode (EndDate -> Integer -> Bool)
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
pastEnd
  = Language.PlutusTx.Code.SerializedCode
      @ PLC.DefaultUni
      @ PLC.DefaultFun
      @ (EndDate -> Integer -> Bool)
      pastEnd_s5WQ
      pastEnd_s5WS

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FJ :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 70 0}]
$trModule_s5FJ = "example-0.1.0.0-inplace"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FK :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$trModule_s5FK = ghc-prim-0.6.1:GHC.Types.TrNameS $trModule_s5FJ

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FL :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
$trModule_s5FL = "Lib"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FM :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$trModule_s5FM = ghc-prim-0.6.1:GHC.Types.TrNameS $trModule_s5FL

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Lib.$trModule :: ghc-prim-0.6.1:GHC.Types.Module
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
Lib.$trModule
  = ghc-prim-0.6.1:GHC.Types.Module $trModule_s5FK $trModule_s5FM

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_a5lu [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
$krep_a5lu
  = ghc-prim-0.6.1:GHC.Types.KindRepTyConApp
      integer-gmp-1.0.3.0:GHC.Integer.Type.$tcInteger
      (ghc-prim-0.6.1:GHC.Types.[] @ ghc-prim-0.6.1:GHC.Types.KindRep)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tcEndDate_s5FN :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
$tcEndDate_s5FN = "EndDate"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tcEndDate_s5FO :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$tcEndDate_s5FO = ghc-prim-0.6.1:GHC.Types.TrNameS $tcEndDate_s5FN

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tcEndDate :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Lib.$tcEndDate
  = ghc-prim-0.6.1:GHC.Types.TyCon
      8554338065373400840##
      3482623708274877127##
      Lib.$trModule
      $tcEndDate_s5FO
      0#
      ghc-prim-0.6.1:GHC.Types.krep$*

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_a5lv [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
$krep_a5lv
  = ghc-prim-0.6.1:GHC.Types.KindRepTyConApp
      Lib.$tcEndDate
      (ghc-prim-0.6.1:GHC.Types.[] @ ghc-prim-0.6.1:GHC.Types.KindRep)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tc'Never_s5FP :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
$tc'Never_s5FP = "'Never"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tc'Never_s5FQ :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$tc'Never_s5FQ = ghc-prim-0.6.1:GHC.Types.TrNameS $tc'Never_s5FP

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Never :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Lib.$tc'Never
  = ghc-prim-0.6.1:GHC.Types.TyCon
      10340504404178887934##
      18177538684886749349##
      Lib.$trModule
      $tc'Never_s5FQ
      0#
      $krep_a5lv

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep_a5lt [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
$krep_a5lt
  = ghc-prim-0.6.1:GHC.Types.KindRepFun $krep_a5lu $krep_a5lv

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tc'Fixed_s5FR :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
$tc'Fixed_s5FR = "'Fixed"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tc'Fixed_s5FS :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$tc'Fixed_s5FS = ghc-prim-0.6.1:GHC.Types.TrNameS $tc'Fixed_s5FR

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Fixed :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Lib.$tc'Fixed
  = ghc-prim-0.6.1:GHC.Types.TyCon
      17912921531120851107##
      4815501104477800385##
      Lib.$trModule
      $tc'Fixed_s5FS
      0#
      $krep_a5lt




==================== Simplifier statistics for following pass ====================
Simplifier reached fixed point after 1 iterations

Total ticks:     0

1 SimplifierDone 1



==================== Simplifier ====================
  Max iterations = 4
  SimplMode {Phase = 0 [post-call-arity],
             inline,
             rules,
             eta-expand,
             case-of-case}
Result size of Simplifier
  = {terms: 118, types: 151, coercions: 0, joins: 0/0}

-- RHS size: {terms: 22, types: 59, coercions: 0, joins: 0/0}
pastEnd_s5WQ :: ByteString
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=NEVER}]
pastEnd_s5WQ
  = case ghc-prim-0.6.1:GHC.Magic.runRW#
           @ ('ghc-prim-0.6.1:GHC.Types.TupleRep
                '[ 'ghc-prim-0.6.1:GHC.Types.TupleRep '[],
                   'ghc-prim-0.6.1:GHC.Types.LiftedRep])
           @ (# ghc-prim-0.6.1:GHC.Prim.State#
                  ghc-prim-0.6.1:GHC.Prim.RealWorld,
                ByteString #)
           (\ (s_i5N3 [OS=OneShot]
                 :: ghc-prim-0.6.1:GHC.Prim.State#
                      ghc-prim-0.6.1:GHC.Prim.RealWorld) ->
              case ghc-prim-0.6.1:GHC.Prim.noDuplicate#
                     @ ghc-prim-0.6.1:GHC.Prim.RealWorld s_i5N3
              of s'_i5N4
              { __DEFAULT ->
              case ghc-prim-0.6.1:GHC.Prim.newMutVar#
                     @ GHC.ForeignPtr.Finalizers
                     @ ghc-prim-0.6.1:GHC.Prim.RealWorld
                     GHC.ForeignPtr.NoFinalizers
                     s'_i5N4
              of
              { (# ipv_i5Pp, ipv1_i5Pq #) ->
              (# ipv_i5Pp,
                 bytestring-0.10.10.0:Data.ByteString.Internal.PS
                   "\SOH\NUL\NUL35\DC2\SOH\ENQFixed\NUL\NUL!\ENQNever\NUL\NUL!\rEndDate_match\NUL\NUL35\DC2\SOH\EOTTrue\NUL\NUL!\ENQFalse\NUL\NUL!\n\
                   \Bool_match\NUL\NUL2\SOH\DC1lessThanEqInteger\NUL\NUL3Q!\EOTUnit\NUL\NUL!\n\
                   \Unit_match\NUL\NUL!\STXds\NUL\NUL!\STXds\NUL\NUL350\SOH\rEndDate_match\NUL\t\SOH\STXds\NUL\STX!\SOHn\NUL\NUL!\ENQthunk\NUL\NUL3\SOH\DC1lessThanEqInteger\NUL\a\SOH\SOHn\NUL\STX\SOH\STXds\NUL\ETX!\ENQthunk\NUL\NUL\SOH\ENQFalse\NUL\b\SOH\EOTUnit\NUL\EOT\DC2\SOH\tcase_Unit\NUL\NUL\SOH\tcase_Unit\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH!\ETXarg\NUL\NUL!\ETXarg\NUL\NUL2\SOH\SOHb\NUL\NUL35z\\129\SOHb\NUL\SOH\SOH\EOTTrue\NUL\ACK\SOH\ENQFalse\NUL\ENQ3s\SOH\ETXarg\NUL\STX\SOH\ETXarg\NUL\SOH\DC2\SOH\tcase_True\NUL\NUL!\n\
                   \case_False\NUL\NUL\SOH\tcase_True\NUL\STX\DC2\SOH\tcase_True\NUL\NUL!\n\
                   \case_False\NUL\NUL\SOH\n\
                   \case_False\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH!\ENQarg_0\NUL\NUL\DC2\SOH\n\
                   \case_Fixed\NUL\NUL!\n\
                   \case_Never\NUL\NUL0\SOH\n\
                   \case_Fixed\NUL\STX\SOH\ENQarg_0\NUL\ETX\DC2\SOH\n\
                   \case_Fixed\NUL\NUL!\n\
                   \case_Never\NUL\NUL\SOH\n\
                   \case_Never\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH\SOH"#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1_i5Pq)
                   0#
                   539# #)
              }
              })
    of
    { (# ipv_i5N6, ipv1_i5N7 #) ->
    ipv1_i5N7
    }

-- RHS size: {terms: 22, types: 59, coercions: 0, joins: 0/0}
pastEnd_s5WR :: ByteString
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=NEVER}]
pastEnd_s5WR
  = case ghc-prim-0.6.1:GHC.Magic.runRW#
           @ ('ghc-prim-0.6.1:GHC.Types.TupleRep
                '[ 'ghc-prim-0.6.1:GHC.Types.TupleRep '[],
                   'ghc-prim-0.6.1:GHC.Types.LiftedRep])
           @ (# ghc-prim-0.6.1:GHC.Prim.State#
                  ghc-prim-0.6.1:GHC.Prim.RealWorld,
                ByteString #)
           (\ (s_i5N3 [OS=OneShot]
                 :: ghc-prim-0.6.1:GHC.Prim.State#
                      ghc-prim-0.6.1:GHC.Prim.RealWorld) ->
              case ghc-prim-0.6.1:GHC.Prim.noDuplicate#
                     @ ghc-prim-0.6.1:GHC.Prim.RealWorld s_i5N3
              of s'_i5N4
              { __DEFAULT ->
              case ghc-prim-0.6.1:GHC.Prim.newMutVar#
                     @ GHC.ForeignPtr.Finalizers
                     @ ghc-prim-0.6.1:GHC.Prim.RealWorld
                     GHC.ForeignPtr.NoFinalizers
                     s'_i5N4
              of
              { (# ipv_i5Pp, ipv1_i5Pq #) ->
              (# ipv_i5Pp,
                 bytestring-0.10.10.0:Data.ByteString.Internal.PS
                   "\r\aEndDate\NUL\\142\SOH\SOH\rEndDate_match\NUL\\148\SOH\\129\ENQFixed\NUL\\144\SOH2\SOH\aEndDate\NUL\\142\SOH\\129\ENQNever\NUL\\146\SOH\SOH\aEndDate\NUL\\142\SOHq\EOTBool\NUL\STX\SOH\n\
                   \Bool_match\NUL\b\\129\EOTTrue\NUL\EOT\SOH\EOTBool\NUL\STX\\129\ENQFalse\NUL\ACK\SOH\EOTBool\NUL\STXQ\DC1lessThanEqInteger\NUL<2\ETX \SOH\EOTBool\NUL\STXa\ETXarg\NUL>\\1441\ETXarg\NUL@\\144;\SOH\SOHb\NULB\\149;\\189\\213A\EOTBool\NUL\STX!\SOHb\NULB!\EOTTrue\NUL\EOT!\ENQFalse\NUL\ACKw\\163\DC1\ETXarg\NUL>!\ETXarg\NUL@\\225\EOTUnit\NUL\SYN\SOH\n\
                   \Unit_match\NUL\SUB\\129\EOTUnit\NUL\CAN\SOH\EOTUnit\NUL\SYN\EM\STXds\NUL\\150\SOH\SOH\aEndDate\NUL\\142\SOHa\STXds\NUL\\152\SOH\\144;\\189\\185\SOH\rEndDate_match\NUL\\148\SOH!\STXds\NUL\\150\SOH!\EOTUnit\NUL\SYN\SOH\EOTBool\NUL\STXa\SOHn\NUL\\156\SOH\\1441\ENQthunk\NUL\\158\SOH\SOH\EOTUnit\NUL\SYNw!\DC1lessThanEqInteger\NUL<!\SOHn\NUL\\156\SOH!\STXds\NUL\\152\SOHa\ENQthunk\NUL\\160\SOH\SOH\EOTUnit\NUL\SYN!\ENQFalse\NUL\ACK!\EOTUnit\NUL\CAN\SOH"#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1_i5Pq)
                   0#
                   439# #)
              }
              })
    of
    { (# ipv_i5N6, ipv1_i5N7 #) ->
    ipv1_i5N7
    }

-- RHS size: {terms: 2, types: 1, coercions: 0, joins: 0/0}
pastEnd_s5WS :: Maybe ByteString
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
pastEnd_s5WS = GHC.Maybe.Just @ ByteString pastEnd_s5WR

-- RHS size: {terms: 3, types: 5, coercions: 0, joins: 0/0}
pastEnd :: CompiledCode (EndDate -> Integer -> Bool)
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
pastEnd
  = Language.PlutusTx.Code.SerializedCode
      @ PLC.DefaultUni
      @ PLC.DefaultFun
      @ (EndDate -> Integer -> Bool)
      pastEnd_s5WQ
      pastEnd_s5WS

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FJ :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 70 0}]
$trModule_s5FJ = "example-0.1.0.0-inplace"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FK :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$trModule_s5FK = ghc-prim-0.6.1:GHC.Types.TrNameS $trModule_s5FJ

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FL :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
$trModule_s5FL = "Lib"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FM :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$trModule_s5FM = ghc-prim-0.6.1:GHC.Types.TrNameS $trModule_s5FL

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Lib.$trModule :: ghc-prim-0.6.1:GHC.Types.Module
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
Lib.$trModule
  = ghc-prim-0.6.1:GHC.Types.Module $trModule_s5FK $trModule_s5FM

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_a5lu [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
$krep_a5lu
  = ghc-prim-0.6.1:GHC.Types.KindRepTyConApp
      integer-gmp-1.0.3.0:GHC.Integer.Type.$tcInteger
      (ghc-prim-0.6.1:GHC.Types.[] @ ghc-prim-0.6.1:GHC.Types.KindRep)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tcEndDate_s5FN :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
$tcEndDate_s5FN = "EndDate"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tcEndDate_s5FO :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$tcEndDate_s5FO = ghc-prim-0.6.1:GHC.Types.TrNameS $tcEndDate_s5FN

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tcEndDate :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Lib.$tcEndDate
  = ghc-prim-0.6.1:GHC.Types.TyCon
      8554338065373400840##
      3482623708274877127##
      Lib.$trModule
      $tcEndDate_s5FO
      0#
      ghc-prim-0.6.1:GHC.Types.krep$*

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_a5lv [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
$krep_a5lv
  = ghc-prim-0.6.1:GHC.Types.KindRepTyConApp
      Lib.$tcEndDate
      (ghc-prim-0.6.1:GHC.Types.[] @ ghc-prim-0.6.1:GHC.Types.KindRep)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tc'Never_s5FP :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
$tc'Never_s5FP = "'Never"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tc'Never_s5FQ :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$tc'Never_s5FQ = ghc-prim-0.6.1:GHC.Types.TrNameS $tc'Never_s5FP

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Never :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Lib.$tc'Never
  = ghc-prim-0.6.1:GHC.Types.TyCon
      10340504404178887934##
      18177538684886749349##
      Lib.$trModule
      $tc'Never_s5FQ
      0#
      $krep_a5lv

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep_a5lt [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
$krep_a5lt
  = ghc-prim-0.6.1:GHC.Types.KindRepFun $krep_a5lu $krep_a5lv

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tc'Fixed_s5FR :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
$tc'Fixed_s5FR = "'Fixed"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tc'Fixed_s5FS :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$tc'Fixed_s5FS = ghc-prim-0.6.1:GHC.Types.TrNameS $tc'Fixed_s5FR

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Fixed :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Lib.$tc'Fixed
  = ghc-prim-0.6.1:GHC.Types.TyCon
      17912921531120851107##
      4815501104477800385##
      Lib.$trModule
      $tc'Fixed_s5FS
      0#
      $krep_a5lt




==================== Demand analysis ====================
Result size of Demand analysis
  = {terms: 118, types: 151, coercions: 0, joins: 0/0}

-- RHS size: {terms: 22, types: 59, coercions: 0, joins: 0/0}
pastEnd_s5WQ :: ByteString
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=NEVER}]
pastEnd_s5WQ
  = case ghc-prim-0.6.1:GHC.Magic.runRW#
           @ ('ghc-prim-0.6.1:GHC.Types.TupleRep
                '[ 'ghc-prim-0.6.1:GHC.Types.TupleRep '[],
                   'ghc-prim-0.6.1:GHC.Types.LiftedRep])
           @ (# ghc-prim-0.6.1:GHC.Prim.State#
                  ghc-prim-0.6.1:GHC.Prim.RealWorld,
                ByteString #)
           (\ (s_i5N3 [OS=OneShot]
                 :: ghc-prim-0.6.1:GHC.Prim.State#
                      ghc-prim-0.6.1:GHC.Prim.RealWorld) ->
              case ghc-prim-0.6.1:GHC.Prim.noDuplicate#
                     @ ghc-prim-0.6.1:GHC.Prim.RealWorld s_i5N3
              of s'_i5N4
              { __DEFAULT ->
              case ghc-prim-0.6.1:GHC.Prim.newMutVar#
                     @ GHC.ForeignPtr.Finalizers
                     @ ghc-prim-0.6.1:GHC.Prim.RealWorld
                     GHC.ForeignPtr.NoFinalizers
                     s'_i5N4
              of
              { (# ipv_i5Pp, ipv1_i5Pq #) ->
              (# ipv_i5Pp,
                 bytestring-0.10.10.0:Data.ByteString.Internal.PS
                   "\SOH\NUL\NUL35\DC2\SOH\ENQFixed\NUL\NUL!\ENQNever\NUL\NUL!\rEndDate_match\NUL\NUL35\DC2\SOH\EOTTrue\NUL\NUL!\ENQFalse\NUL\NUL!\n\
                   \Bool_match\NUL\NUL2\SOH\DC1lessThanEqInteger\NUL\NUL3Q!\EOTUnit\NUL\NUL!\n\
                   \Unit_match\NUL\NUL!\STXds\NUL\NUL!\STXds\NUL\NUL350\SOH\rEndDate_match\NUL\t\SOH\STXds\NUL\STX!\SOHn\NUL\NUL!\ENQthunk\NUL\NUL3\SOH\DC1lessThanEqInteger\NUL\a\SOH\SOHn\NUL\STX\SOH\STXds\NUL\ETX!\ENQthunk\NUL\NUL\SOH\ENQFalse\NUL\b\SOH\EOTUnit\NUL\EOT\DC2\SOH\tcase_Unit\NUL\NUL\SOH\tcase_Unit\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH!\ETXarg\NUL\NUL!\ETXarg\NUL\NUL2\SOH\SOHb\NUL\NUL35z\\129\SOHb\NUL\SOH\SOH\EOTTrue\NUL\ACK\SOH\ENQFalse\NUL\ENQ3s\SOH\ETXarg\NUL\STX\SOH\ETXarg\NUL\SOH\DC2\SOH\tcase_True\NUL\NUL!\n\
                   \case_False\NUL\NUL\SOH\tcase_True\NUL\STX\DC2\SOH\tcase_True\NUL\NUL!\n\
                   \case_False\NUL\NUL\SOH\n\
                   \case_False\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH!\ENQarg_0\NUL\NUL\DC2\SOH\n\
                   \case_Fixed\NUL\NUL!\n\
                   \case_Never\NUL\NUL0\SOH\n\
                   \case_Fixed\NUL\STX\SOH\ENQarg_0\NUL\ETX\DC2\SOH\n\
                   \case_Fixed\NUL\NUL!\n\
                   \case_Never\NUL\NUL\SOH\n\
                   \case_Never\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH\SOH"#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1_i5Pq)
                   0#
                   539# #)
              }
              })
    of
    { (# ipv_i5N6 [Dmd=<L,A>], ipv1_i5N7 [Dmd=<S,1*U(U,U,U,U)>] #) ->
    ipv1_i5N7
    }

-- RHS size: {terms: 22, types: 59, coercions: 0, joins: 0/0}
pastEnd_s5WR :: ByteString
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=NEVER}]
pastEnd_s5WR
  = case ghc-prim-0.6.1:GHC.Magic.runRW#
           @ ('ghc-prim-0.6.1:GHC.Types.TupleRep
                '[ 'ghc-prim-0.6.1:GHC.Types.TupleRep '[],
                   'ghc-prim-0.6.1:GHC.Types.LiftedRep])
           @ (# ghc-prim-0.6.1:GHC.Prim.State#
                  ghc-prim-0.6.1:GHC.Prim.RealWorld,
                ByteString #)
           (\ (s_i5N3 [OS=OneShot]
                 :: ghc-prim-0.6.1:GHC.Prim.State#
                      ghc-prim-0.6.1:GHC.Prim.RealWorld) ->
              case ghc-prim-0.6.1:GHC.Prim.noDuplicate#
                     @ ghc-prim-0.6.1:GHC.Prim.RealWorld s_i5N3
              of s'_i5N4
              { __DEFAULT ->
              case ghc-prim-0.6.1:GHC.Prim.newMutVar#
                     @ GHC.ForeignPtr.Finalizers
                     @ ghc-prim-0.6.1:GHC.Prim.RealWorld
                     GHC.ForeignPtr.NoFinalizers
                     s'_i5N4
              of
              { (# ipv_i5Pp, ipv1_i5Pq #) ->
              (# ipv_i5Pp,
                 bytestring-0.10.10.0:Data.ByteString.Internal.PS
                   "\r\aEndDate\NUL\\142\SOH\SOH\rEndDate_match\NUL\\148\SOH\\129\ENQFixed\NUL\\144\SOH2\SOH\aEndDate\NUL\\142\SOH\\129\ENQNever\NUL\\146\SOH\SOH\aEndDate\NUL\\142\SOHq\EOTBool\NUL\STX\SOH\n\
                   \Bool_match\NUL\b\\129\EOTTrue\NUL\EOT\SOH\EOTBool\NUL\STX\\129\ENQFalse\NUL\ACK\SOH\EOTBool\NUL\STXQ\DC1lessThanEqInteger\NUL<2\ETX \SOH\EOTBool\NUL\STXa\ETXarg\NUL>\\1441\ETXarg\NUL@\\144;\SOH\SOHb\NULB\\149;\\189\\213A\EOTBool\NUL\STX!\SOHb\NULB!\EOTTrue\NUL\EOT!\ENQFalse\NUL\ACKw\\163\DC1\ETXarg\NUL>!\ETXarg\NUL@\\225\EOTUnit\NUL\SYN\SOH\n\
                   \Unit_match\NUL\SUB\\129\EOTUnit\NUL\CAN\SOH\EOTUnit\NUL\SYN\EM\STXds\NUL\\150\SOH\SOH\aEndDate\NUL\\142\SOHa\STXds\NUL\\152\SOH\\144;\\189\\185\SOH\rEndDate_match\NUL\\148\SOH!\STXds\NUL\\150\SOH!\EOTUnit\NUL\SYN\SOH\EOTBool\NUL\STXa\SOHn\NUL\\156\SOH\\1441\ENQthunk\NUL\\158\SOH\SOH\EOTUnit\NUL\SYNw!\DC1lessThanEqInteger\NUL<!\SOHn\NUL\\156\SOH!\STXds\NUL\\152\SOHa\ENQthunk\NUL\\160\SOH\SOH\EOTUnit\NUL\SYN!\ENQFalse\NUL\ACK!\EOTUnit\NUL\CAN\SOH"#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1_i5Pq)
                   0#
                   439# #)
              }
              })
    of
    { (# ipv_i5N6 [Dmd=<L,A>], ipv1_i5N7 [Dmd=<S,1*U(U,U,U,U)>] #) ->
    ipv1_i5N7
    }

-- RHS size: {terms: 2, types: 1, coercions: 0, joins: 0/0}
pastEnd_s5WS :: Maybe ByteString
[LclId,
 Str=m2,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
pastEnd_s5WS = GHC.Maybe.Just @ ByteString pastEnd_s5WR

-- RHS size: {terms: 3, types: 5, coercions: 0, joins: 0/0}
pastEnd :: CompiledCode (EndDate -> Integer -> Bool)
[LclIdX,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
pastEnd
  = Language.PlutusTx.Code.SerializedCode
      @ PLC.DefaultUni
      @ PLC.DefaultFun
      @ (EndDate -> Integer -> Bool)
      pastEnd_s5WQ
      pastEnd_s5WS

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FJ :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 70 0}]
$trModule_s5FJ = "example-0.1.0.0-inplace"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FK :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$trModule_s5FK = ghc-prim-0.6.1:GHC.Types.TrNameS $trModule_s5FJ

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FL :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
$trModule_s5FL = "Lib"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FM :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$trModule_s5FM = ghc-prim-0.6.1:GHC.Types.TrNameS $trModule_s5FL

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Lib.$trModule :: ghc-prim-0.6.1:GHC.Types.Module
[LclIdX,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
Lib.$trModule
  = ghc-prim-0.6.1:GHC.Types.Module $trModule_s5FK $trModule_s5FM

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_a5lu [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
$krep_a5lu
  = ghc-prim-0.6.1:GHC.Types.KindRepTyConApp
      integer-gmp-1.0.3.0:GHC.Integer.Type.$tcInteger
      (ghc-prim-0.6.1:GHC.Types.[] @ ghc-prim-0.6.1:GHC.Types.KindRep)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tcEndDate_s5FN :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
$tcEndDate_s5FN = "EndDate"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tcEndDate_s5FO :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$tcEndDate_s5FO = ghc-prim-0.6.1:GHC.Types.TrNameS $tcEndDate_s5FN

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tcEndDate :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Lib.$tcEndDate
  = ghc-prim-0.6.1:GHC.Types.TyCon
      8554338065373400840##
      3482623708274877127##
      Lib.$trModule
      $tcEndDate_s5FO
      0#
      ghc-prim-0.6.1:GHC.Types.krep$*

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_a5lv [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
$krep_a5lv
  = ghc-prim-0.6.1:GHC.Types.KindRepTyConApp
      Lib.$tcEndDate
      (ghc-prim-0.6.1:GHC.Types.[] @ ghc-prim-0.6.1:GHC.Types.KindRep)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tc'Never_s5FP :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
$tc'Never_s5FP = "'Never"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tc'Never_s5FQ :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$tc'Never_s5FQ = ghc-prim-0.6.1:GHC.Types.TrNameS $tc'Never_s5FP

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Never :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Lib.$tc'Never
  = ghc-prim-0.6.1:GHC.Types.TyCon
      10340504404178887934##
      18177538684886749349##
      Lib.$trModule
      $tc'Never_s5FQ
      0#
      $krep_a5lv

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep_a5lt [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId,
 Str=m4,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
$krep_a5lt
  = ghc-prim-0.6.1:GHC.Types.KindRepFun $krep_a5lu $krep_a5lv

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tc'Fixed_s5FR :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
$tc'Fixed_s5FR = "'Fixed"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tc'Fixed_s5FS :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$tc'Fixed_s5FS = ghc-prim-0.6.1:GHC.Types.TrNameS $tc'Fixed_s5FR

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Fixed :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Lib.$tc'Fixed
  = ghc-prim-0.6.1:GHC.Types.TyCon
      17912921531120851107##
      4815501104477800385##
      Lib.$trModule
      $tc'Fixed_s5FS
      0#
      $krep_a5lt




==================== Worker Wrapper binds ====================
Result size of Worker Wrapper binds
  = {terms: 118, types: 151, coercions: 0, joins: 0/0}

-- RHS size: {terms: 22, types: 59, coercions: 0, joins: 0/0}
pastEnd_s5WQ :: ByteString
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=NEVER}]
pastEnd_s5WQ
  = case ghc-prim-0.6.1:GHC.Magic.runRW#
           @ ('ghc-prim-0.6.1:GHC.Types.TupleRep
                '[ 'ghc-prim-0.6.1:GHC.Types.TupleRep '[],
                   'ghc-prim-0.6.1:GHC.Types.LiftedRep])
           @ (# ghc-prim-0.6.1:GHC.Prim.State#
                  ghc-prim-0.6.1:GHC.Prim.RealWorld,
                ByteString #)
           (\ (s_i5N3 [OS=OneShot]
                 :: ghc-prim-0.6.1:GHC.Prim.State#
                      ghc-prim-0.6.1:GHC.Prim.RealWorld) ->
              case ghc-prim-0.6.1:GHC.Prim.noDuplicate#
                     @ ghc-prim-0.6.1:GHC.Prim.RealWorld s_i5N3
              of s'_i5N4
              { __DEFAULT ->
              case ghc-prim-0.6.1:GHC.Prim.newMutVar#
                     @ GHC.ForeignPtr.Finalizers
                     @ ghc-prim-0.6.1:GHC.Prim.RealWorld
                     GHC.ForeignPtr.NoFinalizers
                     s'_i5N4
              of
              { (# ipv_i5Pp, ipv1_i5Pq #) ->
              (# ipv_i5Pp,
                 bytestring-0.10.10.0:Data.ByteString.Internal.PS
                   "\SOH\NUL\NUL35\DC2\SOH\ENQFixed\NUL\NUL!\ENQNever\NUL\NUL!\rEndDate_match\NUL\NUL35\DC2\SOH\EOTTrue\NUL\NUL!\ENQFalse\NUL\NUL!\n\
                   \Bool_match\NUL\NUL2\SOH\DC1lessThanEqInteger\NUL\NUL3Q!\EOTUnit\NUL\NUL!\n\
                   \Unit_match\NUL\NUL!\STXds\NUL\NUL!\STXds\NUL\NUL350\SOH\rEndDate_match\NUL\t\SOH\STXds\NUL\STX!\SOHn\NUL\NUL!\ENQthunk\NUL\NUL3\SOH\DC1lessThanEqInteger\NUL\a\SOH\SOHn\NUL\STX\SOH\STXds\NUL\ETX!\ENQthunk\NUL\NUL\SOH\ENQFalse\NUL\b\SOH\EOTUnit\NUL\EOT\DC2\SOH\tcase_Unit\NUL\NUL\SOH\tcase_Unit\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH!\ETXarg\NUL\NUL!\ETXarg\NUL\NUL2\SOH\SOHb\NUL\NUL35z\\129\SOHb\NUL\SOH\SOH\EOTTrue\NUL\ACK\SOH\ENQFalse\NUL\ENQ3s\SOH\ETXarg\NUL\STX\SOH\ETXarg\NUL\SOH\DC2\SOH\tcase_True\NUL\NUL!\n\
                   \case_False\NUL\NUL\SOH\tcase_True\NUL\STX\DC2\SOH\tcase_True\NUL\NUL!\n\
                   \case_False\NUL\NUL\SOH\n\
                   \case_False\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH!\ENQarg_0\NUL\NUL\DC2\SOH\n\
                   \case_Fixed\NUL\NUL!\n\
                   \case_Never\NUL\NUL0\SOH\n\
                   \case_Fixed\NUL\STX\SOH\ENQarg_0\NUL\ETX\DC2\SOH\n\
                   \case_Fixed\NUL\NUL!\n\
                   \case_Never\NUL\NUL\SOH\n\
                   \case_Never\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH\SOH"#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1_i5Pq)
                   0#
                   539# #)
              }
              })
    of
    { (# ipv_i5N6 [Dmd=<L,A>], ipv1_i5N7 [Dmd=<S,U(U,U,U,U)>] #) ->
    ipv1_i5N7
    }

-- RHS size: {terms: 22, types: 59, coercions: 0, joins: 0/0}
pastEnd_s5WR :: ByteString
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=NEVER}]
pastEnd_s5WR
  = case ghc-prim-0.6.1:GHC.Magic.runRW#
           @ ('ghc-prim-0.6.1:GHC.Types.TupleRep
                '[ 'ghc-prim-0.6.1:GHC.Types.TupleRep '[],
                   'ghc-prim-0.6.1:GHC.Types.LiftedRep])
           @ (# ghc-prim-0.6.1:GHC.Prim.State#
                  ghc-prim-0.6.1:GHC.Prim.RealWorld,
                ByteString #)
           (\ (s_i5N3 [OS=OneShot]
                 :: ghc-prim-0.6.1:GHC.Prim.State#
                      ghc-prim-0.6.1:GHC.Prim.RealWorld) ->
              case ghc-prim-0.6.1:GHC.Prim.noDuplicate#
                     @ ghc-prim-0.6.1:GHC.Prim.RealWorld s_i5N3
              of s'_i5N4
              { __DEFAULT ->
              case ghc-prim-0.6.1:GHC.Prim.newMutVar#
                     @ GHC.ForeignPtr.Finalizers
                     @ ghc-prim-0.6.1:GHC.Prim.RealWorld
                     GHC.ForeignPtr.NoFinalizers
                     s'_i5N4
              of
              { (# ipv_i5Pp, ipv1_i5Pq #) ->
              (# ipv_i5Pp,
                 bytestring-0.10.10.0:Data.ByteString.Internal.PS
                   "\r\aEndDate\NUL\\142\SOH\SOH\rEndDate_match\NUL\\148\SOH\\129\ENQFixed\NUL\\144\SOH2\SOH\aEndDate\NUL\\142\SOH\\129\ENQNever\NUL\\146\SOH\SOH\aEndDate\NUL\\142\SOHq\EOTBool\NUL\STX\SOH\n\
                   \Bool_match\NUL\b\\129\EOTTrue\NUL\EOT\SOH\EOTBool\NUL\STX\\129\ENQFalse\NUL\ACK\SOH\EOTBool\NUL\STXQ\DC1lessThanEqInteger\NUL<2\ETX \SOH\EOTBool\NUL\STXa\ETXarg\NUL>\\1441\ETXarg\NUL@\\144;\SOH\SOHb\NULB\\149;\\189\\213A\EOTBool\NUL\STX!\SOHb\NULB!\EOTTrue\NUL\EOT!\ENQFalse\NUL\ACKw\\163\DC1\ETXarg\NUL>!\ETXarg\NUL@\\225\EOTUnit\NUL\SYN\SOH\n\
                   \Unit_match\NUL\SUB\\129\EOTUnit\NUL\CAN\SOH\EOTUnit\NUL\SYN\EM\STXds\NUL\\150\SOH\SOH\aEndDate\NUL\\142\SOHa\STXds\NUL\\152\SOH\\144;\\189\\185\SOH\rEndDate_match\NUL\\148\SOH!\STXds\NUL\\150\SOH!\EOTUnit\NUL\SYN\SOH\EOTBool\NUL\STXa\SOHn\NUL\\156\SOH\\1441\ENQthunk\NUL\\158\SOH\SOH\EOTUnit\NUL\SYNw!\DC1lessThanEqInteger\NUL<!\SOHn\NUL\\156\SOH!\STXds\NUL\\152\SOHa\ENQthunk\NUL\\160\SOH\SOH\EOTUnit\NUL\SYN!\ENQFalse\NUL\ACK!\EOTUnit\NUL\CAN\SOH"#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1_i5Pq)
                   0#
                   439# #)
              }
              })
    of
    { (# ipv_i5N6 [Dmd=<L,A>], ipv1_i5N7 [Dmd=<S,U(U,U,U,U)>] #) ->
    ipv1_i5N7
    }

-- RHS size: {terms: 2, types: 1, coercions: 0, joins: 0/0}
pastEnd_s5WS :: Maybe ByteString
[LclId,
 Str=m2,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
pastEnd_s5WS = GHC.Maybe.Just @ ByteString pastEnd_s5WR

-- RHS size: {terms: 3, types: 5, coercions: 0, joins: 0/0}
pastEnd :: CompiledCode (EndDate -> Integer -> Bool)
[LclIdX,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
pastEnd
  = Language.PlutusTx.Code.SerializedCode
      @ PLC.DefaultUni
      @ PLC.DefaultFun
      @ (EndDate -> Integer -> Bool)
      pastEnd_s5WQ
      pastEnd_s5WS

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FJ :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 70 0}]
$trModule_s5FJ = "example-0.1.0.0-inplace"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FK :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$trModule_s5FK = ghc-prim-0.6.1:GHC.Types.TrNameS $trModule_s5FJ

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FL :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
$trModule_s5FL = "Lib"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FM :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$trModule_s5FM = ghc-prim-0.6.1:GHC.Types.TrNameS $trModule_s5FL

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Lib.$trModule :: ghc-prim-0.6.1:GHC.Types.Module
[LclIdX,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
Lib.$trModule
  = ghc-prim-0.6.1:GHC.Types.Module $trModule_s5FK $trModule_s5FM

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_a5lu [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
$krep_a5lu
  = ghc-prim-0.6.1:GHC.Types.KindRepTyConApp
      integer-gmp-1.0.3.0:GHC.Integer.Type.$tcInteger
      (ghc-prim-0.6.1:GHC.Types.[] @ ghc-prim-0.6.1:GHC.Types.KindRep)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tcEndDate_s5FN :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
$tcEndDate_s5FN = "EndDate"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tcEndDate_s5FO :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$tcEndDate_s5FO = ghc-prim-0.6.1:GHC.Types.TrNameS $tcEndDate_s5FN

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tcEndDate :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Lib.$tcEndDate
  = ghc-prim-0.6.1:GHC.Types.TyCon
      8554338065373400840##
      3482623708274877127##
      Lib.$trModule
      $tcEndDate_s5FO
      0#
      ghc-prim-0.6.1:GHC.Types.krep$*

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_a5lv [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
$krep_a5lv
  = ghc-prim-0.6.1:GHC.Types.KindRepTyConApp
      Lib.$tcEndDate
      (ghc-prim-0.6.1:GHC.Types.[] @ ghc-prim-0.6.1:GHC.Types.KindRep)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tc'Never_s5FP :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
$tc'Never_s5FP = "'Never"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tc'Never_s5FQ :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$tc'Never_s5FQ = ghc-prim-0.6.1:GHC.Types.TrNameS $tc'Never_s5FP

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Never :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Lib.$tc'Never
  = ghc-prim-0.6.1:GHC.Types.TyCon
      10340504404178887934##
      18177538684886749349##
      Lib.$trModule
      $tc'Never_s5FQ
      0#
      $krep_a5lv

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep_a5lt [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId,
 Str=m4,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
$krep_a5lt
  = ghc-prim-0.6.1:GHC.Types.KindRepFun $krep_a5lu $krep_a5lv

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tc'Fixed_s5FR :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
$tc'Fixed_s5FR = "'Fixed"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tc'Fixed_s5FS :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$tc'Fixed_s5FS = ghc-prim-0.6.1:GHC.Types.TrNameS $tc'Fixed_s5FR

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Fixed :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Lib.$tc'Fixed
  = ghc-prim-0.6.1:GHC.Types.TyCon
      17912921531120851107##
      4815501104477800385##
      Lib.$trModule
      $tc'Fixed_s5FS
      0#
      $krep_a5lt




==================== Simplifier statistics for following pass ====================
Simplifier reached fixed point after 1 iterations

Total ticks:     0

1 SimplifierDone 1



==================== Simplifier ====================
  Max iterations = 4
  SimplMode {Phase = 0 [post-worker-wrapper],
             inline,
             rules,
             eta-expand,
             case-of-case}
Result size of Simplifier
  = {terms: 118, types: 151, coercions: 0, joins: 0/0}

-- RHS size: {terms: 22, types: 59, coercions: 0, joins: 0/0}
pastEnd_s5WQ :: ByteString
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=NEVER}]
pastEnd_s5WQ
  = case ghc-prim-0.6.1:GHC.Magic.runRW#
           @ ('ghc-prim-0.6.1:GHC.Types.TupleRep
                '[ 'ghc-prim-0.6.1:GHC.Types.TupleRep '[],
                   'ghc-prim-0.6.1:GHC.Types.LiftedRep])
           @ (# ghc-prim-0.6.1:GHC.Prim.State#
                  ghc-prim-0.6.1:GHC.Prim.RealWorld,
                ByteString #)
           (\ (s_i5N3 [OS=OneShot]
                 :: ghc-prim-0.6.1:GHC.Prim.State#
                      ghc-prim-0.6.1:GHC.Prim.RealWorld) ->
              case ghc-prim-0.6.1:GHC.Prim.noDuplicate#
                     @ ghc-prim-0.6.1:GHC.Prim.RealWorld s_i5N3
              of s'_i5N4
              { __DEFAULT ->
              case ghc-prim-0.6.1:GHC.Prim.newMutVar#
                     @ GHC.ForeignPtr.Finalizers
                     @ ghc-prim-0.6.1:GHC.Prim.RealWorld
                     GHC.ForeignPtr.NoFinalizers
                     s'_i5N4
              of
              { (# ipv_i5Pp, ipv1_i5Pq #) ->
              (# ipv_i5Pp,
                 bytestring-0.10.10.0:Data.ByteString.Internal.PS
                   "\SOH\NUL\NUL35\DC2\SOH\ENQFixed\NUL\NUL!\ENQNever\NUL\NUL!\rEndDate_match\NUL\NUL35\DC2\SOH\EOTTrue\NUL\NUL!\ENQFalse\NUL\NUL!\n\
                   \Bool_match\NUL\NUL2\SOH\DC1lessThanEqInteger\NUL\NUL3Q!\EOTUnit\NUL\NUL!\n\
                   \Unit_match\NUL\NUL!\STXds\NUL\NUL!\STXds\NUL\NUL350\SOH\rEndDate_match\NUL\t\SOH\STXds\NUL\STX!\SOHn\NUL\NUL!\ENQthunk\NUL\NUL3\SOH\DC1lessThanEqInteger\NUL\a\SOH\SOHn\NUL\STX\SOH\STXds\NUL\ETX!\ENQthunk\NUL\NUL\SOH\ENQFalse\NUL\b\SOH\EOTUnit\NUL\EOT\DC2\SOH\tcase_Unit\NUL\NUL\SOH\tcase_Unit\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH!\ETXarg\NUL\NUL!\ETXarg\NUL\NUL2\SOH\SOHb\NUL\NUL35z\\129\SOHb\NUL\SOH\SOH\EOTTrue\NUL\ACK\SOH\ENQFalse\NUL\ENQ3s\SOH\ETXarg\NUL\STX\SOH\ETXarg\NUL\SOH\DC2\SOH\tcase_True\NUL\NUL!\n\
                   \case_False\NUL\NUL\SOH\tcase_True\NUL\STX\DC2\SOH\tcase_True\NUL\NUL!\n\
                   \case_False\NUL\NUL\SOH\n\
                   \case_False\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH!\ENQarg_0\NUL\NUL\DC2\SOH\n\
                   \case_Fixed\NUL\NUL!\n\
                   \case_Never\NUL\NUL0\SOH\n\
                   \case_Fixed\NUL\STX\SOH\ENQarg_0\NUL\ETX\DC2\SOH\n\
                   \case_Fixed\NUL\NUL!\n\
                   \case_Never\NUL\NUL\SOH\n\
                   \case_Never\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH\SOH"#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1_i5Pq)
                   0#
                   539# #)
              }
              })
    of
    { (# ipv_i5N6 [Dmd=<L,A>], ipv1_i5N7 [Dmd=<S,U(U,U,U,U)>] #) ->
    ipv1_i5N7
    }

-- RHS size: {terms: 22, types: 59, coercions: 0, joins: 0/0}
pastEnd_s5WR :: ByteString
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=NEVER}]
pastEnd_s5WR
  = case ghc-prim-0.6.1:GHC.Magic.runRW#
           @ ('ghc-prim-0.6.1:GHC.Types.TupleRep
                '[ 'ghc-prim-0.6.1:GHC.Types.TupleRep '[],
                   'ghc-prim-0.6.1:GHC.Types.LiftedRep])
           @ (# ghc-prim-0.6.1:GHC.Prim.State#
                  ghc-prim-0.6.1:GHC.Prim.RealWorld,
                ByteString #)
           (\ (s_i5N3 [OS=OneShot]
                 :: ghc-prim-0.6.1:GHC.Prim.State#
                      ghc-prim-0.6.1:GHC.Prim.RealWorld) ->
              case ghc-prim-0.6.1:GHC.Prim.noDuplicate#
                     @ ghc-prim-0.6.1:GHC.Prim.RealWorld s_i5N3
              of s'_i5N4
              { __DEFAULT ->
              case ghc-prim-0.6.1:GHC.Prim.newMutVar#
                     @ GHC.ForeignPtr.Finalizers
                     @ ghc-prim-0.6.1:GHC.Prim.RealWorld
                     GHC.ForeignPtr.NoFinalizers
                     s'_i5N4
              of
              { (# ipv_i5Pp, ipv1_i5Pq #) ->
              (# ipv_i5Pp,
                 bytestring-0.10.10.0:Data.ByteString.Internal.PS
                   "\r\aEndDate\NUL\\142\SOH\SOH\rEndDate_match\NUL\\148\SOH\\129\ENQFixed\NUL\\144\SOH2\SOH\aEndDate\NUL\\142\SOH\\129\ENQNever\NUL\\146\SOH\SOH\aEndDate\NUL\\142\SOHq\EOTBool\NUL\STX\SOH\n\
                   \Bool_match\NUL\b\\129\EOTTrue\NUL\EOT\SOH\EOTBool\NUL\STX\\129\ENQFalse\NUL\ACK\SOH\EOTBool\NUL\STXQ\DC1lessThanEqInteger\NUL<2\ETX \SOH\EOTBool\NUL\STXa\ETXarg\NUL>\\1441\ETXarg\NUL@\\144;\SOH\SOHb\NULB\\149;\\189\\213A\EOTBool\NUL\STX!\SOHb\NULB!\EOTTrue\NUL\EOT!\ENQFalse\NUL\ACKw\\163\DC1\ETXarg\NUL>!\ETXarg\NUL@\\225\EOTUnit\NUL\SYN\SOH\n\
                   \Unit_match\NUL\SUB\\129\EOTUnit\NUL\CAN\SOH\EOTUnit\NUL\SYN\EM\STXds\NUL\\150\SOH\SOH\aEndDate\NUL\\142\SOHa\STXds\NUL\\152\SOH\\144;\\189\\185\SOH\rEndDate_match\NUL\\148\SOH!\STXds\NUL\\150\SOH!\EOTUnit\NUL\SYN\SOH\EOTBool\NUL\STXa\SOHn\NUL\\156\SOH\\1441\ENQthunk\NUL\\158\SOH\SOH\EOTUnit\NUL\SYNw!\DC1lessThanEqInteger\NUL<!\SOHn\NUL\\156\SOH!\STXds\NUL\\152\SOHa\ENQthunk\NUL\\160\SOH\SOH\EOTUnit\NUL\SYN!\ENQFalse\NUL\ACK!\EOTUnit\NUL\CAN\SOH"#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1_i5Pq)
                   0#
                   439# #)
              }
              })
    of
    { (# ipv_i5N6 [Dmd=<L,A>], ipv1_i5N7 [Dmd=<S,U(U,U,U,U)>] #) ->
    ipv1_i5N7
    }

-- RHS size: {terms: 2, types: 1, coercions: 0, joins: 0/0}
pastEnd_s5WS :: Maybe ByteString
[LclId,
 Str=m2,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
pastEnd_s5WS = GHC.Maybe.Just @ ByteString pastEnd_s5WR

-- RHS size: {terms: 3, types: 5, coercions: 0, joins: 0/0}
pastEnd :: CompiledCode (EndDate -> Integer -> Bool)
[LclIdX,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
pastEnd
  = Language.PlutusTx.Code.SerializedCode
      @ PLC.DefaultUni
      @ PLC.DefaultFun
      @ (EndDate -> Integer -> Bool)
      pastEnd_s5WQ
      pastEnd_s5WS

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FJ :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 70 0}]
$trModule_s5FJ = "example-0.1.0.0-inplace"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FK :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$trModule_s5FK = ghc-prim-0.6.1:GHC.Types.TrNameS $trModule_s5FJ

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FL :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
$trModule_s5FL = "Lib"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FM :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$trModule_s5FM = ghc-prim-0.6.1:GHC.Types.TrNameS $trModule_s5FL

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Lib.$trModule :: ghc-prim-0.6.1:GHC.Types.Module
[LclIdX,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
Lib.$trModule
  = ghc-prim-0.6.1:GHC.Types.Module $trModule_s5FK $trModule_s5FM

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_a5lu [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
$krep_a5lu
  = ghc-prim-0.6.1:GHC.Types.KindRepTyConApp
      integer-gmp-1.0.3.0:GHC.Integer.Type.$tcInteger
      (ghc-prim-0.6.1:GHC.Types.[] @ ghc-prim-0.6.1:GHC.Types.KindRep)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tcEndDate_s5FN :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
$tcEndDate_s5FN = "EndDate"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tcEndDate_s5FO :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$tcEndDate_s5FO = ghc-prim-0.6.1:GHC.Types.TrNameS $tcEndDate_s5FN

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tcEndDate :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Lib.$tcEndDate
  = ghc-prim-0.6.1:GHC.Types.TyCon
      8554338065373400840##
      3482623708274877127##
      Lib.$trModule
      $tcEndDate_s5FO
      0#
      ghc-prim-0.6.1:GHC.Types.krep$*

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_a5lv [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
$krep_a5lv
  = ghc-prim-0.6.1:GHC.Types.KindRepTyConApp
      Lib.$tcEndDate
      (ghc-prim-0.6.1:GHC.Types.[] @ ghc-prim-0.6.1:GHC.Types.KindRep)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tc'Never_s5FP :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
$tc'Never_s5FP = "'Never"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tc'Never_s5FQ :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$tc'Never_s5FQ = ghc-prim-0.6.1:GHC.Types.TrNameS $tc'Never_s5FP

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Never :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Lib.$tc'Never
  = ghc-prim-0.6.1:GHC.Types.TyCon
      10340504404178887934##
      18177538684886749349##
      Lib.$trModule
      $tc'Never_s5FQ
      0#
      $krep_a5lv

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep_a5lt [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId,
 Str=m4,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
$krep_a5lt
  = ghc-prim-0.6.1:GHC.Types.KindRepFun $krep_a5lu $krep_a5lv

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tc'Fixed_s5FR :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
$tc'Fixed_s5FR = "'Fixed"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tc'Fixed_s5FS :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$tc'Fixed_s5FS = ghc-prim-0.6.1:GHC.Types.TrNameS $tc'Fixed_s5FR

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Fixed :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Lib.$tc'Fixed
  = ghc-prim-0.6.1:GHC.Types.TyCon
      17912921531120851107##
      4815501104477800385##
      Lib.$trModule
      $tc'Fixed_s5FS
      0#
      $krep_a5lt




==================== Exitification transformation ====================
Result size of Exitification transformation
  = {terms: 118, types: 151, coercions: 0, joins: 0/0}

-- RHS size: {terms: 22, types: 59, coercions: 0, joins: 0/0}
pastEnd_s5WQ :: ByteString
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=NEVER}]
pastEnd_s5WQ
  = case ghc-prim-0.6.1:GHC.Magic.runRW#
           @ ('ghc-prim-0.6.1:GHC.Types.TupleRep
                '[ 'ghc-prim-0.6.1:GHC.Types.TupleRep '[],
                   'ghc-prim-0.6.1:GHC.Types.LiftedRep])
           @ (# ghc-prim-0.6.1:GHC.Prim.State#
                  ghc-prim-0.6.1:GHC.Prim.RealWorld,
                ByteString #)
           (\ (s_i5N3 [OS=OneShot]
                 :: ghc-prim-0.6.1:GHC.Prim.State#
                      ghc-prim-0.6.1:GHC.Prim.RealWorld) ->
              case ghc-prim-0.6.1:GHC.Prim.noDuplicate#
                     @ ghc-prim-0.6.1:GHC.Prim.RealWorld s_i5N3
              of s'_i5N4
              { __DEFAULT ->
              case ghc-prim-0.6.1:GHC.Prim.newMutVar#
                     @ GHC.ForeignPtr.Finalizers
                     @ ghc-prim-0.6.1:GHC.Prim.RealWorld
                     GHC.ForeignPtr.NoFinalizers
                     s'_i5N4
              of
              { (# ipv_i5Pp, ipv1_i5Pq #) ->
              (# ipv_i5Pp,
                 bytestring-0.10.10.0:Data.ByteString.Internal.PS
                   "\SOH\NUL\NUL35\DC2\SOH\ENQFixed\NUL\NUL!\ENQNever\NUL\NUL!\rEndDate_match\NUL\NUL35\DC2\SOH\EOTTrue\NUL\NUL!\ENQFalse\NUL\NUL!\n\
                   \Bool_match\NUL\NUL2\SOH\DC1lessThanEqInteger\NUL\NUL3Q!\EOTUnit\NUL\NUL!\n\
                   \Unit_match\NUL\NUL!\STXds\NUL\NUL!\STXds\NUL\NUL350\SOH\rEndDate_match\NUL\t\SOH\STXds\NUL\STX!\SOHn\NUL\NUL!\ENQthunk\NUL\NUL3\SOH\DC1lessThanEqInteger\NUL\a\SOH\SOHn\NUL\STX\SOH\STXds\NUL\ETX!\ENQthunk\NUL\NUL\SOH\ENQFalse\NUL\b\SOH\EOTUnit\NUL\EOT\DC2\SOH\tcase_Unit\NUL\NUL\SOH\tcase_Unit\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH!\ETXarg\NUL\NUL!\ETXarg\NUL\NUL2\SOH\SOHb\NUL\NUL35z\\129\SOHb\NUL\SOH\SOH\EOTTrue\NUL\ACK\SOH\ENQFalse\NUL\ENQ3s\SOH\ETXarg\NUL\STX\SOH\ETXarg\NUL\SOH\DC2\SOH\tcase_True\NUL\NUL!\n\
                   \case_False\NUL\NUL\SOH\tcase_True\NUL\STX\DC2\SOH\tcase_True\NUL\NUL!\n\
                   \case_False\NUL\NUL\SOH\n\
                   \case_False\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH!\ENQarg_0\NUL\NUL\DC2\SOH\n\
                   \case_Fixed\NUL\NUL!\n\
                   \case_Never\NUL\NUL0\SOH\n\
                   \case_Fixed\NUL\STX\SOH\ENQarg_0\NUL\ETX\DC2\SOH\n\
                   \case_Fixed\NUL\NUL!\n\
                   \case_Never\NUL\NUL\SOH\n\
                   \case_Never\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH\SOH"#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1_i5Pq)
                   0#
                   539# #)
              }
              })
    of
    { (# ipv_i5N6 [Dmd=<L,A>], ipv1_i5N7 [Dmd=<S,U(U,U,U,U)>] #) ->
    ipv1_i5N7
    }

-- RHS size: {terms: 22, types: 59, coercions: 0, joins: 0/0}
pastEnd_s5WR :: ByteString
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=NEVER}]
pastEnd_s5WR
  = case ghc-prim-0.6.1:GHC.Magic.runRW#
           @ ('ghc-prim-0.6.1:GHC.Types.TupleRep
                '[ 'ghc-prim-0.6.1:GHC.Types.TupleRep '[],
                   'ghc-prim-0.6.1:GHC.Types.LiftedRep])
           @ (# ghc-prim-0.6.1:GHC.Prim.State#
                  ghc-prim-0.6.1:GHC.Prim.RealWorld,
                ByteString #)
           (\ (s_i5N3 [OS=OneShot]
                 :: ghc-prim-0.6.1:GHC.Prim.State#
                      ghc-prim-0.6.1:GHC.Prim.RealWorld) ->
              case ghc-prim-0.6.1:GHC.Prim.noDuplicate#
                     @ ghc-prim-0.6.1:GHC.Prim.RealWorld s_i5N3
              of s'_i5N4
              { __DEFAULT ->
              case ghc-prim-0.6.1:GHC.Prim.newMutVar#
                     @ GHC.ForeignPtr.Finalizers
                     @ ghc-prim-0.6.1:GHC.Prim.RealWorld
                     GHC.ForeignPtr.NoFinalizers
                     s'_i5N4
              of
              { (# ipv_i5Pp, ipv1_i5Pq #) ->
              (# ipv_i5Pp,
                 bytestring-0.10.10.0:Data.ByteString.Internal.PS
                   "\r\aEndDate\NUL\\142\SOH\SOH\rEndDate_match\NUL\\148\SOH\\129\ENQFixed\NUL\\144\SOH2\SOH\aEndDate\NUL\\142\SOH\\129\ENQNever\NUL\\146\SOH\SOH\aEndDate\NUL\\142\SOHq\EOTBool\NUL\STX\SOH\n\
                   \Bool_match\NUL\b\\129\EOTTrue\NUL\EOT\SOH\EOTBool\NUL\STX\\129\ENQFalse\NUL\ACK\SOH\EOTBool\NUL\STXQ\DC1lessThanEqInteger\NUL<2\ETX \SOH\EOTBool\NUL\STXa\ETXarg\NUL>\\1441\ETXarg\NUL@\\144;\SOH\SOHb\NULB\\149;\\189\\213A\EOTBool\NUL\STX!\SOHb\NULB!\EOTTrue\NUL\EOT!\ENQFalse\NUL\ACKw\\163\DC1\ETXarg\NUL>!\ETXarg\NUL@\\225\EOTUnit\NUL\SYN\SOH\n\
                   \Unit_match\NUL\SUB\\129\EOTUnit\NUL\CAN\SOH\EOTUnit\NUL\SYN\EM\STXds\NUL\\150\SOH\SOH\aEndDate\NUL\\142\SOHa\STXds\NUL\\152\SOH\\144;\\189\\185\SOH\rEndDate_match\NUL\\148\SOH!\STXds\NUL\\150\SOH!\EOTUnit\NUL\SYN\SOH\EOTBool\NUL\STXa\SOHn\NUL\\156\SOH\\1441\ENQthunk\NUL\\158\SOH\SOH\EOTUnit\NUL\SYNw!\DC1lessThanEqInteger\NUL<!\SOHn\NUL\\156\SOH!\STXds\NUL\\152\SOHa\ENQthunk\NUL\\160\SOH\SOH\EOTUnit\NUL\SYN!\ENQFalse\NUL\ACK!\EOTUnit\NUL\CAN\SOH"#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1_i5Pq)
                   0#
                   439# #)
              }
              })
    of
    { (# ipv_i5N6 [Dmd=<L,A>], ipv1_i5N7 [Dmd=<S,U(U,U,U,U)>] #) ->
    ipv1_i5N7
    }

-- RHS size: {terms: 2, types: 1, coercions: 0, joins: 0/0}
pastEnd_s5WS :: Maybe ByteString
[LclId,
 Str=m2,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
pastEnd_s5WS = GHC.Maybe.Just @ ByteString pastEnd_s5WR

-- RHS size: {terms: 3, types: 5, coercions: 0, joins: 0/0}
pastEnd :: CompiledCode (EndDate -> Integer -> Bool)
[LclIdX,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
pastEnd
  = Language.PlutusTx.Code.SerializedCode
      @ PLC.DefaultUni
      @ PLC.DefaultFun
      @ (EndDate -> Integer -> Bool)
      pastEnd_s5WQ
      pastEnd_s5WS

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FJ :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 70 0}]
$trModule_s5FJ = "example-0.1.0.0-inplace"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FK :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$trModule_s5FK = ghc-prim-0.6.1:GHC.Types.TrNameS $trModule_s5FJ

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FL :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
$trModule_s5FL = "Lib"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FM :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$trModule_s5FM = ghc-prim-0.6.1:GHC.Types.TrNameS $trModule_s5FL

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Lib.$trModule :: ghc-prim-0.6.1:GHC.Types.Module
[LclIdX,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
Lib.$trModule
  = ghc-prim-0.6.1:GHC.Types.Module $trModule_s5FK $trModule_s5FM

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_a5lu [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
$krep_a5lu
  = ghc-prim-0.6.1:GHC.Types.KindRepTyConApp
      integer-gmp-1.0.3.0:GHC.Integer.Type.$tcInteger
      (ghc-prim-0.6.1:GHC.Types.[] @ ghc-prim-0.6.1:GHC.Types.KindRep)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tcEndDate_s5FN :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
$tcEndDate_s5FN = "EndDate"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tcEndDate_s5FO :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$tcEndDate_s5FO = ghc-prim-0.6.1:GHC.Types.TrNameS $tcEndDate_s5FN

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tcEndDate :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Lib.$tcEndDate
  = ghc-prim-0.6.1:GHC.Types.TyCon
      8554338065373400840##
      3482623708274877127##
      Lib.$trModule
      $tcEndDate_s5FO
      0#
      ghc-prim-0.6.1:GHC.Types.krep$*

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_a5lv [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
$krep_a5lv
  = ghc-prim-0.6.1:GHC.Types.KindRepTyConApp
      Lib.$tcEndDate
      (ghc-prim-0.6.1:GHC.Types.[] @ ghc-prim-0.6.1:GHC.Types.KindRep)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tc'Never_s5FP :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
$tc'Never_s5FP = "'Never"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tc'Never_s5FQ :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$tc'Never_s5FQ = ghc-prim-0.6.1:GHC.Types.TrNameS $tc'Never_s5FP

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Never :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Lib.$tc'Never
  = ghc-prim-0.6.1:GHC.Types.TyCon
      10340504404178887934##
      18177538684886749349##
      Lib.$trModule
      $tc'Never_s5FQ
      0#
      $krep_a5lv

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep_a5lt [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId,
 Str=m4,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
$krep_a5lt
  = ghc-prim-0.6.1:GHC.Types.KindRepFun $krep_a5lu $krep_a5lv

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tc'Fixed_s5FR :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
$tc'Fixed_s5FR = "'Fixed"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tc'Fixed_s5FS :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$tc'Fixed_s5FS = ghc-prim-0.6.1:GHC.Types.TrNameS $tc'Fixed_s5FR

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Fixed :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Lib.$tc'Fixed
  = ghc-prim-0.6.1:GHC.Types.TyCon
      17912921531120851107##
      4815501104477800385##
      Lib.$trModule
      $tc'Fixed_s5FS
      0#
      $krep_a5lt




==================== Levels added: ====================
<pastEnd_s5WQ,<0,0>>
<pastEnd_s5WQ,<0,0>>
  = case GHC.Magic.runRW#
           @ ('GHC.Types.TupleRep
                '[ 'GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
           @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                Data.ByteString.Internal.ByteString #)
           (let {
              <lvl_s5Y3,F<0,0>>
              <lvl_s5Y3,F<0,0>>
                = \ <s_i5N3,<0,1>> ->
                    case GHC.Prim.noDuplicate# @ GHC.Prim.RealWorld s_i5N3
                    of <s'_i5N4,<0,3>>
                    { __DEFAULT ->
                    case GHC.Prim.newMutVar#
                           @ GHC.ForeignPtr.Finalizers
                           @ GHC.Prim.RealWorld
                           GHC.ForeignPtr.NoFinalizers
                           s'_i5N4
                    of <ds1_i5Po,<0,4>>
                    { (# <ipv_i5Pp,<0,4>>, <ipv1_i5Pq,<0,4>> #) ->
                    (# ipv_i5Pp,
                       Data.ByteString.Internal.PS
                         (let {
                            <lvl_s5Y2,F<0,0>>
                            <lvl_s5Y2,F<0,0>>
                              = "\SOH\NUL\NUL35\DC2\SOH\ENQFixed\NUL\NUL!\ENQNever\NUL\NUL!\rEndDate_match\NUL\NUL35\DC2\SOH\EOTTrue\NUL\NUL!\ENQFalse\NUL\NUL!\n\
                                \Bool_match\NUL\NUL2\SOH\DC1lessThanEqInteger\NUL\NUL3Q!\EOTUnit\NUL\NUL!\n\
                                \Unit_match\NUL\NUL!\STXds\NUL\NUL!\STXds\NUL\NUL350\SOH\rEndDate_match\NUL\t\SOH\STXds\NUL\STX!\SOHn\NUL\NUL!\ENQthunk\NUL\NUL3\SOH\DC1lessThanEqInteger\NUL\a\SOH\SOHn\NUL\STX\SOH\STXds\NUL\ETX!\ENQthunk\NUL\NUL\SOH\ENQFalse\NUL\b\SOH\EOTUnit\NUL\EOT\DC2\SOH\tcase_Unit\NUL\NUL\SOH\tcase_Unit\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH!\ETXarg\NUL\NUL!\ETXarg\NUL\NUL2\SOH\SOHb\NUL\NUL35z\\129\SOHb\NUL\SOH\SOH\EOTTrue\NUL\ACK\SOH\ENQFalse\NUL\ENQ3s\SOH\ETXarg\NUL\STX\SOH\ETXarg\NUL\SOH\DC2\SOH\tcase_True\NUL\NUL!\n\
                                \case_False\NUL\NUL\SOH\tcase_True\NUL\STX\DC2\SOH\tcase_True\NUL\NUL!\n\
                                \case_False\NUL\NUL\SOH\n\
                                \case_False\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH!\ENQarg_0\NUL\NUL\DC2\SOH\n\
                                \case_Fixed\NUL\NUL!\n\
                                \case_Never\NUL\NUL0\SOH\n\
                                \case_Fixed\NUL\STX\SOH\ENQarg_0\NUL\ETX\DC2\SOH\n\
                                \case_Fixed\NUL\NUL!\n\
                                \case_Never\NUL\NUL\SOH\n\
                                \case_Never\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH\SOH"# } in
                          lvl_s5Y2)
                         (GHC.ForeignPtr.PlainForeignPtr ipv1_i5Pq)
                         0#
                         539# #)
                    }
                    } } in
            lvl_s5Y3)
    of <ds_i5N5,<0,3>>
    { (# <ipv_i5N6,<0,3>>, <ipv1_i5N7,<0,3>> #) ->
    ipv1_i5N7
    }
<pastEnd_s5WR,<0,0>>
<pastEnd_s5WR,<0,0>>
  = case GHC.Magic.runRW#
           @ ('GHC.Types.TupleRep
                '[ 'GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
           @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                Data.ByteString.Internal.ByteString #)
           (let {
              <lvl_s5Y5,F<0,0>>
              <lvl_s5Y5,F<0,0>>
                = \ <s_i5N3,<0,1>> ->
                    case GHC.Prim.noDuplicate# @ GHC.Prim.RealWorld s_i5N3
                    of <s'_i5N4,<0,3>>
                    { __DEFAULT ->
                    case GHC.Prim.newMutVar#
                           @ GHC.ForeignPtr.Finalizers
                           @ GHC.Prim.RealWorld
                           GHC.ForeignPtr.NoFinalizers
                           s'_i5N4
                    of <ds1_i5Po,<0,4>>
                    { (# <ipv_i5Pp,<0,4>>, <ipv1_i5Pq,<0,4>> #) ->
                    (# ipv_i5Pp,
                       Data.ByteString.Internal.PS
                         (let {
                            <lvl_s5Y4,F<0,0>>
                            <lvl_s5Y4,F<0,0>>
                              = "\r\aEndDate\NUL\\142\SOH\SOH\rEndDate_match\NUL\\148\SOH\\129\ENQFixed\NUL\\144\SOH2\SOH\aEndDate\NUL\\142\SOH\\129\ENQNever\NUL\\146\SOH\SOH\aEndDate\NUL\\142\SOHq\EOTBool\NUL\STX\SOH\n\
                                \Bool_match\NUL\b\\129\EOTTrue\NUL\EOT\SOH\EOTBool\NUL\STX\\129\ENQFalse\NUL\ACK\SOH\EOTBool\NUL\STXQ\DC1lessThanEqInteger\NUL<2\ETX \SOH\EOTBool\NUL\STXa\ETXarg\NUL>\\1441\ETXarg\NUL@\\144;\SOH\SOHb\NULB\\149;\\189\\213A\EOTBool\NUL\STX!\SOHb\NULB!\EOTTrue\NUL\EOT!\ENQFalse\NUL\ACKw\\163\DC1\ETXarg\NUL>!\ETXarg\NUL@\\225\EOTUnit\NUL\SYN\SOH\n\
                                \Unit_match\NUL\SUB\\129\EOTUnit\NUL\CAN\SOH\EOTUnit\NUL\SYN\EM\STXds\NUL\\150\SOH\SOH\aEndDate\NUL\\142\SOHa\STXds\NUL\\152\SOH\\144;\\189\\185\SOH\rEndDate_match\NUL\\148\SOH!\STXds\NUL\\150\SOH!\EOTUnit\NUL\SYN\SOH\EOTBool\NUL\STXa\SOHn\NUL\\156\SOH\\1441\ENQthunk\NUL\\158\SOH\SOH\EOTUnit\NUL\SYNw!\DC1lessThanEqInteger\NUL<!\SOHn\NUL\\156\SOH!\STXds\NUL\\152\SOHa\ENQthunk\NUL\\160\SOH\SOH\EOTUnit\NUL\SYN!\ENQFalse\NUL\ACK!\EOTUnit\NUL\CAN\SOH"# } in
                          lvl_s5Y4)
                         (GHC.ForeignPtr.PlainForeignPtr ipv1_i5Pq)
                         0#
                         439# #)
                    }
                    } } in
            lvl_s5Y5)
    of <ds_i5N5,<0,3>>
    { (# <ipv_i5N6,<0,3>>, <ipv1_i5N7,<0,3>> #) ->
    ipv1_i5N7
    }
<pastEnd_s5WS,<0,0>>
<pastEnd_s5WS,<0,0>>
  = GHC.Maybe.Just @ Data.ByteString.Internal.ByteString pastEnd_s5WR
<Lib.pastEnd,<0,0>>
<Lib.pastEnd,<0,0>>
  = Language.PlutusTx.Code.SerializedCode
      @ Language.PlutusCore.Universe.Default.DefaultUni
      @ Language.PlutusCore.Builtins.DefaultFun
      @ (Lib.EndDate -> GHC.Integer.Type.Integer -> GHC.Types.Bool)
      pastEnd_s5WQ
      pastEnd_s5WS
<$trModule_s5FJ,<0,0>>
<$trModule_s5FJ,<0,0>> = "example-0.1.0.0-inplace"#
<$trModule_s5FK,<0,0>>
<$trModule_s5FK,<0,0>> = GHC.Types.TrNameS $trModule_s5FJ
<$trModule_s5FL,<0,0>>
<$trModule_s5FL,<0,0>> = "Lib"#
<$trModule_s5FM,<0,0>>
<$trModule_s5FM,<0,0>> = GHC.Types.TrNameS $trModule_s5FL
<Lib.$trModule,<0,0>>
<Lib.$trModule,<0,0>>
  = GHC.Types.Module $trModule_s5FK $trModule_s5FM
<$krep_a5lu,<0,0>>
<$krep_a5lu,<0,0>>
  = GHC.Types.KindRepTyConApp
      GHC.Integer.Type.$tcInteger (GHC.Types.[] @ GHC.Types.KindRep)
<$tcEndDate_s5FN,<0,0>>
<$tcEndDate_s5FN,<0,0>> = "EndDate"#
<$tcEndDate_s5FO,<0,0>>
<$tcEndDate_s5FO,<0,0>> = GHC.Types.TrNameS $tcEndDate_s5FN
<Lib.$tcEndDate,<0,0>>
<Lib.$tcEndDate,<0,0>>
  = GHC.Types.TyCon
      8554338065373400840##
      3482623708274877127##
      Lib.$trModule
      $tcEndDate_s5FO
      0#
      GHC.Types.krep$*
<$krep_a5lv,<0,0>>
<$krep_a5lv,<0,0>>
  = GHC.Types.KindRepTyConApp
      Lib.$tcEndDate (GHC.Types.[] @ GHC.Types.KindRep)
<$tc'Never_s5FP,<0,0>>
<$tc'Never_s5FP,<0,0>> = "'Never"#
<$tc'Never_s5FQ,<0,0>>
<$tc'Never_s5FQ,<0,0>> = GHC.Types.TrNameS $tc'Never_s5FP
<Lib.$tc'Never,<0,0>>
<Lib.$tc'Never,<0,0>>
  = GHC.Types.TyCon
      10340504404178887934##
      18177538684886749349##
      Lib.$trModule
      $tc'Never_s5FQ
      0#
      $krep_a5lv
<$krep_a5lt,<0,0>>
<$krep_a5lt,<0,0>> = GHC.Types.KindRepFun $krep_a5lu $krep_a5lv
<$tc'Fixed_s5FR,<0,0>>
<$tc'Fixed_s5FR,<0,0>> = "'Fixed"#
<$tc'Fixed_s5FS,<0,0>>
<$tc'Fixed_s5FS,<0,0>> = GHC.Types.TrNameS $tc'Fixed_s5FR
<Lib.$tc'Fixed,<0,0>>
<Lib.$tc'Fixed,<0,0>>
  = GHC.Types.TyCon
      17912921531120851107##
      4815501104477800385##
      Lib.$trModule
      $tc'Fixed_s5FS
      0#
      $krep_a5lt



==================== FloatOut stats: ====================
2 Lets floated to top level; 0 Lets floated elsewhere; from 2 Lambda groups



==================== Float out(FOS {Lam = Just 0, Consts = True, OverSatApps = True}) ====================
Result size of Float out(FOS {Lam = Just 0,
                              Consts = True,
                              OverSatApps = True})
  = {terms: 126, types: 173, coercions: 0, joins: 0/0}

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl_s5Y2 :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId]
lvl_s5Y2
  = "\SOH\NUL\NUL35\DC2\SOH\ENQFixed\NUL\NUL!\ENQNever\NUL\NUL!\rEndDate_match\NUL\NUL35\DC2\SOH\EOTTrue\NUL\NUL!\ENQFalse\NUL\NUL!\n\
    \Bool_match\NUL\NUL2\SOH\DC1lessThanEqInteger\NUL\NUL3Q!\EOTUnit\NUL\NUL!\n\
    \Unit_match\NUL\NUL!\STXds\NUL\NUL!\STXds\NUL\NUL350\SOH\rEndDate_match\NUL\t\SOH\STXds\NUL\STX!\SOHn\NUL\NUL!\ENQthunk\NUL\NUL3\SOH\DC1lessThanEqInteger\NUL\a\SOH\SOHn\NUL\STX\SOH\STXds\NUL\ETX!\ENQthunk\NUL\NUL\SOH\ENQFalse\NUL\b\SOH\EOTUnit\NUL\EOT\DC2\SOH\tcase_Unit\NUL\NUL\SOH\tcase_Unit\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH!\ETXarg\NUL\NUL!\ETXarg\NUL\NUL2\SOH\SOHb\NUL\NUL35z\\129\SOHb\NUL\SOH\SOH\EOTTrue\NUL\ACK\SOH\ENQFalse\NUL\ENQ3s\SOH\ETXarg\NUL\STX\SOH\ETXarg\NUL\SOH\DC2\SOH\tcase_True\NUL\NUL!\n\
    \case_False\NUL\NUL\SOH\tcase_True\NUL\STX\DC2\SOH\tcase_True\NUL\NUL!\n\
    \case_False\NUL\NUL\SOH\n\
    \case_False\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH!\ENQarg_0\NUL\NUL\DC2\SOH\n\
    \case_Fixed\NUL\NUL!\n\
    \case_Never\NUL\NUL0\SOH\n\
    \case_Fixed\NUL\STX\SOH\ENQarg_0\NUL\ETX\DC2\SOH\n\
    \case_Fixed\NUL\NUL!\n\
    \case_Never\NUL\NUL\SOH\n\
    \case_Never\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH\SOH"#

-- RHS size: {terms: 18, types: 29, coercions: 0, joins: 0/0}
lvl_s5Y3
  :: ghc-prim-0.6.1:GHC.Prim.State# ghc-prim-0.6.1:GHC.Prim.RealWorld
     -> (# ghc-prim-0.6.1:GHC.Prim.State#
             ghc-prim-0.6.1:GHC.Prim.RealWorld,
           ByteString #)
[LclId]
lvl_s5Y3
  = \ (s_i5N3 [OS=OneShot]
         :: ghc-prim-0.6.1:GHC.Prim.State#
              ghc-prim-0.6.1:GHC.Prim.RealWorld) ->
      case ghc-prim-0.6.1:GHC.Prim.noDuplicate#
             @ ghc-prim-0.6.1:GHC.Prim.RealWorld s_i5N3
      of s'_i5N4
      { __DEFAULT ->
      case ghc-prim-0.6.1:GHC.Prim.newMutVar#
             @ GHC.ForeignPtr.Finalizers
             @ ghc-prim-0.6.1:GHC.Prim.RealWorld
             GHC.ForeignPtr.NoFinalizers
             s'_i5N4
      of
      { (# ipv_i5Pp, ipv1_i5Pq #) ->
      (# ipv_i5Pp,
         bytestring-0.10.10.0:Data.ByteString.Internal.PS
           lvl_s5Y2 (GHC.ForeignPtr.PlainForeignPtr ipv1_i5Pq) 0# 539# #)
      }
      }

-- RHS size: {terms: 5, types: 30, coercions: 0, joins: 0/0}
pastEnd_s5WQ :: ByteString
[LclId]
pastEnd_s5WQ
  = case ghc-prim-0.6.1:GHC.Magic.runRW#
           @ ('ghc-prim-0.6.1:GHC.Types.TupleRep
                '[ 'ghc-prim-0.6.1:GHC.Types.TupleRep '[],
                   'ghc-prim-0.6.1:GHC.Types.LiftedRep])
           @ (# ghc-prim-0.6.1:GHC.Prim.State#
                  ghc-prim-0.6.1:GHC.Prim.RealWorld,
                ByteString #)
           lvl_s5Y3
    of
    { (# ipv_i5N6 [Dmd=<L,A>], ipv1_i5N7 [Dmd=<S,U(U,U,U,U)>] #) ->
    ipv1_i5N7
    }

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl_s5Y4 :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId]
lvl_s5Y4
  = "\r\aEndDate\NUL\\142\SOH\SOH\rEndDate_match\NUL\\148\SOH\\129\ENQFixed\NUL\\144\SOH2\SOH\aEndDate\NUL\\142\SOH\\129\ENQNever\NUL\\146\SOH\SOH\aEndDate\NUL\\142\SOHq\EOTBool\NUL\STX\SOH\n\
    \Bool_match\NUL\b\\129\EOTTrue\NUL\EOT\SOH\EOTBool\NUL\STX\\129\ENQFalse\NUL\ACK\SOH\EOTBool\NUL\STXQ\DC1lessThanEqInteger\NUL<2\ETX \SOH\EOTBool\NUL\STXa\ETXarg\NUL>\\1441\ETXarg\NUL@\\144;\SOH\SOHb\NULB\\149;\\189\\213A\EOTBool\NUL\STX!\SOHb\NULB!\EOTTrue\NUL\EOT!\ENQFalse\NUL\ACKw\\163\DC1\ETXarg\NUL>!\ETXarg\NUL@\\225\EOTUnit\NUL\SYN\SOH\n\
    \Unit_match\NUL\SUB\\129\EOTUnit\NUL\CAN\SOH\EOTUnit\NUL\SYN\EM\STXds\NUL\\150\SOH\SOH\aEndDate\NUL\\142\SOHa\STXds\NUL\\152\SOH\\144;\\189\\185\SOH\rEndDate_match\NUL\\148\SOH!\STXds\NUL\\150\SOH!\EOTUnit\NUL\SYN\SOH\EOTBool\NUL\STXa\SOHn\NUL\\156\SOH\\1441\ENQthunk\NUL\\158\SOH\SOH\EOTUnit\NUL\SYNw!\DC1lessThanEqInteger\NUL<!\SOHn\NUL\\156\SOH!\STXds\NUL\\152\SOHa\ENQthunk\NUL\\160\SOH\SOH\EOTUnit\NUL\SYN!\ENQFalse\NUL\ACK!\EOTUnit\NUL\CAN\SOH"#

-- RHS size: {terms: 18, types: 29, coercions: 0, joins: 0/0}
lvl_s5Y5
  :: ghc-prim-0.6.1:GHC.Prim.State# ghc-prim-0.6.1:GHC.Prim.RealWorld
     -> (# ghc-prim-0.6.1:GHC.Prim.State#
             ghc-prim-0.6.1:GHC.Prim.RealWorld,
           ByteString #)
[LclId]
lvl_s5Y5
  = \ (s_i5N3 [OS=OneShot]
         :: ghc-prim-0.6.1:GHC.Prim.State#
              ghc-prim-0.6.1:GHC.Prim.RealWorld) ->
      case ghc-prim-0.6.1:GHC.Prim.noDuplicate#
             @ ghc-prim-0.6.1:GHC.Prim.RealWorld s_i5N3
      of s'_i5N4
      { __DEFAULT ->
      case ghc-prim-0.6.1:GHC.Prim.newMutVar#
             @ GHC.ForeignPtr.Finalizers
             @ ghc-prim-0.6.1:GHC.Prim.RealWorld
             GHC.ForeignPtr.NoFinalizers
             s'_i5N4
      of
      { (# ipv_i5Pp, ipv1_i5Pq #) ->
      (# ipv_i5Pp,
         bytestring-0.10.10.0:Data.ByteString.Internal.PS
           lvl_s5Y4 (GHC.ForeignPtr.PlainForeignPtr ipv1_i5Pq) 0# 439# #)
      }
      }

-- RHS size: {terms: 5, types: 30, coercions: 0, joins: 0/0}
pastEnd_s5WR :: ByteString
[LclId]
pastEnd_s5WR
  = case ghc-prim-0.6.1:GHC.Magic.runRW#
           @ ('ghc-prim-0.6.1:GHC.Types.TupleRep
                '[ 'ghc-prim-0.6.1:GHC.Types.TupleRep '[],
                   'ghc-prim-0.6.1:GHC.Types.LiftedRep])
           @ (# ghc-prim-0.6.1:GHC.Prim.State#
                  ghc-prim-0.6.1:GHC.Prim.RealWorld,
                ByteString #)
           lvl_s5Y5
    of
    { (# ipv_i5N6 [Dmd=<L,A>], ipv1_i5N7 [Dmd=<S,U(U,U,U,U)>] #) ->
    ipv1_i5N7
    }

-- RHS size: {terms: 2, types: 1, coercions: 0, joins: 0/0}
pastEnd_s5WS :: Maybe ByteString
[LclId, Str=m2]
pastEnd_s5WS = GHC.Maybe.Just @ ByteString pastEnd_s5WR

-- RHS size: {terms: 3, types: 5, coercions: 0, joins: 0/0}
pastEnd :: CompiledCode (EndDate -> Integer -> Bool)
[LclIdX, Str=m1]
pastEnd
  = Language.PlutusTx.Code.SerializedCode
      @ PLC.DefaultUni
      @ PLC.DefaultFun
      @ (EndDate -> Integer -> Bool)
      pastEnd_s5WQ
      pastEnd_s5WS

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FJ :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId]
$trModule_s5FJ = "example-0.1.0.0-inplace"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FK :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId, Str=m1]
$trModule_s5FK = ghc-prim-0.6.1:GHC.Types.TrNameS $trModule_s5FJ

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FL :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId]
$trModule_s5FL = "Lib"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FM :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId, Str=m1]
$trModule_s5FM = ghc-prim-0.6.1:GHC.Types.TrNameS $trModule_s5FL

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Lib.$trModule :: ghc-prim-0.6.1:GHC.Types.Module
[LclIdX, Str=m]
Lib.$trModule
  = ghc-prim-0.6.1:GHC.Types.Module $trModule_s5FK $trModule_s5FM

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_a5lu [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId, Str=m1]
$krep_a5lu
  = ghc-prim-0.6.1:GHC.Types.KindRepTyConApp
      integer-gmp-1.0.3.0:GHC.Integer.Type.$tcInteger
      (ghc-prim-0.6.1:GHC.Types.[] @ ghc-prim-0.6.1:GHC.Types.KindRep)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tcEndDate_s5FN :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId]
$tcEndDate_s5FN = "EndDate"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tcEndDate_s5FO :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId, Str=m1]
$tcEndDate_s5FO = ghc-prim-0.6.1:GHC.Types.TrNameS $tcEndDate_s5FN

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tcEndDate :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX, Str=m]
Lib.$tcEndDate
  = ghc-prim-0.6.1:GHC.Types.TyCon
      8554338065373400840##
      3482623708274877127##
      Lib.$trModule
      $tcEndDate_s5FO
      0#
      ghc-prim-0.6.1:GHC.Types.krep$*

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_a5lv [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId, Str=m1]
$krep_a5lv
  = ghc-prim-0.6.1:GHC.Types.KindRepTyConApp
      Lib.$tcEndDate
      (ghc-prim-0.6.1:GHC.Types.[] @ ghc-prim-0.6.1:GHC.Types.KindRep)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tc'Never_s5FP :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId]
$tc'Never_s5FP = "'Never"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tc'Never_s5FQ :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId, Str=m1]
$tc'Never_s5FQ = ghc-prim-0.6.1:GHC.Types.TrNameS $tc'Never_s5FP

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Never :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX, Str=m]
Lib.$tc'Never
  = ghc-prim-0.6.1:GHC.Types.TyCon
      10340504404178887934##
      18177538684886749349##
      Lib.$trModule
      $tc'Never_s5FQ
      0#
      $krep_a5lv

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep_a5lt [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId, Str=m4]
$krep_a5lt
  = ghc-prim-0.6.1:GHC.Types.KindRepFun $krep_a5lu $krep_a5lv

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tc'Fixed_s5FR :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId]
$tc'Fixed_s5FR = "'Fixed"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tc'Fixed_s5FS :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId, Str=m1]
$tc'Fixed_s5FS = ghc-prim-0.6.1:GHC.Types.TrNameS $tc'Fixed_s5FR

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Fixed :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX, Str=m]
Lib.$tc'Fixed
  = ghc-prim-0.6.1:GHC.Types.TyCon
      17912921531120851107##
      4815501104477800385##
      Lib.$trModule
      $tc'Fixed_s5FS
      0#
      $krep_a5lt




==================== Common sub-expression ====================
Result size of Common sub-expression
  = {terms: 126, types: 173, coercions: 0, joins: 0/0}

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl_s5Y2 :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId]
lvl_s5Y2
  = "\SOH\NUL\NUL35\DC2\SOH\ENQFixed\NUL\NUL!\ENQNever\NUL\NUL!\rEndDate_match\NUL\NUL35\DC2\SOH\EOTTrue\NUL\NUL!\ENQFalse\NUL\NUL!\n\
    \Bool_match\NUL\NUL2\SOH\DC1lessThanEqInteger\NUL\NUL3Q!\EOTUnit\NUL\NUL!\n\
    \Unit_match\NUL\NUL!\STXds\NUL\NUL!\STXds\NUL\NUL350\SOH\rEndDate_match\NUL\t\SOH\STXds\NUL\STX!\SOHn\NUL\NUL!\ENQthunk\NUL\NUL3\SOH\DC1lessThanEqInteger\NUL\a\SOH\SOHn\NUL\STX\SOH\STXds\NUL\ETX!\ENQthunk\NUL\NUL\SOH\ENQFalse\NUL\b\SOH\EOTUnit\NUL\EOT\DC2\SOH\tcase_Unit\NUL\NUL\SOH\tcase_Unit\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH!\ETXarg\NUL\NUL!\ETXarg\NUL\NUL2\SOH\SOHb\NUL\NUL35z\\129\SOHb\NUL\SOH\SOH\EOTTrue\NUL\ACK\SOH\ENQFalse\NUL\ENQ3s\SOH\ETXarg\NUL\STX\SOH\ETXarg\NUL\SOH\DC2\SOH\tcase_True\NUL\NUL!\n\
    \case_False\NUL\NUL\SOH\tcase_True\NUL\STX\DC2\SOH\tcase_True\NUL\NUL!\n\
    \case_False\NUL\NUL\SOH\n\
    \case_False\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH!\ENQarg_0\NUL\NUL\DC2\SOH\n\
    \case_Fixed\NUL\NUL!\n\
    \case_Never\NUL\NUL0\SOH\n\
    \case_Fixed\NUL\STX\SOH\ENQarg_0\NUL\ETX\DC2\SOH\n\
    \case_Fixed\NUL\NUL!\n\
    \case_Never\NUL\NUL\SOH\n\
    \case_Never\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH\SOH"#

-- RHS size: {terms: 18, types: 29, coercions: 0, joins: 0/0}
lvl_s5Y3
  :: ghc-prim-0.6.1:GHC.Prim.State# ghc-prim-0.6.1:GHC.Prim.RealWorld
     -> (# ghc-prim-0.6.1:GHC.Prim.State#
             ghc-prim-0.6.1:GHC.Prim.RealWorld,
           ByteString #)
[LclId]
lvl_s5Y3
  = \ (s_i5N3 [OS=OneShot]
         :: ghc-prim-0.6.1:GHC.Prim.State#
              ghc-prim-0.6.1:GHC.Prim.RealWorld) ->
      case ghc-prim-0.6.1:GHC.Prim.noDuplicate#
             @ ghc-prim-0.6.1:GHC.Prim.RealWorld s_i5N3
      of s'_i5N4
      { __DEFAULT ->
      case ghc-prim-0.6.1:GHC.Prim.newMutVar#
             @ GHC.ForeignPtr.Finalizers
             @ ghc-prim-0.6.1:GHC.Prim.RealWorld
             GHC.ForeignPtr.NoFinalizers
             s'_i5N4
      of ds1_i5Po
      { (# ipv_i5Pp, ipv1_i5Pq #) ->
      (# ipv_i5Pp,
         bytestring-0.10.10.0:Data.ByteString.Internal.PS
           lvl_s5Y2 (GHC.ForeignPtr.PlainForeignPtr ipv1_i5Pq) 0# 539# #)
      }
      }

-- RHS size: {terms: 5, types: 30, coercions: 0, joins: 0/0}
pastEnd_s5WQ :: ByteString
[LclId]
pastEnd_s5WQ
  = case ghc-prim-0.6.1:GHC.Magic.runRW#
           @ ('ghc-prim-0.6.1:GHC.Types.TupleRep
                '[ 'ghc-prim-0.6.1:GHC.Types.TupleRep '[],
                   'ghc-prim-0.6.1:GHC.Types.LiftedRep])
           @ (# ghc-prim-0.6.1:GHC.Prim.State#
                  ghc-prim-0.6.1:GHC.Prim.RealWorld,
                ByteString #)
           lvl_s5Y3
    of ds_i5N5
    { (# ipv_i5N6 [Dmd=<L,A>], ipv1_i5N7 [Dmd=<S,U(U,U,U,U)>] #) ->
    ipv1_i5N7
    }

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl_s5Y4 :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId]
lvl_s5Y4
  = "\r\aEndDate\NUL\\142\SOH\SOH\rEndDate_match\NUL\\148\SOH\\129\ENQFixed\NUL\\144\SOH2\SOH\aEndDate\NUL\\142\SOH\\129\ENQNever\NUL\\146\SOH\SOH\aEndDate\NUL\\142\SOHq\EOTBool\NUL\STX\SOH\n\
    \Bool_match\NUL\b\\129\EOTTrue\NUL\EOT\SOH\EOTBool\NUL\STX\\129\ENQFalse\NUL\ACK\SOH\EOTBool\NUL\STXQ\DC1lessThanEqInteger\NUL<2\ETX \SOH\EOTBool\NUL\STXa\ETXarg\NUL>\\1441\ETXarg\NUL@\\144;\SOH\SOHb\NULB\\149;\\189\\213A\EOTBool\NUL\STX!\SOHb\NULB!\EOTTrue\NUL\EOT!\ENQFalse\NUL\ACKw\\163\DC1\ETXarg\NUL>!\ETXarg\NUL@\\225\EOTUnit\NUL\SYN\SOH\n\
    \Unit_match\NUL\SUB\\129\EOTUnit\NUL\CAN\SOH\EOTUnit\NUL\SYN\EM\STXds\NUL\\150\SOH\SOH\aEndDate\NUL\\142\SOHa\STXds\NUL\\152\SOH\\144;\\189\\185\SOH\rEndDate_match\NUL\\148\SOH!\STXds\NUL\\150\SOH!\EOTUnit\NUL\SYN\SOH\EOTBool\NUL\STXa\SOHn\NUL\\156\SOH\\1441\ENQthunk\NUL\\158\SOH\SOH\EOTUnit\NUL\SYNw!\DC1lessThanEqInteger\NUL<!\SOHn\NUL\\156\SOH!\STXds\NUL\\152\SOHa\ENQthunk\NUL\\160\SOH\SOH\EOTUnit\NUL\SYN!\ENQFalse\NUL\ACK!\EOTUnit\NUL\CAN\SOH"#

-- RHS size: {terms: 18, types: 29, coercions: 0, joins: 0/0}
lvl_s5Y5
  :: ghc-prim-0.6.1:GHC.Prim.State# ghc-prim-0.6.1:GHC.Prim.RealWorld
     -> (# ghc-prim-0.6.1:GHC.Prim.State#
             ghc-prim-0.6.1:GHC.Prim.RealWorld,
           ByteString #)
[LclId]
lvl_s5Y5
  = \ (s_i5N3 [OS=OneShot]
         :: ghc-prim-0.6.1:GHC.Prim.State#
              ghc-prim-0.6.1:GHC.Prim.RealWorld) ->
      case ghc-prim-0.6.1:GHC.Prim.noDuplicate#
             @ ghc-prim-0.6.1:GHC.Prim.RealWorld s_i5N3
      of s'_i5N4
      { __DEFAULT ->
      case ghc-prim-0.6.1:GHC.Prim.newMutVar#
             @ GHC.ForeignPtr.Finalizers
             @ ghc-prim-0.6.1:GHC.Prim.RealWorld
             GHC.ForeignPtr.NoFinalizers
             s'_i5N4
      of ds1_i5Po
      { (# ipv_i5Pp, ipv1_i5Pq #) ->
      (# ipv_i5Pp,
         bytestring-0.10.10.0:Data.ByteString.Internal.PS
           lvl_s5Y4 (GHC.ForeignPtr.PlainForeignPtr ipv1_i5Pq) 0# 439# #)
      }
      }

-- RHS size: {terms: 5, types: 30, coercions: 0, joins: 0/0}
pastEnd_s5WR :: ByteString
[LclId]
pastEnd_s5WR
  = case ghc-prim-0.6.1:GHC.Magic.runRW#
           @ ('ghc-prim-0.6.1:GHC.Types.TupleRep
                '[ 'ghc-prim-0.6.1:GHC.Types.TupleRep '[],
                   'ghc-prim-0.6.1:GHC.Types.LiftedRep])
           @ (# ghc-prim-0.6.1:GHC.Prim.State#
                  ghc-prim-0.6.1:GHC.Prim.RealWorld,
                ByteString #)
           lvl_s5Y5
    of ds_i5N5
    { (# ipv_i5N6 [Dmd=<L,A>], ipv1_i5N7 [Dmd=<S,U(U,U,U,U)>] #) ->
    ipv1_i5N7
    }

-- RHS size: {terms: 2, types: 1, coercions: 0, joins: 0/0}
pastEnd_s5WS :: Maybe ByteString
[LclId, Str=m2]
pastEnd_s5WS = GHC.Maybe.Just @ ByteString pastEnd_s5WR

-- RHS size: {terms: 3, types: 5, coercions: 0, joins: 0/0}
pastEnd :: CompiledCode (EndDate -> Integer -> Bool)
[LclIdX, Str=m1]
pastEnd
  = Language.PlutusTx.Code.SerializedCode
      @ PLC.DefaultUni
      @ PLC.DefaultFun
      @ (EndDate -> Integer -> Bool)
      pastEnd_s5WQ
      pastEnd_s5WS

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FJ :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId]
$trModule_s5FJ = "example-0.1.0.0-inplace"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FK :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId, Str=m1]
$trModule_s5FK = ghc-prim-0.6.1:GHC.Types.TrNameS $trModule_s5FJ

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FL :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId]
$trModule_s5FL = "Lib"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FM :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId, Str=m1]
$trModule_s5FM = ghc-prim-0.6.1:GHC.Types.TrNameS $trModule_s5FL

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Lib.$trModule :: ghc-prim-0.6.1:GHC.Types.Module
[LclIdX, Str=m]
Lib.$trModule
  = ghc-prim-0.6.1:GHC.Types.Module $trModule_s5FK $trModule_s5FM

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_a5lu [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId, Str=m1]
$krep_a5lu
  = ghc-prim-0.6.1:GHC.Types.KindRepTyConApp
      integer-gmp-1.0.3.0:GHC.Integer.Type.$tcInteger
      (ghc-prim-0.6.1:GHC.Types.[] @ ghc-prim-0.6.1:GHC.Types.KindRep)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tcEndDate_s5FN :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId]
$tcEndDate_s5FN = "EndDate"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tcEndDate_s5FO :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId, Str=m1]
$tcEndDate_s5FO = ghc-prim-0.6.1:GHC.Types.TrNameS $tcEndDate_s5FN

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tcEndDate :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX, Str=m]
Lib.$tcEndDate
  = ghc-prim-0.6.1:GHC.Types.TyCon
      8554338065373400840##
      3482623708274877127##
      Lib.$trModule
      $tcEndDate_s5FO
      0#
      ghc-prim-0.6.1:GHC.Types.krep$*

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_a5lv [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId, Str=m1]
$krep_a5lv
  = ghc-prim-0.6.1:GHC.Types.KindRepTyConApp
      Lib.$tcEndDate
      (ghc-prim-0.6.1:GHC.Types.[] @ ghc-prim-0.6.1:GHC.Types.KindRep)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tc'Never_s5FP :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId]
$tc'Never_s5FP = "'Never"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tc'Never_s5FQ :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId, Str=m1]
$tc'Never_s5FQ = ghc-prim-0.6.1:GHC.Types.TrNameS $tc'Never_s5FP

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Never :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX, Str=m]
Lib.$tc'Never
  = ghc-prim-0.6.1:GHC.Types.TyCon
      10340504404178887934##
      18177538684886749349##
      Lib.$trModule
      $tc'Never_s5FQ
      0#
      $krep_a5lv

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep_a5lt [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId, Str=m4]
$krep_a5lt
  = ghc-prim-0.6.1:GHC.Types.KindRepFun $krep_a5lu $krep_a5lv

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tc'Fixed_s5FR :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId]
$tc'Fixed_s5FR = "'Fixed"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tc'Fixed_s5FS :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId, Str=m1]
$tc'Fixed_s5FS = ghc-prim-0.6.1:GHC.Types.TrNameS $tc'Fixed_s5FR

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Fixed :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX, Str=m]
Lib.$tc'Fixed
  = ghc-prim-0.6.1:GHC.Types.TyCon
      17912921531120851107##
      4815501104477800385##
      Lib.$trModule
      $tc'Fixed_s5FS
      0#
      $krep_a5lt




==================== Float inwards ====================
Result size of Float inwards
  = {terms: 126, types: 173, coercions: 0, joins: 0/0}

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl_s5Y2 :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId]
lvl_s5Y2
  = "\SOH\NUL\NUL35\DC2\SOH\ENQFixed\NUL\NUL!\ENQNever\NUL\NUL!\rEndDate_match\NUL\NUL35\DC2\SOH\EOTTrue\NUL\NUL!\ENQFalse\NUL\NUL!\n\
    \Bool_match\NUL\NUL2\SOH\DC1lessThanEqInteger\NUL\NUL3Q!\EOTUnit\NUL\NUL!\n\
    \Unit_match\NUL\NUL!\STXds\NUL\NUL!\STXds\NUL\NUL350\SOH\rEndDate_match\NUL\t\SOH\STXds\NUL\STX!\SOHn\NUL\NUL!\ENQthunk\NUL\NUL3\SOH\DC1lessThanEqInteger\NUL\a\SOH\SOHn\NUL\STX\SOH\STXds\NUL\ETX!\ENQthunk\NUL\NUL\SOH\ENQFalse\NUL\b\SOH\EOTUnit\NUL\EOT\DC2\SOH\tcase_Unit\NUL\NUL\SOH\tcase_Unit\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH!\ETXarg\NUL\NUL!\ETXarg\NUL\NUL2\SOH\SOHb\NUL\NUL35z\\129\SOHb\NUL\SOH\SOH\EOTTrue\NUL\ACK\SOH\ENQFalse\NUL\ENQ3s\SOH\ETXarg\NUL\STX\SOH\ETXarg\NUL\SOH\DC2\SOH\tcase_True\NUL\NUL!\n\
    \case_False\NUL\NUL\SOH\tcase_True\NUL\STX\DC2\SOH\tcase_True\NUL\NUL!\n\
    \case_False\NUL\NUL\SOH\n\
    \case_False\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH!\ENQarg_0\NUL\NUL\DC2\SOH\n\
    \case_Fixed\NUL\NUL!\n\
    \case_Never\NUL\NUL0\SOH\n\
    \case_Fixed\NUL\STX\SOH\ENQarg_0\NUL\ETX\DC2\SOH\n\
    \case_Fixed\NUL\NUL!\n\
    \case_Never\NUL\NUL\SOH\n\
    \case_Never\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH\SOH"#

-- RHS size: {terms: 18, types: 29, coercions: 0, joins: 0/0}
lvl_s5Y3
  :: ghc-prim-0.6.1:GHC.Prim.State# ghc-prim-0.6.1:GHC.Prim.RealWorld
     -> (# ghc-prim-0.6.1:GHC.Prim.State#
             ghc-prim-0.6.1:GHC.Prim.RealWorld,
           ByteString #)
[LclId]
lvl_s5Y3
  = \ (s_i5N3 [OS=OneShot]
         :: ghc-prim-0.6.1:GHC.Prim.State#
              ghc-prim-0.6.1:GHC.Prim.RealWorld) ->
      case ghc-prim-0.6.1:GHC.Prim.noDuplicate#
             @ ghc-prim-0.6.1:GHC.Prim.RealWorld s_i5N3
      of s'_i5N4
      { __DEFAULT ->
      case ghc-prim-0.6.1:GHC.Prim.newMutVar#
             @ GHC.ForeignPtr.Finalizers
             @ ghc-prim-0.6.1:GHC.Prim.RealWorld
             GHC.ForeignPtr.NoFinalizers
             s'_i5N4
      of ds1_i5Po
      { (# ipv_i5Pp, ipv1_i5Pq #) ->
      (# ipv_i5Pp,
         bytestring-0.10.10.0:Data.ByteString.Internal.PS
           lvl_s5Y2 (GHC.ForeignPtr.PlainForeignPtr ipv1_i5Pq) 0# 539# #)
      }
      }

-- RHS size: {terms: 5, types: 30, coercions: 0, joins: 0/0}
pastEnd_s5WQ :: ByteString
[LclId]
pastEnd_s5WQ
  = case ghc-prim-0.6.1:GHC.Magic.runRW#
           @ ('ghc-prim-0.6.1:GHC.Types.TupleRep
                '[ 'ghc-prim-0.6.1:GHC.Types.TupleRep '[],
                   'ghc-prim-0.6.1:GHC.Types.LiftedRep])
           @ (# ghc-prim-0.6.1:GHC.Prim.State#
                  ghc-prim-0.6.1:GHC.Prim.RealWorld,
                ByteString #)
           lvl_s5Y3
    of ds_i5N5
    { (# ipv_i5N6 [Dmd=<L,A>], ipv1_i5N7 [Dmd=<S,U(U,U,U,U)>] #) ->
    ipv1_i5N7
    }

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl_s5Y4 :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId]
lvl_s5Y4
  = "\r\aEndDate\NUL\\142\SOH\SOH\rEndDate_match\NUL\\148\SOH\\129\ENQFixed\NUL\\144\SOH2\SOH\aEndDate\NUL\\142\SOH\\129\ENQNever\NUL\\146\SOH\SOH\aEndDate\NUL\\142\SOHq\EOTBool\NUL\STX\SOH\n\
    \Bool_match\NUL\b\\129\EOTTrue\NUL\EOT\SOH\EOTBool\NUL\STX\\129\ENQFalse\NUL\ACK\SOH\EOTBool\NUL\STXQ\DC1lessThanEqInteger\NUL<2\ETX \SOH\EOTBool\NUL\STXa\ETXarg\NUL>\\1441\ETXarg\NUL@\\144;\SOH\SOHb\NULB\\149;\\189\\213A\EOTBool\NUL\STX!\SOHb\NULB!\EOTTrue\NUL\EOT!\ENQFalse\NUL\ACKw\\163\DC1\ETXarg\NUL>!\ETXarg\NUL@\\225\EOTUnit\NUL\SYN\SOH\n\
    \Unit_match\NUL\SUB\\129\EOTUnit\NUL\CAN\SOH\EOTUnit\NUL\SYN\EM\STXds\NUL\\150\SOH\SOH\aEndDate\NUL\\142\SOHa\STXds\NUL\\152\SOH\\144;\\189\\185\SOH\rEndDate_match\NUL\\148\SOH!\STXds\NUL\\150\SOH!\EOTUnit\NUL\SYN\SOH\EOTBool\NUL\STXa\SOHn\NUL\\156\SOH\\1441\ENQthunk\NUL\\158\SOH\SOH\EOTUnit\NUL\SYNw!\DC1lessThanEqInteger\NUL<!\SOHn\NUL\\156\SOH!\STXds\NUL\\152\SOHa\ENQthunk\NUL\\160\SOH\SOH\EOTUnit\NUL\SYN!\ENQFalse\NUL\ACK!\EOTUnit\NUL\CAN\SOH"#

-- RHS size: {terms: 18, types: 29, coercions: 0, joins: 0/0}
lvl_s5Y5
  :: ghc-prim-0.6.1:GHC.Prim.State# ghc-prim-0.6.1:GHC.Prim.RealWorld
     -> (# ghc-prim-0.6.1:GHC.Prim.State#
             ghc-prim-0.6.1:GHC.Prim.RealWorld,
           ByteString #)
[LclId]
lvl_s5Y5
  = \ (s_i5N3 [OS=OneShot]
         :: ghc-prim-0.6.1:GHC.Prim.State#
              ghc-prim-0.6.1:GHC.Prim.RealWorld) ->
      case ghc-prim-0.6.1:GHC.Prim.noDuplicate#
             @ ghc-prim-0.6.1:GHC.Prim.RealWorld s_i5N3
      of s'_i5N4
      { __DEFAULT ->
      case ghc-prim-0.6.1:GHC.Prim.newMutVar#
             @ GHC.ForeignPtr.Finalizers
             @ ghc-prim-0.6.1:GHC.Prim.RealWorld
             GHC.ForeignPtr.NoFinalizers
             s'_i5N4
      of ds1_i5Po
      { (# ipv_i5Pp, ipv1_i5Pq #) ->
      (# ipv_i5Pp,
         bytestring-0.10.10.0:Data.ByteString.Internal.PS
           lvl_s5Y4 (GHC.ForeignPtr.PlainForeignPtr ipv1_i5Pq) 0# 439# #)
      }
      }

-- RHS size: {terms: 5, types: 30, coercions: 0, joins: 0/0}
pastEnd_s5WR :: ByteString
[LclId]
pastEnd_s5WR
  = case ghc-prim-0.6.1:GHC.Magic.runRW#
           @ ('ghc-prim-0.6.1:GHC.Types.TupleRep
                '[ 'ghc-prim-0.6.1:GHC.Types.TupleRep '[],
                   'ghc-prim-0.6.1:GHC.Types.LiftedRep])
           @ (# ghc-prim-0.6.1:GHC.Prim.State#
                  ghc-prim-0.6.1:GHC.Prim.RealWorld,
                ByteString #)
           lvl_s5Y5
    of ds_i5N5
    { (# ipv_i5N6 [Dmd=<L,A>], ipv1_i5N7 [Dmd=<S,U(U,U,U,U)>] #) ->
    ipv1_i5N7
    }

-- RHS size: {terms: 2, types: 1, coercions: 0, joins: 0/0}
pastEnd_s5WS :: Maybe ByteString
[LclId, Str=m2]
pastEnd_s5WS = GHC.Maybe.Just @ ByteString pastEnd_s5WR

-- RHS size: {terms: 3, types: 5, coercions: 0, joins: 0/0}
pastEnd :: CompiledCode (EndDate -> Integer -> Bool)
[LclIdX, Str=m1]
pastEnd
  = Language.PlutusTx.Code.SerializedCode
      @ PLC.DefaultUni
      @ PLC.DefaultFun
      @ (EndDate -> Integer -> Bool)
      pastEnd_s5WQ
      pastEnd_s5WS

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FJ :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId]
$trModule_s5FJ = "example-0.1.0.0-inplace"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FK :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId, Str=m1]
$trModule_s5FK = ghc-prim-0.6.1:GHC.Types.TrNameS $trModule_s5FJ

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FL :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId]
$trModule_s5FL = "Lib"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FM :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId, Str=m1]
$trModule_s5FM = ghc-prim-0.6.1:GHC.Types.TrNameS $trModule_s5FL

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Lib.$trModule :: ghc-prim-0.6.1:GHC.Types.Module
[LclIdX, Str=m]
Lib.$trModule
  = ghc-prim-0.6.1:GHC.Types.Module $trModule_s5FK $trModule_s5FM

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_a5lu [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId, Str=m1]
$krep_a5lu
  = ghc-prim-0.6.1:GHC.Types.KindRepTyConApp
      integer-gmp-1.0.3.0:GHC.Integer.Type.$tcInteger
      (ghc-prim-0.6.1:GHC.Types.[] @ ghc-prim-0.6.1:GHC.Types.KindRep)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tcEndDate_s5FN :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId]
$tcEndDate_s5FN = "EndDate"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tcEndDate_s5FO :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId, Str=m1]
$tcEndDate_s5FO = ghc-prim-0.6.1:GHC.Types.TrNameS $tcEndDate_s5FN

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tcEndDate :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX, Str=m]
Lib.$tcEndDate
  = ghc-prim-0.6.1:GHC.Types.TyCon
      8554338065373400840##
      3482623708274877127##
      Lib.$trModule
      $tcEndDate_s5FO
      0#
      ghc-prim-0.6.1:GHC.Types.krep$*

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_a5lv [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId, Str=m1]
$krep_a5lv
  = ghc-prim-0.6.1:GHC.Types.KindRepTyConApp
      Lib.$tcEndDate
      (ghc-prim-0.6.1:GHC.Types.[] @ ghc-prim-0.6.1:GHC.Types.KindRep)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tc'Never_s5FP :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId]
$tc'Never_s5FP = "'Never"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tc'Never_s5FQ :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId, Str=m1]
$tc'Never_s5FQ = ghc-prim-0.6.1:GHC.Types.TrNameS $tc'Never_s5FP

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Never :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX, Str=m]
Lib.$tc'Never
  = ghc-prim-0.6.1:GHC.Types.TyCon
      10340504404178887934##
      18177538684886749349##
      Lib.$trModule
      $tc'Never_s5FQ
      0#
      $krep_a5lv

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep_a5lt [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId, Str=m4]
$krep_a5lt
  = ghc-prim-0.6.1:GHC.Types.KindRepFun $krep_a5lu $krep_a5lv

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tc'Fixed_s5FR :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId]
$tc'Fixed_s5FR = "'Fixed"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tc'Fixed_s5FS :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId, Str=m1]
$tc'Fixed_s5FS = ghc-prim-0.6.1:GHC.Types.TrNameS $tc'Fixed_s5FR

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Fixed :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX, Str=m]
Lib.$tc'Fixed
  = ghc-prim-0.6.1:GHC.Types.TyCon
      17912921531120851107##
      4815501104477800385##
      Lib.$trModule
      $tc'Fixed_s5FS
      0#
      $krep_a5lt




==================== Simplifier statistics for following pass ====================
Simplifier reached fixed point after 1 iterations

Total ticks:     0

1 SimplifierDone 1



==================== Simplifier ====================
  Max iterations = 4
  SimplMode {Phase = 0 [final],
             inline,
             rules,
             eta-expand,
             case-of-case}
Result size of Simplifier
  = {terms: 126, types: 173, coercions: 0, joins: 0/0}

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl_s5Y2 :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 1360 0}]
lvl_s5Y2
  = "\SOH\NUL\NUL35\DC2\SOH\ENQFixed\NUL\NUL!\ENQNever\NUL\NUL!\rEndDate_match\NUL\NUL35\DC2\SOH\EOTTrue\NUL\NUL!\ENQFalse\NUL\NUL!\n\
    \Bool_match\NUL\NUL2\SOH\DC1lessThanEqInteger\NUL\NUL3Q!\EOTUnit\NUL\NUL!\n\
    \Unit_match\NUL\NUL!\STXds\NUL\NUL!\STXds\NUL\NUL350\SOH\rEndDate_match\NUL\t\SOH\STXds\NUL\STX!\SOHn\NUL\NUL!\ENQthunk\NUL\NUL3\SOH\DC1lessThanEqInteger\NUL\a\SOH\SOHn\NUL\STX\SOH\STXds\NUL\ETX!\ENQthunk\NUL\NUL\SOH\ENQFalse\NUL\b\SOH\EOTUnit\NUL\EOT\DC2\SOH\tcase_Unit\NUL\NUL\SOH\tcase_Unit\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH!\ETXarg\NUL\NUL!\ETXarg\NUL\NUL2\SOH\SOHb\NUL\NUL35z\\129\SOHb\NUL\SOH\SOH\EOTTrue\NUL\ACK\SOH\ENQFalse\NUL\ENQ3s\SOH\ETXarg\NUL\STX\SOH\ETXarg\NUL\SOH\DC2\SOH\tcase_True\NUL\NUL!\n\
    \case_False\NUL\NUL\SOH\tcase_True\NUL\STX\DC2\SOH\tcase_True\NUL\NUL!\n\
    \case_False\NUL\NUL\SOH\n\
    \case_False\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH!\ENQarg_0\NUL\NUL\DC2\SOH\n\
    \case_Fixed\NUL\NUL!\n\
    \case_Never\NUL\NUL0\SOH\n\
    \case_Fixed\NUL\STX\SOH\ENQarg_0\NUL\ETX\DC2\SOH\n\
    \case_Fixed\NUL\NUL!\n\
    \case_Never\NUL\NUL\SOH\n\
    \case_Never\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH\SOH"#

-- RHS size: {terms: 18, types: 29, coercions: 0, joins: 0/0}
lvl_s5Y3
  :: ghc-prim-0.6.1:GHC.Prim.State# ghc-prim-0.6.1:GHC.Prim.RealWorld
     -> (# ghc-prim-0.6.1:GHC.Prim.State#
             ghc-prim-0.6.1:GHC.Prim.RealWorld,
           ByteString #)
[LclId,
 Arity=1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0] 45 30}]
lvl_s5Y3
  = \ (s_i5N3 [OS=OneShot]
         :: ghc-prim-0.6.1:GHC.Prim.State#
              ghc-prim-0.6.1:GHC.Prim.RealWorld) ->
      case ghc-prim-0.6.1:GHC.Prim.noDuplicate#
             @ ghc-prim-0.6.1:GHC.Prim.RealWorld s_i5N3
      of s'_i5N4
      { __DEFAULT ->
      case ghc-prim-0.6.1:GHC.Prim.newMutVar#
             @ GHC.ForeignPtr.Finalizers
             @ ghc-prim-0.6.1:GHC.Prim.RealWorld
             GHC.ForeignPtr.NoFinalizers
             s'_i5N4
      of
      { (# ipv_i5Pp, ipv1_i5Pq #) ->
      (# ipv_i5Pp,
         bytestring-0.10.10.0:Data.ByteString.Internal.PS
           lvl_s5Y2 (GHC.ForeignPtr.PlainForeignPtr ipv1_i5Pq) 0# 539# #)
      }
      }

-- RHS size: {terms: 5, types: 30, coercions: 0, joins: 0/0}
pastEnd_s5WQ :: ByteString
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 30 0}]
pastEnd_s5WQ
  = case ghc-prim-0.6.1:GHC.Magic.runRW#
           @ ('ghc-prim-0.6.1:GHC.Types.TupleRep
                '[ 'ghc-prim-0.6.1:GHC.Types.TupleRep '[],
                   'ghc-prim-0.6.1:GHC.Types.LiftedRep])
           @ (# ghc-prim-0.6.1:GHC.Prim.State#
                  ghc-prim-0.6.1:GHC.Prim.RealWorld,
                ByteString #)
           lvl_s5Y3
    of
    { (# ipv_i5N6 [Dmd=<L,A>], ipv1_i5N7 [Dmd=<S,U(U,U,U,U)>] #) ->
    ipv1_i5N7
    }

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl_s5Y4 :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 1110 0}]
lvl_s5Y4
  = "\r\aEndDate\NUL\\142\SOH\SOH\rEndDate_match\NUL\\148\SOH\\129\ENQFixed\NUL\\144\SOH2\SOH\aEndDate\NUL\\142\SOH\\129\ENQNever\NUL\\146\SOH\SOH\aEndDate\NUL\\142\SOHq\EOTBool\NUL\STX\SOH\n\
    \Bool_match\NUL\b\\129\EOTTrue\NUL\EOT\SOH\EOTBool\NUL\STX\\129\ENQFalse\NUL\ACK\SOH\EOTBool\NUL\STXQ\DC1lessThanEqInteger\NUL<2\ETX \SOH\EOTBool\NUL\STXa\ETXarg\NUL>\\1441\ETXarg\NUL@\\144;\SOH\SOHb\NULB\\149;\\189\\213A\EOTBool\NUL\STX!\SOHb\NULB!\EOTTrue\NUL\EOT!\ENQFalse\NUL\ACKw\\163\DC1\ETXarg\NUL>!\ETXarg\NUL@\\225\EOTUnit\NUL\SYN\SOH\n\
    \Unit_match\NUL\SUB\\129\EOTUnit\NUL\CAN\SOH\EOTUnit\NUL\SYN\EM\STXds\NUL\\150\SOH\SOH\aEndDate\NUL\\142\SOHa\STXds\NUL\\152\SOH\\144;\\189\\185\SOH\rEndDate_match\NUL\\148\SOH!\STXds\NUL\\150\SOH!\EOTUnit\NUL\SYN\SOH\EOTBool\NUL\STXa\SOHn\NUL\\156\SOH\\1441\ENQthunk\NUL\\158\SOH\SOH\EOTUnit\NUL\SYNw!\DC1lessThanEqInteger\NUL<!\SOHn\NUL\\156\SOH!\STXds\NUL\\152\SOHa\ENQthunk\NUL\\160\SOH\SOH\EOTUnit\NUL\SYN!\ENQFalse\NUL\ACK!\EOTUnit\NUL\CAN\SOH"#

-- RHS size: {terms: 18, types: 29, coercions: 0, joins: 0/0}
lvl_s5Y5
  :: ghc-prim-0.6.1:GHC.Prim.State# ghc-prim-0.6.1:GHC.Prim.RealWorld
     -> (# ghc-prim-0.6.1:GHC.Prim.State#
             ghc-prim-0.6.1:GHC.Prim.RealWorld,
           ByteString #)
[LclId,
 Arity=1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0] 45 30}]
lvl_s5Y5
  = \ (s_i5N3 [OS=OneShot]
         :: ghc-prim-0.6.1:GHC.Prim.State#
              ghc-prim-0.6.1:GHC.Prim.RealWorld) ->
      case ghc-prim-0.6.1:GHC.Prim.noDuplicate#
             @ ghc-prim-0.6.1:GHC.Prim.RealWorld s_i5N3
      of s'_i5N4
      { __DEFAULT ->
      case ghc-prim-0.6.1:GHC.Prim.newMutVar#
             @ GHC.ForeignPtr.Finalizers
             @ ghc-prim-0.6.1:GHC.Prim.RealWorld
             GHC.ForeignPtr.NoFinalizers
             s'_i5N4
      of
      { (# ipv_i5Pp, ipv1_i5Pq #) ->
      (# ipv_i5Pp,
         bytestring-0.10.10.0:Data.ByteString.Internal.PS
           lvl_s5Y4 (GHC.ForeignPtr.PlainForeignPtr ipv1_i5Pq) 0# 439# #)
      }
      }

-- RHS size: {terms: 5, types: 30, coercions: 0, joins: 0/0}
pastEnd_s5WR :: ByteString
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 30 0}]
pastEnd_s5WR
  = case ghc-prim-0.6.1:GHC.Magic.runRW#
           @ ('ghc-prim-0.6.1:GHC.Types.TupleRep
                '[ 'ghc-prim-0.6.1:GHC.Types.TupleRep '[],
                   'ghc-prim-0.6.1:GHC.Types.LiftedRep])
           @ (# ghc-prim-0.6.1:GHC.Prim.State#
                  ghc-prim-0.6.1:GHC.Prim.RealWorld,
                ByteString #)
           lvl_s5Y5
    of
    { (# ipv_i5N6 [Dmd=<L,A>], ipv1_i5N7 [Dmd=<S,U(U,U,U,U)>] #) ->
    ipv1_i5N7
    }

-- RHS size: {terms: 2, types: 1, coercions: 0, joins: 0/0}
pastEnd_s5WS :: Maybe ByteString
[LclId,
 Str=m2,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
pastEnd_s5WS = GHC.Maybe.Just @ ByteString pastEnd_s5WR

-- RHS size: {terms: 3, types: 5, coercions: 0, joins: 0/0}
pastEnd :: CompiledCode (EndDate -> Integer -> Bool)
[LclIdX,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
pastEnd
  = Language.PlutusTx.Code.SerializedCode
      @ PLC.DefaultUni
      @ PLC.DefaultFun
      @ (EndDate -> Integer -> Bool)
      pastEnd_s5WQ
      pastEnd_s5WS

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FJ :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 70 0}]
$trModule_s5FJ = "example-0.1.0.0-inplace"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FK :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$trModule_s5FK = ghc-prim-0.6.1:GHC.Types.TrNameS $trModule_s5FJ

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FL :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
$trModule_s5FL = "Lib"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FM :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$trModule_s5FM = ghc-prim-0.6.1:GHC.Types.TrNameS $trModule_s5FL

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Lib.$trModule :: ghc-prim-0.6.1:GHC.Types.Module
[LclIdX,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
Lib.$trModule
  = ghc-prim-0.6.1:GHC.Types.Module $trModule_s5FK $trModule_s5FM

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_a5lu [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
$krep_a5lu
  = ghc-prim-0.6.1:GHC.Types.KindRepTyConApp
      integer-gmp-1.0.3.0:GHC.Integer.Type.$tcInteger
      (ghc-prim-0.6.1:GHC.Types.[] @ ghc-prim-0.6.1:GHC.Types.KindRep)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tcEndDate_s5FN :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
$tcEndDate_s5FN = "EndDate"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tcEndDate_s5FO :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$tcEndDate_s5FO = ghc-prim-0.6.1:GHC.Types.TrNameS $tcEndDate_s5FN

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tcEndDate :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Lib.$tcEndDate
  = ghc-prim-0.6.1:GHC.Types.TyCon
      8554338065373400840##
      3482623708274877127##
      Lib.$trModule
      $tcEndDate_s5FO
      0#
      ghc-prim-0.6.1:GHC.Types.krep$*

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_a5lv [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
$krep_a5lv
  = ghc-prim-0.6.1:GHC.Types.KindRepTyConApp
      Lib.$tcEndDate
      (ghc-prim-0.6.1:GHC.Types.[] @ ghc-prim-0.6.1:GHC.Types.KindRep)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tc'Never_s5FP :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
$tc'Never_s5FP = "'Never"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tc'Never_s5FQ :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$tc'Never_s5FQ = ghc-prim-0.6.1:GHC.Types.TrNameS $tc'Never_s5FP

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Never :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Lib.$tc'Never
  = ghc-prim-0.6.1:GHC.Types.TyCon
      10340504404178887934##
      18177538684886749349##
      Lib.$trModule
      $tc'Never_s5FQ
      0#
      $krep_a5lv

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep_a5lt [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId,
 Str=m4,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
$krep_a5lt
  = ghc-prim-0.6.1:GHC.Types.KindRepFun $krep_a5lu $krep_a5lv

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tc'Fixed_s5FR :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
$tc'Fixed_s5FR = "'Fixed"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tc'Fixed_s5FS :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$tc'Fixed_s5FS = ghc-prim-0.6.1:GHC.Types.TrNameS $tc'Fixed_s5FR

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Fixed :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Lib.$tc'Fixed
  = ghc-prim-0.6.1:GHC.Types.TyCon
      17912921531120851107##
      4815501104477800385##
      Lib.$trModule
      $tc'Fixed_s5FS
      0#
      $krep_a5lt




==================== Demand analysis ====================
Result size of Demand analysis
  = {terms: 126, types: 173, coercions: 0, joins: 0/0}

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl_s5Y2 :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 1360 0}]
lvl_s5Y2
  = "\SOH\NUL\NUL35\DC2\SOH\ENQFixed\NUL\NUL!\ENQNever\NUL\NUL!\rEndDate_match\NUL\NUL35\DC2\SOH\EOTTrue\NUL\NUL!\ENQFalse\NUL\NUL!\n\
    \Bool_match\NUL\NUL2\SOH\DC1lessThanEqInteger\NUL\NUL3Q!\EOTUnit\NUL\NUL!\n\
    \Unit_match\NUL\NUL!\STXds\NUL\NUL!\STXds\NUL\NUL350\SOH\rEndDate_match\NUL\t\SOH\STXds\NUL\STX!\SOHn\NUL\NUL!\ENQthunk\NUL\NUL3\SOH\DC1lessThanEqInteger\NUL\a\SOH\SOHn\NUL\STX\SOH\STXds\NUL\ETX!\ENQthunk\NUL\NUL\SOH\ENQFalse\NUL\b\SOH\EOTUnit\NUL\EOT\DC2\SOH\tcase_Unit\NUL\NUL\SOH\tcase_Unit\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH!\ETXarg\NUL\NUL!\ETXarg\NUL\NUL2\SOH\SOHb\NUL\NUL35z\\129\SOHb\NUL\SOH\SOH\EOTTrue\NUL\ACK\SOH\ENQFalse\NUL\ENQ3s\SOH\ETXarg\NUL\STX\SOH\ETXarg\NUL\SOH\DC2\SOH\tcase_True\NUL\NUL!\n\
    \case_False\NUL\NUL\SOH\tcase_True\NUL\STX\DC2\SOH\tcase_True\NUL\NUL!\n\
    \case_False\NUL\NUL\SOH\n\
    \case_False\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH!\ENQarg_0\NUL\NUL\DC2\SOH\n\
    \case_Fixed\NUL\NUL!\n\
    \case_Never\NUL\NUL0\SOH\n\
    \case_Fixed\NUL\STX\SOH\ENQarg_0\NUL\ETX\DC2\SOH\n\
    \case_Fixed\NUL\NUL!\n\
    \case_Never\NUL\NUL\SOH\n\
    \case_Never\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH\SOH"#

-- RHS size: {terms: 18, types: 29, coercions: 0, joins: 0/0}
lvl_s5Y3
  :: ghc-prim-0.6.1:GHC.Prim.State# ghc-prim-0.6.1:GHC.Prim.RealWorld
     -> (# ghc-prim-0.6.1:GHC.Prim.State#
             ghc-prim-0.6.1:GHC.Prim.RealWorld,
           ByteString #)
[LclId,
 Arity=1,
 Str=<L,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0] 45 30}]
lvl_s5Y3
  = \ (s_i5N3 [OS=OneShot]
         :: ghc-prim-0.6.1:GHC.Prim.State#
              ghc-prim-0.6.1:GHC.Prim.RealWorld) ->
      case ghc-prim-0.6.1:GHC.Prim.noDuplicate#
             @ ghc-prim-0.6.1:GHC.Prim.RealWorld s_i5N3
      of s'_i5N4
      { __DEFAULT ->
      case ghc-prim-0.6.1:GHC.Prim.newMutVar#
             @ GHC.ForeignPtr.Finalizers
             @ ghc-prim-0.6.1:GHC.Prim.RealWorld
             GHC.ForeignPtr.NoFinalizers
             s'_i5N4
      of
      { (# ipv_i5Pp, ipv1_i5Pq #) ->
      (# ipv_i5Pp,
         bytestring-0.10.10.0:Data.ByteString.Internal.PS
           lvl_s5Y2 (GHC.ForeignPtr.PlainForeignPtr ipv1_i5Pq) 0# 539# #)
      }
      }

-- RHS size: {terms: 5, types: 30, coercions: 0, joins: 0/0}
pastEnd_s5WQ :: ByteString
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 30 0}]
pastEnd_s5WQ
  = case ghc-prim-0.6.1:GHC.Magic.runRW#
           @ ('ghc-prim-0.6.1:GHC.Types.TupleRep
                '[ 'ghc-prim-0.6.1:GHC.Types.TupleRep '[],
                   'ghc-prim-0.6.1:GHC.Types.LiftedRep])
           @ (# ghc-prim-0.6.1:GHC.Prim.State#
                  ghc-prim-0.6.1:GHC.Prim.RealWorld,
                ByteString #)
           lvl_s5Y3
    of
    { (# ipv_i5N6 [Dmd=<L,A>], ipv1_i5N7 [Dmd=<S,1*U(U,U,U,U)>] #) ->
    ipv1_i5N7
    }

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl_s5Y4 :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 1110 0}]
lvl_s5Y4
  = "\r\aEndDate\NUL\\142\SOH\SOH\rEndDate_match\NUL\\148\SOH\\129\ENQFixed\NUL\\144\SOH2\SOH\aEndDate\NUL\\142\SOH\\129\ENQNever\NUL\\146\SOH\SOH\aEndDate\NUL\\142\SOHq\EOTBool\NUL\STX\SOH\n\
    \Bool_match\NUL\b\\129\EOTTrue\NUL\EOT\SOH\EOTBool\NUL\STX\\129\ENQFalse\NUL\ACK\SOH\EOTBool\NUL\STXQ\DC1lessThanEqInteger\NUL<2\ETX \SOH\EOTBool\NUL\STXa\ETXarg\NUL>\\1441\ETXarg\NUL@\\144;\SOH\SOHb\NULB\\149;\\189\\213A\EOTBool\NUL\STX!\SOHb\NULB!\EOTTrue\NUL\EOT!\ENQFalse\NUL\ACKw\\163\DC1\ETXarg\NUL>!\ETXarg\NUL@\\225\EOTUnit\NUL\SYN\SOH\n\
    \Unit_match\NUL\SUB\\129\EOTUnit\NUL\CAN\SOH\EOTUnit\NUL\SYN\EM\STXds\NUL\\150\SOH\SOH\aEndDate\NUL\\142\SOHa\STXds\NUL\\152\SOH\\144;\\189\\185\SOH\rEndDate_match\NUL\\148\SOH!\STXds\NUL\\150\SOH!\EOTUnit\NUL\SYN\SOH\EOTBool\NUL\STXa\SOHn\NUL\\156\SOH\\1441\ENQthunk\NUL\\158\SOH\SOH\EOTUnit\NUL\SYNw!\DC1lessThanEqInteger\NUL<!\SOHn\NUL\\156\SOH!\STXds\NUL\\152\SOHa\ENQthunk\NUL\\160\SOH\SOH\EOTUnit\NUL\SYN!\ENQFalse\NUL\ACK!\EOTUnit\NUL\CAN\SOH"#

-- RHS size: {terms: 18, types: 29, coercions: 0, joins: 0/0}
lvl_s5Y5
  :: ghc-prim-0.6.1:GHC.Prim.State# ghc-prim-0.6.1:GHC.Prim.RealWorld
     -> (# ghc-prim-0.6.1:GHC.Prim.State#
             ghc-prim-0.6.1:GHC.Prim.RealWorld,
           ByteString #)
[LclId,
 Arity=1,
 Str=<L,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0] 45 30}]
lvl_s5Y5
  = \ (s_i5N3 [OS=OneShot]
         :: ghc-prim-0.6.1:GHC.Prim.State#
              ghc-prim-0.6.1:GHC.Prim.RealWorld) ->
      case ghc-prim-0.6.1:GHC.Prim.noDuplicate#
             @ ghc-prim-0.6.1:GHC.Prim.RealWorld s_i5N3
      of s'_i5N4
      { __DEFAULT ->
      case ghc-prim-0.6.1:GHC.Prim.newMutVar#
             @ GHC.ForeignPtr.Finalizers
             @ ghc-prim-0.6.1:GHC.Prim.RealWorld
             GHC.ForeignPtr.NoFinalizers
             s'_i5N4
      of
      { (# ipv_i5Pp, ipv1_i5Pq #) ->
      (# ipv_i5Pp,
         bytestring-0.10.10.0:Data.ByteString.Internal.PS
           lvl_s5Y4 (GHC.ForeignPtr.PlainForeignPtr ipv1_i5Pq) 0# 439# #)
      }
      }

-- RHS size: {terms: 5, types: 30, coercions: 0, joins: 0/0}
pastEnd_s5WR :: ByteString
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 30 0}]
pastEnd_s5WR
  = case ghc-prim-0.6.1:GHC.Magic.runRW#
           @ ('ghc-prim-0.6.1:GHC.Types.TupleRep
                '[ 'ghc-prim-0.6.1:GHC.Types.TupleRep '[],
                   'ghc-prim-0.6.1:GHC.Types.LiftedRep])
           @ (# ghc-prim-0.6.1:GHC.Prim.State#
                  ghc-prim-0.6.1:GHC.Prim.RealWorld,
                ByteString #)
           lvl_s5Y5
    of
    { (# ipv_i5N6 [Dmd=<L,A>], ipv1_i5N7 [Dmd=<S,1*U(U,U,U,U)>] #) ->
    ipv1_i5N7
    }

-- RHS size: {terms: 2, types: 1, coercions: 0, joins: 0/0}
pastEnd_s5WS :: Maybe ByteString
[LclId,
 Str=m2,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
pastEnd_s5WS = GHC.Maybe.Just @ ByteString pastEnd_s5WR

-- RHS size: {terms: 3, types: 5, coercions: 0, joins: 0/0}
pastEnd :: CompiledCode (EndDate -> Integer -> Bool)
[LclIdX,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
pastEnd
  = Language.PlutusTx.Code.SerializedCode
      @ PLC.DefaultUni
      @ PLC.DefaultFun
      @ (EndDate -> Integer -> Bool)
      pastEnd_s5WQ
      pastEnd_s5WS

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FJ :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 70 0}]
$trModule_s5FJ = "example-0.1.0.0-inplace"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FK :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$trModule_s5FK = ghc-prim-0.6.1:GHC.Types.TrNameS $trModule_s5FJ

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FL :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
$trModule_s5FL = "Lib"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$trModule_s5FM :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$trModule_s5FM = ghc-prim-0.6.1:GHC.Types.TrNameS $trModule_s5FL

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Lib.$trModule :: ghc-prim-0.6.1:GHC.Types.Module
[LclIdX,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
Lib.$trModule
  = ghc-prim-0.6.1:GHC.Types.Module $trModule_s5FK $trModule_s5FM

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_a5lu [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
$krep_a5lu
  = ghc-prim-0.6.1:GHC.Types.KindRepTyConApp
      integer-gmp-1.0.3.0:GHC.Integer.Type.$tcInteger
      (ghc-prim-0.6.1:GHC.Types.[] @ ghc-prim-0.6.1:GHC.Types.KindRep)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tcEndDate_s5FN :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
$tcEndDate_s5FN = "EndDate"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tcEndDate_s5FO :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$tcEndDate_s5FO = ghc-prim-0.6.1:GHC.Types.TrNameS $tcEndDate_s5FN

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tcEndDate :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Lib.$tcEndDate
  = ghc-prim-0.6.1:GHC.Types.TyCon
      8554338065373400840##
      3482623708274877127##
      Lib.$trModule
      $tcEndDate_s5FO
      0#
      ghc-prim-0.6.1:GHC.Types.krep$*

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_a5lv [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
$krep_a5lv
  = ghc-prim-0.6.1:GHC.Types.KindRepTyConApp
      Lib.$tcEndDate
      (ghc-prim-0.6.1:GHC.Types.[] @ ghc-prim-0.6.1:GHC.Types.KindRep)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tc'Never_s5FP :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
$tc'Never_s5FP = "'Never"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tc'Never_s5FQ :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$tc'Never_s5FQ = ghc-prim-0.6.1:GHC.Types.TrNameS $tc'Never_s5FP

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Never :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Lib.$tc'Never
  = ghc-prim-0.6.1:GHC.Types.TyCon
      10340504404178887934##
      18177538684886749349##
      Lib.$trModule
      $tc'Never_s5FQ
      0#
      $krep_a5lv

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep_a5lt [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[LclId,
 Str=m4,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
$krep_a5lt
  = ghc-prim-0.6.1:GHC.Types.KindRepFun $krep_a5lu $krep_a5lv

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$tc'Fixed_s5FR :: ghc-prim-0.6.1:GHC.Prim.Addr#
[LclId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
$tc'Fixed_s5FR = "'Fixed"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$tc'Fixed_s5FS :: ghc-prim-0.6.1:GHC.Types.TrName
[LclId,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
$tc'Fixed_s5FS = ghc-prim-0.6.1:GHC.Types.TrNameS $tc'Fixed_s5FR

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Fixed :: ghc-prim-0.6.1:GHC.Types.TyCon
[LclIdX,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Lib.$tc'Fixed
  = ghc-prim-0.6.1:GHC.Types.TyCon
      17912921531120851107##
      4815501104477800385##
      Lib.$trModule
      $tc'Fixed_s5FS
      0#
      $krep_a5lt




==================== Grand total simplifier statistics ====================
Total ticks:     69

26 PreInlineUnconditionally
  2 dt_a5Vp
  2 dt_a5Vq
  2 dt_a5Vr
  2 dt_a5Vu
  2 m_i5MV
  2 len_i5Nb
  2 addr#_i5Nc
  2 s_i5Nd
  1 plcBS_a5MS
  1 pirBS_a5MT
  1 lvl_s5X0
  1 lvl_s5X1
  1 lvl_s5X2
  1 lvl_s5X3
  1 lvl_s5X4
  1 lvl_s5X5
  1 lvl_s5X6
  1 lvl_s5X7
6 PostInlineUnconditionally
  2 dt_a5Vv
  2 dt_a5Vw
  2 dt_a5Vx
7 UnfoldingDone
  2 Data.ByteString.Internal.$WPS
  2 GHC.IO.Unsafe.unsafePerformIO
  2 Data.ByteString.Unsafe.unsafePackAddressLen
  1 Language.PlutusTx.Plugin.mkCompiledCode
5 LetFloatFromLet 5
19 BetaReduction
  2 dt_a5Vp
  2 dt_a5Vq
  2 dt_a5Vr
  2 a_i5MU
  2 m_i5MV
  2 len_i5Nb
  2 addr#_i5Nc
  2 s_i5Nd
  1 a_a5MR
  1 plcBS_a5MS
  1 pirBS_a5MT
6 KnownBranch
  2 dt_X5Vt
  2 dt_X5Vx
  2 dt_X5VA
12 SimplifierDone 12



==================== Tidy Core ====================
Result size of Tidy Core
  = {terms: 126, types: 173, coercions: 0, joins: 0/0}

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Lib.pastEnd7 :: ghc-prim-0.6.1:GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 1360 0}]
Lib.pastEnd7
  = "\SOH\NUL\NUL35\DC2\SOH\ENQFixed\NUL\NUL!\ENQNever\NUL\NUL!\rEndDate_match\NUL\NUL35\DC2\SOH\EOTTrue\NUL\NUL!\ENQFalse\NUL\NUL!\n\
    \Bool_match\NUL\NUL2\SOH\DC1lessThanEqInteger\NUL\NUL3Q!\EOTUnit\NUL\NUL!\n\
    \Unit_match\NUL\NUL!\STXds\NUL\NUL!\STXds\NUL\NUL350\SOH\rEndDate_match\NUL\t\SOH\STXds\NUL\STX!\SOHn\NUL\NUL!\ENQthunk\NUL\NUL3\SOH\DC1lessThanEqInteger\NUL\a\SOH\SOHn\NUL\STX\SOH\STXds\NUL\ETX!\ENQthunk\NUL\NUL\SOH\ENQFalse\NUL\b\SOH\EOTUnit\NUL\EOT\DC2\SOH\tcase_Unit\NUL\NUL\SOH\tcase_Unit\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH!\ETXarg\NUL\NUL!\ETXarg\NUL\NUL2\SOH\SOHb\NUL\NUL35z\\129\SOHb\NUL\SOH\SOH\EOTTrue\NUL\ACK\SOH\ENQFalse\NUL\ENQ3s\SOH\ETXarg\NUL\STX\SOH\ETXarg\NUL\SOH\DC2\SOH\tcase_True\NUL\NUL!\n\
    \case_False\NUL\NUL\SOH\tcase_True\NUL\STX\DC2\SOH\tcase_True\NUL\NUL!\n\
    \case_False\NUL\NUL\SOH\n\
    \case_False\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH!\ENQarg_0\NUL\NUL\DC2\SOH\n\
    \case_Fixed\NUL\NUL!\n\
    \case_Never\NUL\NUL0\SOH\n\
    \case_Fixed\NUL\STX\SOH\ENQarg_0\NUL\ETX\DC2\SOH\n\
    \case_Fixed\NUL\NUL!\n\
    \case_Never\NUL\NUL\SOH\n\
    \case_Never\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH\SOH"#

-- RHS size: {terms: 18, types: 29, coercions: 0, joins: 0/0}
Lib.pastEnd6
  :: ghc-prim-0.6.1:GHC.Prim.State# ghc-prim-0.6.1:GHC.Prim.RealWorld
     -> (# ghc-prim-0.6.1:GHC.Prim.State#
             ghc-prim-0.6.1:GHC.Prim.RealWorld,
           ByteString #)
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0] 45 30}]
Lib.pastEnd6
  = \ (s_i5N3 [OS=OneShot]
         :: ghc-prim-0.6.1:GHC.Prim.State#
              ghc-prim-0.6.1:GHC.Prim.RealWorld) ->
      case ghc-prim-0.6.1:GHC.Prim.noDuplicate#
             @ ghc-prim-0.6.1:GHC.Prim.RealWorld s_i5N3
      of s'_i5N4
      { __DEFAULT ->
      case ghc-prim-0.6.1:GHC.Prim.newMutVar#
             @ GHC.ForeignPtr.Finalizers
             @ ghc-prim-0.6.1:GHC.Prim.RealWorld
             GHC.ForeignPtr.NoFinalizers
             s'_i5N4
      of
      { (# ipv_i5Pp, ipv1_i5Pq #) ->
      (# ipv_i5Pp,
         bytestring-0.10.10.0:Data.ByteString.Internal.PS
           Lib.pastEnd7 (GHC.ForeignPtr.PlainForeignPtr ipv1_i5Pq) 0# 539# #)
      }
      }

-- RHS size: {terms: 5, types: 30, coercions: 0, joins: 0/0}
Lib.pastEnd5 :: ByteString
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 30 0}]
Lib.pastEnd5
  = case ghc-prim-0.6.1:GHC.Magic.runRW#
           @ ('ghc-prim-0.6.1:GHC.Types.TupleRep
                '[ 'ghc-prim-0.6.1:GHC.Types.TupleRep '[],
                   'ghc-prim-0.6.1:GHC.Types.LiftedRep])
           @ (# ghc-prim-0.6.1:GHC.Prim.State#
                  ghc-prim-0.6.1:GHC.Prim.RealWorld,
                ByteString #)
           Lib.pastEnd6
    of
    { (# ipv_i5N6, ipv1_i5N7 #) ->
    ipv1_i5N7
    }

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Lib.pastEnd4 :: ghc-prim-0.6.1:GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 1110 0}]
Lib.pastEnd4
  = "\r\aEndDate\NUL\\142\SOH\SOH\rEndDate_match\NUL\\148\SOH\\129\ENQFixed\NUL\\144\SOH2\SOH\aEndDate\NUL\\142\SOH\\129\ENQNever\NUL\\146\SOH\SOH\aEndDate\NUL\\142\SOHq\EOTBool\NUL\STX\SOH\n\
    \Bool_match\NUL\b\\129\EOTTrue\NUL\EOT\SOH\EOTBool\NUL\STX\\129\ENQFalse\NUL\ACK\SOH\EOTBool\NUL\STXQ\DC1lessThanEqInteger\NUL<2\ETX \SOH\EOTBool\NUL\STXa\ETXarg\NUL>\\1441\ETXarg\NUL@\\144;\SOH\SOHb\NULB\\149;\\189\\213A\EOTBool\NUL\STX!\SOHb\NULB!\EOTTrue\NUL\EOT!\ENQFalse\NUL\ACKw\\163\DC1\ETXarg\NUL>!\ETXarg\NUL@\\225\EOTUnit\NUL\SYN\SOH\n\
    \Unit_match\NUL\SUB\\129\EOTUnit\NUL\CAN\SOH\EOTUnit\NUL\SYN\EM\STXds\NUL\\150\SOH\SOH\aEndDate\NUL\\142\SOHa\STXds\NUL\\152\SOH\\144;\\189\\185\SOH\rEndDate_match\NUL\\148\SOH!\STXds\NUL\\150\SOH!\EOTUnit\NUL\SYN\SOH\EOTBool\NUL\STXa\SOHn\NUL\\156\SOH\\1441\ENQthunk\NUL\\158\SOH\SOH\EOTUnit\NUL\SYNw!\DC1lessThanEqInteger\NUL<!\SOHn\NUL\\156\SOH!\STXds\NUL\\152\SOHa\ENQthunk\NUL\\160\SOH\SOH\EOTUnit\NUL\SYN!\ENQFalse\NUL\ACK!\EOTUnit\NUL\CAN\SOH"#

-- RHS size: {terms: 18, types: 29, coercions: 0, joins: 0/0}
Lib.pastEnd3
  :: ghc-prim-0.6.1:GHC.Prim.State# ghc-prim-0.6.1:GHC.Prim.RealWorld
     -> (# ghc-prim-0.6.1:GHC.Prim.State#
             ghc-prim-0.6.1:GHC.Prim.RealWorld,
           ByteString #)
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0] 45 30}]
Lib.pastEnd3
  = \ (s_i5N3 [OS=OneShot]
         :: ghc-prim-0.6.1:GHC.Prim.State#
              ghc-prim-0.6.1:GHC.Prim.RealWorld) ->
      case ghc-prim-0.6.1:GHC.Prim.noDuplicate#
             @ ghc-prim-0.6.1:GHC.Prim.RealWorld s_i5N3
      of s'_i5N4
      { __DEFAULT ->
      case ghc-prim-0.6.1:GHC.Prim.newMutVar#
             @ GHC.ForeignPtr.Finalizers
             @ ghc-prim-0.6.1:GHC.Prim.RealWorld
             GHC.ForeignPtr.NoFinalizers
             s'_i5N4
      of
      { (# ipv_i5Pp, ipv1_i5Pq #) ->
      (# ipv_i5Pp,
         bytestring-0.10.10.0:Data.ByteString.Internal.PS
           Lib.pastEnd4 (GHC.ForeignPtr.PlainForeignPtr ipv1_i5Pq) 0# 439# #)
      }
      }

-- RHS size: {terms: 5, types: 30, coercions: 0, joins: 0/0}
Lib.pastEnd2 :: ByteString
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 30 0}]
Lib.pastEnd2
  = case ghc-prim-0.6.1:GHC.Magic.runRW#
           @ ('ghc-prim-0.6.1:GHC.Types.TupleRep
                '[ 'ghc-prim-0.6.1:GHC.Types.TupleRep '[],
                   'ghc-prim-0.6.1:GHC.Types.LiftedRep])
           @ (# ghc-prim-0.6.1:GHC.Prim.State#
                  ghc-prim-0.6.1:GHC.Prim.RealWorld,
                ByteString #)
           Lib.pastEnd3
    of
    { (# ipv_i5N6, ipv1_i5N7 #) ->
    ipv1_i5N7
    }

-- RHS size: {terms: 2, types: 1, coercions: 0, joins: 0/0}
Lib.pastEnd1 :: Maybe ByteString
[GblId,
 Str=m2,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Lib.pastEnd1 = GHC.Maybe.Just @ ByteString Lib.pastEnd2

-- RHS size: {terms: 3, types: 5, coercions: 0, joins: 0/0}
pastEnd :: CompiledCode (EndDate -> Integer -> Bool)
[GblId,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
pastEnd
  = Language.PlutusTx.Code.SerializedCode
      @ PLC.DefaultUni
      @ PLC.DefaultFun
      @ (EndDate -> Integer -> Bool)
      Lib.pastEnd5
      Lib.pastEnd1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Lib.$trModule4 :: ghc-prim-0.6.1:GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 70 0}]
Lib.$trModule4 = "example-0.1.0.0-inplace"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Lib.$trModule3 :: ghc-prim-0.6.1:GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Lib.$trModule3 = ghc-prim-0.6.1:GHC.Types.TrNameS Lib.$trModule4

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Lib.$trModule2 :: ghc-prim-0.6.1:GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
Lib.$trModule2 = "Lib"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Lib.$trModule1 :: ghc-prim-0.6.1:GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Lib.$trModule1 = ghc-prim-0.6.1:GHC.Types.TrNameS Lib.$trModule2

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Lib.$trModule :: ghc-prim-0.6.1:GHC.Types.Module
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
Lib.$trModule
  = ghc-prim-0.6.1:GHC.Types.Module Lib.$trModule3 Lib.$trModule1

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_r5WE :: ghc-prim-0.6.1:GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep_r5WE
  = ghc-prim-0.6.1:GHC.Types.KindRepTyConApp
      integer-gmp-1.0.3.0:GHC.Integer.Type.$tcInteger
      (ghc-prim-0.6.1:GHC.Types.[] @ ghc-prim-0.6.1:GHC.Types.KindRep)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Lib.$tcEndDate2 :: ghc-prim-0.6.1:GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
Lib.$tcEndDate2 = "EndDate"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Lib.$tcEndDate1 :: ghc-prim-0.6.1:GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Lib.$tcEndDate1 = ghc-prim-0.6.1:GHC.Types.TrNameS Lib.$tcEndDate2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tcEndDate :: ghc-prim-0.6.1:GHC.Types.TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Lib.$tcEndDate
  = ghc-prim-0.6.1:GHC.Types.TyCon
      8554338065373400840##
      3482623708274877127##
      Lib.$trModule
      Lib.$tcEndDate1
      0#
      ghc-prim-0.6.1:GHC.Types.krep$*

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
Lib.$tc'Never1 [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
Lib.$tc'Never1
  = ghc-prim-0.6.1:GHC.Types.KindRepTyConApp
      Lib.$tcEndDate
      (ghc-prim-0.6.1:GHC.Types.[] @ ghc-prim-0.6.1:GHC.Types.KindRep)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Never3 :: ghc-prim-0.6.1:GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
Lib.$tc'Never3 = "'Never"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Never2 :: ghc-prim-0.6.1:GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Lib.$tc'Never2 = ghc-prim-0.6.1:GHC.Types.TrNameS Lib.$tc'Never3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Never :: ghc-prim-0.6.1:GHC.Types.TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Lib.$tc'Never
  = ghc-prim-0.6.1:GHC.Types.TyCon
      10340504404178887934##
      18177538684886749349##
      Lib.$trModule
      Lib.$tc'Never2
      0#
      Lib.$tc'Never1

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Fixed1 [InlPrag=NOUSERINLINE[~]]
  :: ghc-prim-0.6.1:GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
Lib.$tc'Fixed1
  = ghc-prim-0.6.1:GHC.Types.KindRepFun $krep_r5WE Lib.$tc'Never1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Fixed3 :: ghc-prim-0.6.1:GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
Lib.$tc'Fixed3 = "'Fixed"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Fixed2 :: ghc-prim-0.6.1:GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Lib.$tc'Fixed2 = ghc-prim-0.6.1:GHC.Types.TrNameS Lib.$tc'Fixed3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Fixed :: ghc-prim-0.6.1:GHC.Types.TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Lib.$tc'Fixed
  = ghc-prim-0.6.1:GHC.Types.TyCon
      17912921531120851107##
      4815501104477800385##
      Lib.$trModule
      Lib.$tc'Fixed2
      0#
      Lib.$tc'Fixed1




==================== CorePrep ====================
Result size of CorePrep
  = {terms: 140, types: 143, coercions: 0, joins: 0/4}

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Lib.pastEnd7 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
Lib.pastEnd7
  = "\SOH\NUL\NUL35\DC2\SOH\ENQFixed\NUL\NUL!\ENQNever\NUL\NUL!\rEndDate_match\NUL\NUL35\DC2\SOH\EOTTrue\NUL\NUL!\ENQFalse\NUL\NUL!\n\
    \Bool_match\NUL\NUL2\SOH\DC1lessThanEqInteger\NUL\NUL3Q!\EOTUnit\NUL\NUL!\n\
    \Unit_match\NUL\NUL!\STXds\NUL\NUL!\STXds\NUL\NUL350\SOH\rEndDate_match\NUL\t\SOH\STXds\NUL\STX!\SOHn\NUL\NUL!\ENQthunk\NUL\NUL3\SOH\DC1lessThanEqInteger\NUL\a\SOH\SOHn\NUL\STX\SOH\STXds\NUL\ETX!\ENQthunk\NUL\NUL\SOH\ENQFalse\NUL\b\SOH\EOTUnit\NUL\EOT\DC2\SOH\tcase_Unit\NUL\NUL\SOH\tcase_Unit\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH!\ETXarg\NUL\NUL!\ETXarg\NUL\NUL2\SOH\SOHb\NUL\NUL35z\\129\SOHb\NUL\SOH\SOH\EOTTrue\NUL\ACK\SOH\ENQFalse\NUL\ENQ3s\SOH\ETXarg\NUL\STX\SOH\ETXarg\NUL\SOH\DC2\SOH\tcase_True\NUL\NUL!\n\
    \case_False\NUL\NUL\SOH\tcase_True\NUL\STX\DC2\SOH\tcase_True\NUL\NUL!\n\
    \case_False\NUL\NUL\SOH\n\
    \case_False\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH!\ENQarg_0\NUL\NUL\DC2\SOH\n\
    \case_Fixed\NUL\NUL!\n\
    \case_Never\NUL\NUL0\SOH\n\
    \case_Fixed\NUL\STX\SOH\ENQarg_0\NUL\ETX\DC2\SOH\n\
    \case_Fixed\NUL\NUL!\n\
    \case_Never\NUL\NUL\SOH\n\
    \case_Never\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH\SOH"#

-- RHS size: {terms: 22, types: 31, coercions: 0, joins: 0/2}
Lib.pastEnd6
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           Data.ByteString.Internal.ByteString #)
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,U>, Unf=OtherCon []]
Lib.pastEnd6
  = \ (s_s5Ye [Occ=Once, OS=OneShot]
         :: GHC.Prim.State# GHC.Prim.RealWorld) ->
      case GHC.Prim.noDuplicate# @ GHC.Prim.RealWorld s_s5Ye
      of s'_s5Yf [Occ=Once]
      { __DEFAULT ->
      case GHC.Prim.newMutVar#
             @ GHC.ForeignPtr.Finalizers
             @ GHC.Prim.RealWorld
             GHC.ForeignPtr.NoFinalizers
             s'_s5Yf
      of
      { (# ipv_s5Yh [Occ=Once], ipv1_s5Yi [Occ=Once] #) ->
      let {
        sat_s5Yj [Occ=Once] :: GHC.ForeignPtr.ForeignPtrContents
        [LclId]
        sat_s5Yj = GHC.ForeignPtr.PlainForeignPtr ipv1_s5Yi } in
      let {
        sat_s5Yk [Occ=Once] :: Data.ByteString.Internal.ByteString
        [LclId]
        sat_s5Yk
          = Data.ByteString.Internal.PS Lib.pastEnd7 sat_s5Yj 0# 539# } in
      (# ipv_s5Yh, sat_s5Yk #)
      }
      }

-- RHS size: {terms: 5, types: 11, coercions: 0, joins: 0/0}
Lib.pastEnd5 :: Data.ByteString.Internal.ByteString
[GblId]
Lib.pastEnd5
  = case Lib.pastEnd6 GHC.Prim.realWorld# of
    { (# _ [Occ=Dead], ipv1_s5Yn [Occ=Once] #) ->
    ipv1_s5Yn
    }

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Lib.pastEnd4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
Lib.pastEnd4
  = "\r\aEndDate\NUL\\142\SOH\SOH\rEndDate_match\NUL\\148\SOH\\129\ENQFixed\NUL\\144\SOH2\SOH\aEndDate\NUL\\142\SOH\\129\ENQNever\NUL\\146\SOH\SOH\aEndDate\NUL\\142\SOHq\EOTBool\NUL\STX\SOH\n\
    \Bool_match\NUL\b\\129\EOTTrue\NUL\EOT\SOH\EOTBool\NUL\STX\\129\ENQFalse\NUL\ACK\SOH\EOTBool\NUL\STXQ\DC1lessThanEqInteger\NUL<2\ETX \SOH\EOTBool\NUL\STXa\ETXarg\NUL>\\1441\ETXarg\NUL@\\144;\SOH\SOHb\NULB\\149;\\189\\213A\EOTBool\NUL\STX!\SOHb\NULB!\EOTTrue\NUL\EOT!\ENQFalse\NUL\ACKw\\163\DC1\ETXarg\NUL>!\ETXarg\NUL@\\225\EOTUnit\NUL\SYN\SOH\n\
    \Unit_match\NUL\SUB\\129\EOTUnit\NUL\CAN\SOH\EOTUnit\NUL\SYN\EM\STXds\NUL\\150\SOH\SOH\aEndDate\NUL\\142\SOHa\STXds\NUL\\152\SOH\\144;\\189\\185\SOH\rEndDate_match\NUL\\148\SOH!\STXds\NUL\\150\SOH!\EOTUnit\NUL\SYN\SOH\EOTBool\NUL\STXa\SOHn\NUL\\156\SOH\\1441\ENQthunk\NUL\\158\SOH\SOH\EOTUnit\NUL\SYNw!\DC1lessThanEqInteger\NUL<!\SOHn\NUL\\156\SOH!\STXds\NUL\\152\SOHa\ENQthunk\NUL\\160\SOH\SOH\EOTUnit\NUL\SYN!\ENQFalse\NUL\ACK!\EOTUnit\NUL\CAN\SOH"#

-- RHS size: {terms: 22, types: 31, coercions: 0, joins: 0/2}
Lib.pastEnd3
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           Data.ByteString.Internal.ByteString #)
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,U>, Unf=OtherCon []]
Lib.pastEnd3
  = \ (s_s5Yo [Occ=Once, OS=OneShot]
         :: GHC.Prim.State# GHC.Prim.RealWorld) ->
      case GHC.Prim.noDuplicate# @ GHC.Prim.RealWorld s_s5Yo
      of s'_s5Yp [Occ=Once]
      { __DEFAULT ->
      case GHC.Prim.newMutVar#
             @ GHC.ForeignPtr.Finalizers
             @ GHC.Prim.RealWorld
             GHC.ForeignPtr.NoFinalizers
             s'_s5Yp
      of
      { (# ipv_s5Yr [Occ=Once], ipv1_s5Ys [Occ=Once] #) ->
      let {
        sat_s5Yt [Occ=Once] :: GHC.ForeignPtr.ForeignPtrContents
        [LclId]
        sat_s5Yt = GHC.ForeignPtr.PlainForeignPtr ipv1_s5Ys } in
      let {
        sat_s5Yu [Occ=Once] :: Data.ByteString.Internal.ByteString
        [LclId]
        sat_s5Yu
          = Data.ByteString.Internal.PS Lib.pastEnd4 sat_s5Yt 0# 439# } in
      (# ipv_s5Yr, sat_s5Yu #)
      }
      }

-- RHS size: {terms: 5, types: 11, coercions: 0, joins: 0/0}
Lib.pastEnd2 :: Data.ByteString.Internal.ByteString
[GblId]
Lib.pastEnd2
  = case Lib.pastEnd3 GHC.Prim.realWorld# of
    { (# _ [Occ=Dead], ipv1_s5Yx [Occ=Once] #) ->
    ipv1_s5Yx
    }

-- RHS size: {terms: 2, types: 1, coercions: 0, joins: 0/0}
Lib.pastEnd1 :: GHC.Maybe.Maybe Data.ByteString.Internal.ByteString
[GblId, Str=m2, Unf=OtherCon []]
Lib.pastEnd1
  = GHC.Maybe.Just @ Data.ByteString.Internal.ByteString Lib.pastEnd2

-- RHS size: {terms: 3, types: 5, coercions: 0, joins: 0/0}
Lib.pastEnd
  :: Language.PlutusTx.Code.CompiledCode
       (Lib.EndDate -> GHC.Integer.Type.Integer -> GHC.Types.Bool)
[GblId, Str=m1, Unf=OtherCon []]
Lib.pastEnd
  = Language.PlutusTx.Code.SerializedCode
      @ Language.PlutusCore.Universe.Default.DefaultUni
      @ Language.PlutusCore.Builtins.DefaultFun
      @ (Lib.EndDate -> GHC.Integer.Type.Integer -> GHC.Types.Bool)
      Lib.pastEnd5
      Lib.pastEnd1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Lib.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
Lib.$trModule4 = "example-0.1.0.0-inplace"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Lib.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
Lib.$trModule3 = GHC.Types.TrNameS Lib.$trModule4

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Lib.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
Lib.$trModule2 = "Lib"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Lib.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
Lib.$trModule1 = GHC.Types.TrNameS Lib.$trModule2

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Lib.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
Lib.$trModule = GHC.Types.Module Lib.$trModule3 Lib.$trModule1

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_r5WE :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep_r5WE
  = GHC.Types.KindRepTyConApp
      GHC.Integer.Type.$tcInteger (GHC.Types.[] @ GHC.Types.KindRep)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Lib.$tcEndDate2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
Lib.$tcEndDate2 = "EndDate"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Lib.$tcEndDate1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
Lib.$tcEndDate1 = GHC.Types.TrNameS Lib.$tcEndDate2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tcEndDate :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
Lib.$tcEndDate
  = GHC.Types.TyCon
      8554338065373400840##
      3482623708274877127##
      Lib.$trModule
      Lib.$tcEndDate1
      0#
      GHC.Types.krep$*

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
Lib.$tc'Never1 [InlPrag=NOUSERINLINE[~]] :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
Lib.$tc'Never1
  = GHC.Types.KindRepTyConApp
      Lib.$tcEndDate (GHC.Types.[] @ GHC.Types.KindRep)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Never3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
Lib.$tc'Never3 = "'Never"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Never2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
Lib.$tc'Never2 = GHC.Types.TrNameS Lib.$tc'Never3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Never :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
Lib.$tc'Never
  = GHC.Types.TyCon
      10340504404178887934##
      18177538684886749349##
      Lib.$trModule
      Lib.$tc'Never2
      0#
      Lib.$tc'Never1

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Fixed1 [InlPrag=NOUSERINLINE[~]] :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
Lib.$tc'Fixed1 = GHC.Types.KindRepFun $krep_r5WE Lib.$tc'Never1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Fixed3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
Lib.$tc'Fixed3 = "'Fixed"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Fixed2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
Lib.$tc'Fixed2 = GHC.Types.TrNameS Lib.$tc'Fixed3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Fixed :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
Lib.$tc'Fixed
  = GHC.Types.TyCon
      17912921531120851107##
      4815501104477800385##
      Lib.$trModule
      Lib.$tc'Fixed2
      0#
      Lib.$tc'Fixed1

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
Lib.Fixed :: GHC.Integer.Type.Integer -> Lib.EndDate
[GblId[DataCon],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U>m1,
 Unf=OtherCon []]
Lib.Fixed
  = \ (eta_B1 [Occ=Once] :: GHC.Integer.Type.Integer) ->
      Lib.Fixed eta_B1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Lib.Never :: Lib.EndDate
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []]
Lib.Never = Lib.Never




==================== CorePrep ====================
Result size of CorePrep
  = {terms: 140, types: 143, coercions: 0, joins: 0/4}

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Lib.pastEnd7 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
Lib.pastEnd7
  = "\SOH\NUL\NUL35\DC2\SOH\ENQFixed\NUL\NUL!\ENQNever\NUL\NUL!\rEndDate_match\NUL\NUL35\DC2\SOH\EOTTrue\NUL\NUL!\ENQFalse\NUL\NUL!\n\
    \Bool_match\NUL\NUL2\SOH\DC1lessThanEqInteger\NUL\NUL3Q!\EOTUnit\NUL\NUL!\n\
    \Unit_match\NUL\NUL!\STXds\NUL\NUL!\STXds\NUL\NUL350\SOH\rEndDate_match\NUL\t\SOH\STXds\NUL\STX!\SOHn\NUL\NUL!\ENQthunk\NUL\NUL3\SOH\DC1lessThanEqInteger\NUL\a\SOH\SOHn\NUL\STX\SOH\STXds\NUL\ETX!\ENQthunk\NUL\NUL\SOH\ENQFalse\NUL\b\SOH\EOTUnit\NUL\EOT\DC2\SOH\tcase_Unit\NUL\NUL\SOH\tcase_Unit\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH!\ETXarg\NUL\NUL!\ETXarg\NUL\NUL2\SOH\SOHb\NUL\NUL35z\\129\SOHb\NUL\SOH\SOH\EOTTrue\NUL\ACK\SOH\ENQFalse\NUL\ENQ3s\SOH\ETXarg\NUL\STX\SOH\ETXarg\NUL\SOH\DC2\SOH\tcase_True\NUL\NUL!\n\
    \case_False\NUL\NUL\SOH\tcase_True\NUL\STX\DC2\SOH\tcase_True\NUL\NUL!\n\
    \case_False\NUL\NUL\SOH\n\
    \case_False\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH!\ENQarg_0\NUL\NUL\DC2\SOH\n\
    \case_Fixed\NUL\NUL!\n\
    \case_Never\NUL\NUL0\SOH\n\
    \case_Fixed\NUL\STX\SOH\ENQarg_0\NUL\ETX\DC2\SOH\n\
    \case_Fixed\NUL\NUL!\n\
    \case_Never\NUL\NUL\SOH\n\
    \case_Never\NUL\SOH!\SOHx\NUL\NUL\SOH\SOHx\NUL\SOH\SOH"#

-- RHS size: {terms: 22, types: 31, coercions: 0, joins: 0/2}
Lib.pastEnd6
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           Data.ByteString.Internal.ByteString #)
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,U>, Unf=OtherCon []]
Lib.pastEnd6
  = \ (s_s60B [Occ=Once, OS=OneShot]
         :: GHC.Prim.State# GHC.Prim.RealWorld) ->
      case GHC.Prim.noDuplicate# @ GHC.Prim.RealWorld s_s60B
      of s'_s60C [Occ=Once]
      { __DEFAULT ->
      case GHC.Prim.newMutVar#
             @ GHC.ForeignPtr.Finalizers
             @ GHC.Prim.RealWorld
             GHC.ForeignPtr.NoFinalizers
             s'_s60C
      of
      { (# ipv_s60E [Occ=Once], ipv1_s60F [Occ=Once] #) ->
      let {
        sat_s60G [Occ=Once] :: GHC.ForeignPtr.ForeignPtrContents
        [LclId]
        sat_s60G = GHC.ForeignPtr.PlainForeignPtr ipv1_s60F } in
      let {
        sat_s60H [Occ=Once] :: Data.ByteString.Internal.ByteString
        [LclId]
        sat_s60H
          = Data.ByteString.Internal.PS Lib.pastEnd7 sat_s60G 0# 539# } in
      (# ipv_s60E, sat_s60H #)
      }
      }

-- RHS size: {terms: 5, types: 11, coercions: 0, joins: 0/0}
Lib.pastEnd5 :: Data.ByteString.Internal.ByteString
[GblId]
Lib.pastEnd5
  = case Lib.pastEnd6 GHC.Prim.realWorld# of
    { (# _ [Occ=Dead], ipv1_s60K [Occ=Once] #) ->
    ipv1_s60K
    }

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Lib.pastEnd4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
Lib.pastEnd4
  = "\r\aEndDate\NUL\\142\SOH\SOH\rEndDate_match\NUL\\148\SOH\\129\ENQFixed\NUL\\144\SOH2\SOH\aEndDate\NUL\\142\SOH\\129\ENQNever\NUL\\146\SOH\SOH\aEndDate\NUL\\142\SOHq\EOTBool\NUL\STX\SOH\n\
    \Bool_match\NUL\b\\129\EOTTrue\NUL\EOT\SOH\EOTBool\NUL\STX\\129\ENQFalse\NUL\ACK\SOH\EOTBool\NUL\STXQ\DC1lessThanEqInteger\NUL<2\ETX \SOH\EOTBool\NUL\STXa\ETXarg\NUL>\\1441\ETXarg\NUL@\\144;\SOH\SOHb\NULB\\149;\\189\\213A\EOTBool\NUL\STX!\SOHb\NULB!\EOTTrue\NUL\EOT!\ENQFalse\NUL\ACKw\\163\DC1\ETXarg\NUL>!\ETXarg\NUL@\\225\EOTUnit\NUL\SYN\SOH\n\
    \Unit_match\NUL\SUB\\129\EOTUnit\NUL\CAN\SOH\EOTUnit\NUL\SYN\EM\STXds\NUL\\150\SOH\SOH\aEndDate\NUL\\142\SOHa\STXds\NUL\\152\SOH\\144;\\189\\185\SOH\rEndDate_match\NUL\\148\SOH!\STXds\NUL\\150\SOH!\EOTUnit\NUL\SYN\SOH\EOTBool\NUL\STXa\SOHn\NUL\\156\SOH\\1441\ENQthunk\NUL\\158\SOH\SOH\EOTUnit\NUL\SYNw!\DC1lessThanEqInteger\NUL<!\SOHn\NUL\\156\SOH!\STXds\NUL\\152\SOHa\ENQthunk\NUL\\160\SOH\SOH\EOTUnit\NUL\SYN!\ENQFalse\NUL\ACK!\EOTUnit\NUL\CAN\SOH"#

-- RHS size: {terms: 22, types: 31, coercions: 0, joins: 0/2}
Lib.pastEnd3
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           Data.ByteString.Internal.ByteString #)
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,U>, Unf=OtherCon []]
Lib.pastEnd3
  = \ (s_s60L [Occ=Once, OS=OneShot]
         :: GHC.Prim.State# GHC.Prim.RealWorld) ->
      case GHC.Prim.noDuplicate# @ GHC.Prim.RealWorld s_s60L
      of s'_s60M [Occ=Once]
      { __DEFAULT ->
      case GHC.Prim.newMutVar#
             @ GHC.ForeignPtr.Finalizers
             @ GHC.Prim.RealWorld
             GHC.ForeignPtr.NoFinalizers
             s'_s60M
      of
      { (# ipv_s60O [Occ=Once], ipv1_s60P [Occ=Once] #) ->
      let {
        sat_s60Q [Occ=Once] :: GHC.ForeignPtr.ForeignPtrContents
        [LclId]
        sat_s60Q = GHC.ForeignPtr.PlainForeignPtr ipv1_s60P } in
      let {
        sat_s60R [Occ=Once] :: Data.ByteString.Internal.ByteString
        [LclId]
        sat_s60R
          = Data.ByteString.Internal.PS Lib.pastEnd4 sat_s60Q 0# 439# } in
      (# ipv_s60O, sat_s60R #)
      }
      }

-- RHS size: {terms: 5, types: 11, coercions: 0, joins: 0/0}
Lib.pastEnd2 :: Data.ByteString.Internal.ByteString
[GblId]
Lib.pastEnd2
  = case Lib.pastEnd3 GHC.Prim.realWorld# of
    { (# _ [Occ=Dead], ipv1_s60U [Occ=Once] #) ->
    ipv1_s60U
    }

-- RHS size: {terms: 2, types: 1, coercions: 0, joins: 0/0}
Lib.pastEnd1 :: GHC.Maybe.Maybe Data.ByteString.Internal.ByteString
[GblId, Str=m2, Unf=OtherCon []]
Lib.pastEnd1
  = GHC.Maybe.Just @ Data.ByteString.Internal.ByteString Lib.pastEnd2

-- RHS size: {terms: 3, types: 5, coercions: 0, joins: 0/0}
Lib.pastEnd
  :: Language.PlutusTx.Code.CompiledCode
       (Lib.EndDate -> GHC.Integer.Type.Integer -> GHC.Types.Bool)
[GblId, Str=m1, Unf=OtherCon []]
Lib.pastEnd
  = Language.PlutusTx.Code.SerializedCode
      @ Language.PlutusCore.Universe.Default.DefaultUni
      @ Language.PlutusCore.Builtins.DefaultFun
      @ (Lib.EndDate -> GHC.Integer.Type.Integer -> GHC.Types.Bool)
      Lib.pastEnd5
      Lib.pastEnd1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Lib.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
Lib.$trModule4 = "example-0.1.0.0-inplace"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Lib.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
Lib.$trModule3 = GHC.Types.TrNameS Lib.$trModule4

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Lib.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
Lib.$trModule2 = "Lib"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Lib.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
Lib.$trModule1 = GHC.Types.TrNameS Lib.$trModule2

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Lib.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
Lib.$trModule = GHC.Types.Module Lib.$trModule3 Lib.$trModule1

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_r5WE :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep_r5WE
  = GHC.Types.KindRepTyConApp
      GHC.Integer.Type.$tcInteger (GHC.Types.[] @ GHC.Types.KindRep)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Lib.$tcEndDate2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
Lib.$tcEndDate2 = "EndDate"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Lib.$tcEndDate1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
Lib.$tcEndDate1 = GHC.Types.TrNameS Lib.$tcEndDate2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tcEndDate :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
Lib.$tcEndDate
  = GHC.Types.TyCon
      8554338065373400840##
      3482623708274877127##
      Lib.$trModule
      Lib.$tcEndDate1
      0#
      GHC.Types.krep$*

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
Lib.$tc'Never1 [InlPrag=NOUSERINLINE[~]] :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
Lib.$tc'Never1
  = GHC.Types.KindRepTyConApp
      Lib.$tcEndDate (GHC.Types.[] @ GHC.Types.KindRep)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Never3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
Lib.$tc'Never3 = "'Never"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Never2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
Lib.$tc'Never2 = GHC.Types.TrNameS Lib.$tc'Never3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Never :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
Lib.$tc'Never
  = GHC.Types.TyCon
      10340504404178887934##
      18177538684886749349##
      Lib.$trModule
      Lib.$tc'Never2
      0#
      Lib.$tc'Never1

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Fixed1 [InlPrag=NOUSERINLINE[~]] :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
Lib.$tc'Fixed1 = GHC.Types.KindRepFun $krep_r5WE Lib.$tc'Never1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Fixed3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
Lib.$tc'Fixed3 = "'Fixed"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Fixed2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
Lib.$tc'Fixed2 = GHC.Types.TrNameS Lib.$tc'Fixed3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Lib.$tc'Fixed :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
Lib.$tc'Fixed
  = GHC.Types.TyCon
      17912921531120851107##
      4815501104477800385##
      Lib.$trModule
      Lib.$tc'Fixed2
      0#
      Lib.$tc'Fixed1

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
Lib.Fixed :: GHC.Integer.Type.Integer -> Lib.EndDate
[GblId[DataCon],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U>m1,
 Unf=OtherCon []]
Lib.Fixed
  = \ (eta_B1 [Occ=Once] :: GHC.Integer.Type.Integer) ->
      Lib.Fixed eta_B1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Lib.Never :: Lib.EndDate
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []]
Lib.Never = Lib.Never



